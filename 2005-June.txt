From rsmudge at sheep.berlios.de  Sun Jun  5 15:00:16 2005
From: rsmudge at sheep.berlios.de (Raphael Mudge at BerliOS)
Date: Sun, 5 Jun 2005 15:00:16 +0200
Subject: [Jircii-svn] r4 - rero/lib
Message-ID: <200506051300.j55D0G4l022128@sheep.berlios.de>

Author: rsmudge
Date: 2005-06-05 15:00:07 +0200 (Sun, 05 Jun 2005)
New Revision: 4

Modified:
   rero/lib/sleep.jar
Log:
Scripting library version bump to 2.0-b8


Modified: rero/lib/sleep.jar
===================================================================
(Binary files differ)



From rsmudge at sheep.berlios.de  Sun Jun  5 15:48:16 2005
From: rsmudge at sheep.berlios.de (Raphael Mudge at BerliOS)
Date: Sun, 5 Jun 2005 15:48:16 +0200
Subject: [Jircii-svn] r5 - rero/lib
Message-ID: <200506051348.j55DmG5K025348@sheep.berlios.de>

Author: rsmudge
Date: 2005-06-05 15:48:14 +0200 (Sun, 05 Jun 2005)
New Revision: 5

Modified:
   rero/lib/sleep.jar
Log:
Patched jar file with some fixes.


Modified: rero/lib/sleep.jar
===================================================================
(Binary files differ)



From rsmudge at sheep.berlios.de  Sat Jun 11 17:13:39 2005
From: rsmudge at sheep.berlios.de (Raphael Mudge at BerliOS)
Date: Sat, 11 Jun 2005 17:13:39 +0200
Subject: [Jircii-svn] r15 - in rero: resources/help resources/toplevel src/text
Message-ID: <200506111513.j5BFDddE010940@sheep.berlios.de>

Author: rsmudge
Date: 2005-06-11 17:13:38 +0200 (Sat, 11 Jun 2005)
New Revision: 15

Modified:
   rero/resources/help/KB_Shortcuts
   rero/resources/toplevel/whatsnew.txt
   rero/src/text/FindDialog.java
Log:
Small updates


Modified: rero/resources/help/KB_Shortcuts
===================================================================
--- rero/resources/help/KB_Shortcuts	2005-06-11 14:20:27 UTC (rev 14)
+++ rero/resources/help/KB_Shortcuts	2005-06-11 15:13:38 UTC (rev 15)
@@ -73,3 +73,8 @@
 <br>
 <br>Scrolling through the contents of a window can be accomplished using Page Up and Page down.
 <br>
+<br><b>Search Scrollback Buffer</b></font>
+<br>
+<br>Searching through the scrollback buffer of a window can be accomplished using Alt+F, Ctrl+F, or Meta+F.  The window can be closed with the Escape key.
+<br>
+

Modified: rero/resources/toplevel/whatsnew.txt
===================================================================
--- rero/resources/toplevel/whatsnew.txt	2005-06-11 14:20:27 UTC (rev 14)
+++ rero/resources/toplevel/whatsnew.txt	2005-06-11 15:13:38 UTC (rev 15)
@@ -2,6 +2,16 @@
 ====
 - upgraded scripting library to Sleep 2.0-release candidate bringing 
   several bug fixes and a few new features
+  -- foreach loops now automatically convert hash parameters into their keyset.
+  -- added a new foreach syntax:
+     foreach $index => $value (source) { }
+  -- the remove() function now takes multiple parameters for multiple items to 
+      remove.
+  -- fixed a bug parsing tuple assignments in certain cases.
+  -- added a &subarray(@array, n, [m]) function for extracting an array slice
+  -- reworked the pack/unpack format strings to make them more useful
+  -- fixed a bug with the pack/unpack format string parser not assigning the 
+     specified integer to the last format character.
 - fixed Window menubar menu showing the Status window twice.
 - fixed bug with empty ison replies echo'ing to the status window (I think)
 - removed synchronization from the channel users data structure.  the 

Modified: rero/src/text/FindDialog.java
===================================================================
--- rero/src/text/FindDialog.java	2005-06-11 14:20:27 UTC (rev 14)
+++ rero/src/text/FindDialog.java	2005-06-11 15:13:38 UTC (rev 15)
@@ -17,12 +17,14 @@
  
    public void showDialog()
    {
+      rero.gui.KeyBindings.is_dialog_active = true;
       results = null;
       next.setEnabled(false);
       prev.setEnabled(true);
       pack();
       setLocationRelativeTo(display);
       setVisible(true);
+      search.requestFocus();
    }
 
    public FindDialog(Component comp, String title, WrappedDisplay _display, String text)
@@ -36,6 +38,12 @@
        search = new JTextField(text, 20);
        search.addKeyListener(this);
        search.addActionListener(this);
+       search.addFocusListener(new FocusAdapter() {
+           public void focusLost(FocusEvent ev) 
+           {
+              search.requestFocus();
+           }
+       }); 
 
        JPanel panel = new JPanel();
        panel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));       
@@ -64,7 +72,14 @@
 
        getContentPane().add(buttons, BorderLayout.SOUTH);
 
-       setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
+       addWindowListener(new WindowAdapter()
+       {
+          public void windowClosing(WindowEvent e)
+          {
+             rero.gui.KeyBindings.is_dialog_active = false;
+             setVisible(false);
+          }
+       });
    }
 
    public static void main(String args[])
@@ -80,8 +95,14 @@
    public void keyPressed(KeyEvent ev) { }
    public void keyReleased(KeyEvent ev) 
    { 
-       if (!ev.isActionKey() && ev.getKeyCode() != KeyEvent.VK_ENTER)
+       if (ev.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
+          rero.gui.KeyBindings.is_dialog_active = false;
+          setVisible(false);
+          ev.consume();
+       }
+       else if (!ev.isActionKey() && ev.getKeyCode() != KeyEvent.VK_ENTER)
+       {
           results = null;
           next.setEnabled(search.getText().length() > 0);
           prev.setEnabled(search.getText().length() > 0);



From rsmudge at sheep.berlios.de  Sat Jun 18 03:14:14 2005
From: rsmudge at sheep.berlios.de (Raphael Mudge at BerliOS)
Date: Sat, 18 Jun 2005 03:14:14 +0200
Subject: [Jircii-svn] r22 - in rero: lib resources/resource resources/toplevel resources/toplevel/docs src/rero/client/functions src/rero/client/script src/rero/config src/rero/dialogs src/rero/ircfw src/text src/text/wrapped
Message-ID: <200506180114.j5I1EEjF020733@sheep.berlios.de>

Author: rsmudge
Date: 2005-06-18 03:13:48 +0200 (Sat, 18 Jun 2005)
New Revision: 22

Modified:
   rero/lib/sleep.jar
   rero/resources/resource/default.irc
   rero/resources/toplevel/docs/scriptjirc.pdf
   rero/resources/toplevel/docs/sleeplang.pdf
   rero/resources/toplevel/readme.txt
   rero/resources/toplevel/whatsnew.txt
   rero/src/rero/client/functions/TimerOperators.java
   rero/src/rero/client/script/ScriptManager.java
   rero/src/rero/config/ClientDefaults.java
   rero/src/rero/dialogs/AboutWindow.java
   rero/src/rero/ircfw/CTCPParser.java
   rero/src/text/FindDialog.java
   rero/src/text/wrapped/SelectionSpace.java
Log:
Beta 36 Changes:
- added localip() function for retrieving local ip address used for dccs
- added getNextPort() for retrieving the next dcc port to be used
- fixed dcc chat, actions, etc. to preserve leading spaces.
- resynchronized the sorted users stuff
- added an overly redunant check to prevent scripts from being loaded twice.
- implemented a check to ensure timers don't execute closures from unloaded
  scripts.
- fixed the find dialog (Ctrl+F) not working in certain look and feels
- fixed $parms in actions from retaining the word ACTION
- Upgraded to Sleep 2.0-b9
- fixed small selection bug


Modified: rero/lib/sleep.jar
===================================================================
(Binary files differ)

Modified: rero/resources/resource/default.irc
===================================================================
--- rero/resources/resource/default.irc	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/resources/resource/default.irc	2005-06-18 01:13:48 UTC (rev 22)
@@ -759,7 +759,6 @@
 
 set SEND_START
 {
-   printf("Start of send to $nick");
    return "\c42$nnn Send to $nick has started";
 }
 

Modified: rero/resources/toplevel/docs/scriptjirc.pdf
===================================================================
(Binary files differ)

Modified: rero/resources/toplevel/docs/sleeplang.pdf
===================================================================
(Binary files differ)

Modified: rero/resources/toplevel/readme.txt
===================================================================
--- rero/resources/toplevel/readme.txt	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/resources/toplevel/readme.txt	2005-06-18 01:13:48 UTC (rev 22)
@@ -1,5 +1,5 @@
  ------- -------------------- ---------   ---------------  ------- ---------
-jIRCii - Beta (35) 06.11.05 - README
+jIRCii - Beta (36) 06.18.05 - README
 -  ------------- -------- -   ---------------- --       -    -     -     - - -
 
 The official jIRCii homepage is at: http://jircii.hick.org

Modified: rero/resources/toplevel/whatsnew.txt
===================================================================
--- rero/resources/toplevel/whatsnew.txt	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/resources/toplevel/whatsnew.txt	2005-06-18 01:13:48 UTC (rev 22)
@@ -1,3 +1,17 @@
+Beta   36 release 06.18.05
+====
+- added localip() function for retrieving local ip address used for dccs
+- added getNextPort() for retrieving the next dcc port to be used
+- fixed dcc chat, actions, etc. to preserve leading spaces.
+- resynchronized the sorted users stuff
+- added an overly redunant check to prevent scripts from being loaded twice.
+- implemented a check to ensure timers don't execute closures from unloaded
+  scripts.
+- fixed the find dialog (Ctrl+F) not working in certain look and feels
+- fixed $parms in actions from retaining the word ACTION
+- upgraded to Sleep 2.0-b9 (many many cool additions/changes)
+- fixed small selection bug
+
 Beta   35 Release 06.11.05
 ====
 - upgraded scripting library to Sleep 2.0-release candidate bringing 

Modified: rero/src/rero/client/functions/TimerOperators.java
===================================================================
--- rero/src/rero/client/functions/TimerOperators.java	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/src/rero/client/functions/TimerOperators.java	2005-06-18 01:13:48 UTC (rev 22)
@@ -97,6 +97,14 @@
 
       public void timerExecute()
       {
+         if (si == null || !si.isLoaded())
+         {
+            args = null;
+            si   = null;
+            func = null;
+            return;
+         }
+
          Stack arg_stack = new Stack();
          if (args != null)
             arg_stack.push(args);

Modified: rero/src/rero/client/script/ScriptManager.java
===================================================================
--- rero/src/rero/client/script/ScriptManager.java	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/src/rero/client/script/ScriptManager.java	2005-06-18 01:13:48 UTC (rev 22)
@@ -67,7 +67,12 @@
       i = load.iterator();
       while (i.hasNext())
       {
-         internalScriptLoad((String)i.next());
+         String tt = (String)i.next();
+         if (!loader.isLoaded(tt))
+         {   
+            internalScriptLoad(tt); // this check is overly redundant, however if a script loads a script while this operation is
+                                    // taking place things will have the potential to break, never any fun
+         }
       }
    }
 

Modified: rero/src/rero/config/ClientDefaults.java
===================================================================
--- rero/src/rero/config/ClientDefaults.java	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/src/rero/config/ClientDefaults.java	2005-06-18 01:13:48 UTC (rev 22)
@@ -74,7 +74,7 @@
 
    public static final boolean update_ial     = true;
 
-   public static final String  version_string = "06.11.05";
+   public static final String  version_string = "06.18.05";
 
    static
    {

Modified: rero/src/rero/dialogs/AboutWindow.java
===================================================================
--- rero/src/rero/dialogs/AboutWindow.java	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/src/rero/dialogs/AboutWindow.java	2005-06-18 01:13:48 UTC (rev 22)
@@ -217,12 +217,12 @@
             }
             else if (buffer.toString().toLowerCase().equals(superEliteEncryption("jroon")))
             {
-               randomText = textTables[11];
+               randomText = textTables[9];
                activateEgg();
             }
             else if (buffer.toString().toLowerCase().equals(superEliteEncryption("sybbq")))
             {
-               randomText = textTables[10];
+               randomText = textTables[8];
                activateEgg();
             }
 

Modified: rero/src/rero/ircfw/CTCPParser.java
===================================================================
--- rero/src/rero/ircfw/CTCPParser.java	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/src/rero/ircfw/CTCPParser.java	2005-06-18 01:13:48 UTC (rev 22)
@@ -19,7 +19,7 @@
 
 public class CTCPParser implements FrameworkConstants
 {
-   protected static String ctcpPattern = "\001(\\w++)\\s*(.*)\001";
+   protected static String ctcpPattern = "\001(\\w++)(\\s*)(.*)\001";
 
    protected static Pattern isCTCP = Pattern.compile(ctcpPattern);
 
@@ -46,7 +46,7 @@
        }
        
        type       = parser.getParsedString(0); // thank god for regex's this would have taken forever
-       parameters = parser.getParsedString(1); // to code out before.
+       parameters = parser.getParsedString(2); // to code out before.
 
        parms = type + " " + parameters;
        data  = target + " " + parms;       
@@ -55,6 +55,14 @@
        {
           event = "ACTION";
           data  = target + " " + parameters;       
+
+          String whitespace = parser.getParsedString(1);
+          if (whitespace.length() > 1)
+          {
+             parameters = whitespace.substring(1) + parameters;
+          }
+
+          parms = parameters;
        }
 
        if (event.equals("PRIVMSG"))

Modified: rero/src/text/FindDialog.java
===================================================================
--- rero/src/text/FindDialog.java	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/src/text/FindDialog.java	2005-06-18 01:13:48 UTC (rev 22)
@@ -38,12 +38,6 @@
        search = new JTextField(text, 20);
        search.addKeyListener(this);
        search.addActionListener(this);
-       search.addFocusListener(new FocusAdapter() {
-           public void focusLost(FocusEvent ev) 
-           {
-              search.requestFocus();
-           }
-       }); 
 
        JPanel panel = new JPanel();
        panel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));       
@@ -142,5 +136,7 @@
 
        next.setEnabled(results.hasNext());
        prev.setEnabled(results.hasPrevious());
+
+       search.requestFocus();
    }
 }

Modified: rero/src/text/wrapped/SelectionSpace.java
===================================================================
--- rero/src/text/wrapped/SelectionSpace.java	2005-06-13 09:36:45 UTC (rev 21)
+++ rero/src/text/wrapped/SelectionSpace.java	2005-06-18 01:13:48 UTC (rev 22)
@@ -67,7 +67,7 @@
     {
        pixely -= 5;
        int height = TextSource.fontMetrics.getHeight() + 2;
-       return ((pixely) - ((pixely) % height)) / height;
+       return (pixely - (pixely % height)) / height;
     }
 
     protected int translateToPixel(int lineno)
@@ -181,7 +181,7 @@
              start = (int)changed.getY();
           }
 
-          int end   = translateToPixel(lineEnd + 1) - start;   
+          int end   = translateToPixel(lineEnd + 2) - start;   
 
           if (end < changed.getHeight())
           {



From rsmudge at sheep.berlios.de  Sat Jun 11 16:20:44 2005
From: rsmudge at sheep.berlios.de (Raphael Mudge at BerliOS)
Date: Sat, 11 Jun 2005 16:20:44 +0200
Subject: [Jircii-svn] r14 - in rero: resources/toplevel resources/toplevel/docs src/rero/config
Message-ID: <200506111420.j5BEKiou007591@sheep.berlios.de>

Author: rsmudge
Date: 2005-06-11 16:20:27 +0200 (Sat, 11 Jun 2005)
New Revision: 14

Modified:
   rero/resources/toplevel/docs/jircii.faq
   rero/resources/toplevel/docs/scriptjirc.pdf
   rero/resources/toplevel/docs/sleeplang.pdf
   rero/resources/toplevel/readme.txt
   rero/resources/toplevel/whatsnew.txt
   rero/src/rero/config/ClientDefaults.java
Log:
Preparing for release of jIRCii b35


Modified: rero/resources/toplevel/docs/jircii.faq
===================================================================
--- rero/resources/toplevel/docs/jircii.faq	2005-06-11 10:12:04 UTC (rev 13)
+++ rero/resources/toplevel/docs/jircii.faq	2005-06-11 14:20:27 UTC (rev 14)
@@ -1,845 +1,845 @@
-jircii faq - distributed with jircii 05.08.05:
-
-               .sS$$Ss.                           .sS$$Ss. .sS$$Ss.
-               $$$$$$$$                           $$$$$$$$ $$$$$$$$
-               $$$$$$$$                           $$$$$$$$ $$$$$$$$
-               `?$$$$P'                           `?$$$$P' `?$$$$P'
-
-         $$$Ss. $$$$$$ """""""$$$Ss. """""""$$$Ss. $$$$$$   $$$$$$
-         $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$   $$$$$$
-         $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$        $$$$$$   $$$$$$
-  """""" $$$$$$ $$$$$$ $$$$$$        $$$$$$ $$$$$$ $$$$$$   $$$$$$
-  $$$$$$ $$$$$$ $$$$$$ $$$$$$ 050805 $$$$$$ $$$$$$ $$$$$$   $$$$$$
-  $$$$$$ $$$$$$ $$$$$$ $$$$$$        `?$$$$s$$$$P' $$$$$$   $$$$$$
-  `?$$$$s$$$$P'                                        
-
-
-Questions:
-
- 1. What is jIRCii?
- 2. Where can I get jIRCii?
-
- 3. How do I create a shortcut for jIRCii on Windows?
- 4. How do I get rid of the DOS Window when running jIRCii on Windows? 
- 5. I'm having trouble opening some URL's on Windows.
-
- 6. Why does jIRCii use Internet Explorer by default on Windows?
- 7. Is there any way to minimize jIRCii to the system tray?
- 8. How do I make Windows web browsers use jIRCii for irc:// links?
-
- 9. What do the faded nicknames in the channel listbox mean?
-10. What is a jIRCii theme?
-11. How do I copy and paste in jIRCii?
-12. Where does jIRCii store its settings?
-13. How do I edit the jIRCii color scheme?
-14. How can I change ________ in the default jIRCii script?
-15. Is it possible to assign keyboard shortcuts in jIRCii?
-16. How do I get 24-hour format time stamps?
-
-17. What is the difference between a .THM and a .IRC file?
-18. How do I reload jIRCii scripts?
-
-19. What options need to be filled in to connect to an irc server?
-20. How do I connect to multiple servers?  What command do I use?
-21. How do I close the current IRC session?
-22. How do I connect to an SSL server?
-
-23. How do I create a list of channels to automatically join?
-24. How do I set jIRCii to automatically connect to a server on startup?
-25. How can I make the server tabs get my attention when something happens?
-
-26. How do I specify my own local IP address information for DCCs?
-27. What is Ident?  Do I have to use it?
-
-28. How do I use a different Java look and feel with jIRCii?
-29. How do I make my statusbar transparent?
-30. How do I change the statusbar color?
-31. How can I set a background image in jIRCii?
-32. Can I make jIRCii windows transparent?
-
-33. Why don't you allow plugins written in Java, C, Python, Visual Basic etc.?
-
-34. Will you ever charge money for jIRCii?
-35. Can I get the jIRCii source code?
-36. Can I use portions of jIRCii's source code in my GPL project?
-37. What do the release designations (stable, beta) mean?
-38. How do I embed jIRCii into my website?
-
-39. What development environment do you use?
-40. Why write another Java IRC Client?
-41. What clients did you rip^H^H^H receive inspiration from?
-42. How long has jIRCii been in development?
-43. Why don't you wait until you have more changes to do a release?
-
-44. I disabled my jircii menubar, how do I get it back?
-45. How do I reset the jIRCii settings?
-46. My jIRCii window flashes or acts crazy occasionally, what's wrong?
-
-If a question you would like answered is not here then post your question to 
-the jIRCii Message Board at http://jircii.hick.org/jirc/wwwboard.prl
-
-
-Begin jIRCii FAQ:
-
- 1. What is jIRCii?
-   
-    jIRCii is a client for the Internet Relay Chat (IRC) protocol.  IRC is
-    a chat protocol (duh!).  
- 
-    jIRCii is more than just a bare bones IRC Client though.  jIRCii 
-    includes most of the features of an advanced IRC script.  Features
-    such as advanced tab-key completion, over 70 common sense aliases,
-    notify list, ignore list, etc.
-   
-    jIRCii is very adaptable i.e. you can IRC through multiple windows 
-    with an interface that resembles mIRC, or you can IRC through a 
-    single window with an interface that resembles ircii.
-
-    It is also possible to customize jIRCii by writing scripts in the 
-    perl-like language sleep.  Other clients have an awkward interface for
-    interfacing scripts with their software.  Sleep is directly integrated
-    with jIRCii in a common sense manner.  It is powerful enough to keep
-    the advanced coder happy and easy enough to learn that first time 
-    scripters can customize the client to their hearts content. 
-
-    As a side note, jIRCii is written in Java, but don't let that fool 
-    you.  This client was written with speed in mind.
- 
-    If your an old school IRC user looking for a solid modern client, 
-    that isn't lame, then jIRCii is the IRC client you have been waiting 
-    for.
- 
- 2. Where can I get jIRCii?
-
-    The folks over at hick.org have been cool enough to host the jIRCii
-    Resource Center.  You can download jIRCii addons, scripts, and themes
-    at: http://jircii.hick.org/
-
-    Assuming a nuclear blast hits the data center hick.org is in, or 
-    someone stops paying the bill then a more permanent archive with 
-    jIRCii is available on sourceforge.net:
-
-    http://sourceforge.net/projects/jircii/
-
-    The latest version of jIRCii is always mirrored at:
-
-    http://jircii.leenux.net/
-
- 3. How do I create a shortcut for jIRCii on Windows?
-
-    a. Right click on the desktop, select New, then select Create Shortcut
-    b. In the location field fill in something resembling the following:
-       c:\path-to\jircii.exe
-    c. After clicking next, type whatever you want for the shortcut name.
-       jIRCii usually suffices.
-    
- 4. How do I get rid of the DOS Window when running jIRCii on Windows? 
-
-    When running jIRCii use javaw.exe or jrew.exe instead of java.exe or 
-    jre.exe to launch jIRCii.
-  
-    Or simply launch jIRCii with jircii.exe.
-
- 5. I'm having trouble opening some URL's on Windows.
-
-    The clickable URL's feature does work.  However URL's containing an =
-    sign will not open properly with jIRCii on Windows.  This is actually
-    due to the way internet explorer parses command line arguments.  
-
-    If you want all URL's to open properly try selecting a better browser
-    for jIRCii to open URL's with.  You can change this setting under
-    View -> Options -> Applications (at the bottom).
-
- 6. Why does jIRCii use Internet Explorer by default on Windows?
-
-    URL's in jIRCii are opened by executing a command.  The command is 
-    dependent on what operating system your using.  If you use Windows,
-    jIRCii will assume that the command to open URL's with it explorer.exe.
- 
-    To use a different application to open URL's and other files with go to
-    View -> Options -> Applications (at the bottom).
-
- 7. Is there any way to minimize jIRCii to the system tray?
-
-    To add system tray support to jIRCii there isn't really a native java 
-    way to do this.  However there are several easy to use applications
-    available that will allow you to add this functionality to jIRCii:
-
-    TrayIt -- http://www.teamcti.com/trayit/trayit.htm (my favorite)
-    Trayconizer -- http://www.whitsoftdev.com/trayconizer/
-    PowerMenu -- http://www.veridicus.com/tummy/programming/powermenu/
-
-    Special thanks to [crimz] for doing the legwork on this question and 
-    providing most of the answer.
-
- 8. How do I make Windows web browsers use jIRCii for irc:// links?
-
-    To do this create a new file called jircweb.reg and open it in 
-    notepad.  Then paste in the following:
-
-    REGEDIT4
-
-    [-HKEY_CLASSES_ROOT\irc]
-
-    [HKEY_CLASSES_ROOT\irc]
-    @="URL:IRC Protocol"
-    "URL Protocol"=""
-
-    [HKEY_CLASSES_ROOT\irc\DefaultIcon]
-    @="c:\\jircii\\jircii.exe"
-
-    [HKEY_CLASSES_ROOT\irc\shell\open\command]  
-    @="\"c:\\Program Files\\Java\\jre1.5.0\\bin\\javaw.exe\" -jar c:\\jircii\\jerk.jar %1"
-
-    The above example assumes jIRCii is installed in c:\jircii.  You
-    may have to edit it if you put jIRCii elsewhere on your system.
-
-    Once the file is edited just save it as a .reg file and double click 
-    it.  Windows will ask you if you want to import the information into 
-    the registry.  Click Yes and then you should be all set.
-
- 9. What do the faded nicknames in the channel listbox mean?
-
-    If a nickname is faded in the channel listbox then that means the user
-    is idle.
-
-10. What is a jIRCii theme?
-
-    A jIRCii theme is simply the current colormap settings exported to a 
-    script file.  jIRCii has up to 99 preset colors for displaying things
-    like channel joins, private messages etc.  In jIRCii it is easy to 
-    edit the preset colormap by simply holding down shift and clicking on 
-    text in the display area.  
-
-    Using the import / export theme feature under View -> Options -> Theme 
-    Manager will allow you to share themes with your friends and use 
-    themes your friends made.
-  
-11. How do I copy and paste in jIRCii?
-
-    Someone did ask this, don't laugh.  Any text selected in the display 
-    area will automatically be copied to the clipboard.
-
-    Otherwise to paste text you can right click in the input box and select
-    paste.  Or you can use the cut, copy, paste keyboard shortcuts specific
-    to your operating system.
-
-12. Where does jIRCii store its settings?
-
-    jIRCii creates a folder called ".jIRC" in your home directory.  On UNIX
-    systems your home directory should be kind of obvious.  On Windows your
-    home directory will be something like:
-    c:\documents and settings\your username\
-
-    All of your settings are saved to this directory.  
-
-13. How do I edit the jIRCii color scheme?
-
-    First off you don't have to script a single line of code to do this.  
-    Most of jIRCii colors can be edited by holding down shift and clicking 
-    on text whose color you want to change.  
-
-    To edit the colors in the nicklist you may have to hold down control, 
-    shift, and middle click on the text whose color you want to change.
-
-    To edit background colors in the text display hold down control, 
-    shift, and click on the text whose background color you want to 
-    change.
- 
-    Editing the color for the editbox text can be done under:
-    View -> Options -> Windows UI
-
-    Window background color options can be edited to your hearts content 
-    under:
-    View -> Options -> Backgrounds
-
-    You may also download a jIRCii theme file and import it using the theme 
-    manager to quickly edit the color scheme.
-
-    If you come up with a cool theme on your own it is possible to export it
-    using the theme manager so you can share your color settings with 
-    others.
-      
-14. How can I change ________ in the default jIRCii script?
-
-    jIRCii internally has two scripts loaded.  default.irc contains all of
-    the default sets and a few commands.  menus.irc contains the popup and
-    menubar menus.  
-
-    Copies of these two files are distributed with jIRCii under the 
-    extras/ directory.
-
-    Feel free to edit the copies of these files in the extras/ directory. 
-    To force jIRCii to load them simply place your edited copies in the 
-    .jIRC/ directory located in your home directory then restart jIRCii.
-
-    jIRCii always attempts to load internal resources from the .jIRC/ 
-    directory before attempting to load them from its internal 
-    distribution.
-
-    For more information on this feature see the file scriptjirc.pdf 
-    located in the docs/ directory of the jIRCii archive.
-    
-15. Is it possible to assign keyboard shortcuts in jIRCii?
-
-    It is possible to do this.  However you must use jIRCii's scripting
-    interface.  Just about any key combination can be turned into a keyboard
-    shortcut via jIRCii's scripting interface.  An example to get you
-    started:
-
-    bind Ctrl+J
-    {
-       call('/join #jIRCii');
-    }
-
-    The above is an example of a scripted keyboard shortcut.  Pressing
-    Control and J at the same time will cause jIRCii to execute the command
-    /join #jIRCii.  To use this simply create a text file and name it
-    myscript.irc.  You can then load this file using the jIRCii script
-    manager.
-
-16. How do I get 24-hour format time stamps?
-
-    To change the timestamp format you will have to do a little bit of 
-    scripting.  Open up your favorite text editor and enter in the following:
-
-    set TIMESTAMP
-    {
-       return formatDate('HH:mm');
-    }
-
-    Then save the file as something .IRC.  You can then load this file via
-    the jIRCii Script Manager (View -> Options -> Script Manager).
-
-    In the code snippet above 'HH:mm' is a format string describing what
-    the current date should look like.  HH in caps means the current hour
-    in 24 hour format.  mm of course means the minutes. 
-  
-    For more information about the time/date format of formatDate() check out
-    Appendix D of the Sleep Language Fundamentals:
-    http://jirc.hick.org/jirc/tutorial.prl?sleeplang#15
-
-17. What is the difference between a .THM and a .IRC file?
-
-    A .THM file is a jIRCii theme script.  These are created with the jIRCii
-    theme manager under View->Options->Theme Manager.  A .thm file is the 
-    format jIRCii uses to export a users color settings.  Theme files are
-    loaded with the /theme command or via the Theme Manager.
-
-    A .IRC file is a jIRCii script.  jIRCii scripts usually add new features
-    to jIRCii.  These are created by users.  A jIRCii script is loaded with
-    the /load command or via the Script Manager.
-
-18. How do I reload jIRCii scripts?
-
-    To reload a jIRCii script use the /reload command i.e.:
-    /reload myscript.irc
-
-    When reloading scripts you do not specify the full path to the script. 
-    Once a script is loaded jIRCii knows where the script is located and will
-    manage that detail for you.
-
-19. What options need to be filled in to connect to an irc server?
-
-    When you first launch jIRCii the options dialog will be open.  To 
-    connect to an IRC server you merely need to fill in the User 
-    Information stuff which includes your Real Name, Email Address, 
-    Nickname, and Alternate Nickname.
-
-    Real Name does not have to be your actual full name.  Some people put 
-    in a witty quote or something cool.  This information is displayed
-    when people /whois you.
-
-    Likewise Email Address does not have to be your actual email address.
-    Just put in something that looks like an email address and we'll be
-    square.
-
-    With this information filled in you should be ready to connect to an
-    irc server.
- 
-20. How do I connect to multiple servers?  What command do I use?
-
-    jIRCii is a multiserver IRC client.  To create a new server connection
-    you can use the /newserver command.
-
-21. How do I close the current IRC session?
-
-    To close the current IRC session simply close the "Status" window. 
-
-22. How do I connect to an SSL server?
-
-    To connect to an SSL (Secure Socket Layer) with jIRCii simply
-    use:
-
-    /server -ssl server.hostname portnumber
-
-23. How do I create a list of channels to automatically join?
-
-    It is possible to set jIRCii to execute commands upon connecting to
-    a server using the Perform on Connect feature.  You can define
-    a list of commands to be executed for each network you connect to.
-
-    To configure the Perform on Connect feature:
-   
-    a. Click View -> Options
-    b. Select the Perform dialog in the listbox to the left
-    c. Enable "Perform these commands when connecting"
-    d. Click the "Add" button and add whatever network you want to setup 
-       commands to perform on connecting for.
-    e. Select that network in the network listbox.
-    f. Enter in commands you want to execute whenever you connect to a server 
-       on that irc network. For example:
-      
-       /join #jIRCii
-       /join #mychannel
-
-    The perform on connect feature can be used to execute any commands you
-    want when connecting to a server.
-
-24. How do I set jIRCii to automatically connect to a server on startup?
-
-    a. Go to View -> Options -> jIRCii Setup.
-    b. Select the server you want to automatically connect to on startup.
-    c. Click Edit.
-    d. Another dialog will come up.  Click Edit again.
-    e. Check the box that says "Connect to server on client startup"
-    f. Click Ok
-
-    You'll notice that the server you just edited is now colored blue in the
-    server list.  Any servers configured to be connected to on startup
-    will be blue.
-
-25. How can I make the server tabs get my attention when something happens?
-
-   The normal answer I give to a feature request like this is to script
-   it.  Fortunately it has already been scripted.  You can download 
-   flash.irc, an addon script that adds this functionality at:
-
-   http://jircii.hick.org/cgi-bin/jirc.cgi?ACTION=VIEW&PAGE=contrib    
-
-26. How do I specify my own local IP address information for DCCs?
-
-    If you would like to set a specific IP address that others use to 
-    connect to you to receive files via DCC then:
-    a. Go to View -> Options -> DCC Options
-
-    In the field that says "DCC IP Address" type in the IP address you
-    want jIRCii to use for your local information.
-
-    You can also set jIRCii to use two automatic options.  Normal method
-    obtains your IP address from your computer.
-
-    Server method uses the IP address that the IRC server your on saw you 
-    connect from.
-
-    Having your dcc ip address setup correctly is very important.  When 
-    sending a file to a user, jIRCii will send your dcc ip address to the 
-    users irc client, and their irc client will connect to you at that dcc
-    ip address to receive the file.
-
-    If you have any doubts on what to use then set jIRCii to use the
-    Server method.
- 
-27. What is Ident?  Do I have to use it?
-
-    Ident is an outdated protocol that many IRC servers expect your computer
-    to respond to.  Essentially it is an Identification server.
-
-    When you connect to a server, the server connects to your computers
-    ident server to ask it which user on your computer is connecting to 
-    their irc server.   
-
-    This is from the old days when most people connecting to IRC used UNIX.
-    Since UNIX is a multi-user system many users from the same machine could
-    be connecting to the irc server at once.  IRC admins wanted to know 
-    which user from the UNIX machine was connecting so they knew who to 
-    complain about if a user was misbehaving.
-
-    Since Windows isn't a multi-user system or even a server system for that 
-    matter, it is very likely that your system does not have an ident server 
-    running.   In this case you will want to leave the ident server built 
-    into jIRCii running.
-
-    Many UNIX systems don't enable ident by default any more.  Mainly for a 
-    security issue.  The good news is this doesn't matter to you because if
-    you are using a UNIX system as any user other than root, the system 
-    won't let jIRCii run the ident server.  
-
-    Short answer, if your using Windows leave ident running.  It is setup
-    for you by default.
-
-    If your using MacOS X, Linux, or any other *NIX variant then you don't
-    need to enable ident.  In fact don't enable it.
- 
-28. How do I use a different Java look and feel with jIRCii?
-
-    For those that don't know look and feels are a skinnining mechanism 
-    for Java.  An update to date selection of look and feels can be found
-    at: http://javootoo.com
-
-    To use a look in feel in jIRCii simply download the look and feel and
-    extract from the look and feel archive a .jar file.  As an example
-    we'll use the liquid look and feel, the jar is liquidlnf.jar
-
-    Next you will have to find out the class name for the look and feel.
-    In the case of liquid look and feel the class name is:
-    com.birosoft.liquid.LiquidLookAndFeel
-
-    With this information gathered you will just execute jIRCii using the
-    following command line:
-
-    MacOS X, Linux, and other UNIX OS's:
-    java -classpath /path-to/jerk.jar:/path-to/liquidlnf.jar 
-                    rero.test.WindowTest 
-                    -lnf com.birosoft.liquid.LiquidLookAndFeel
-
-    Windows (you can't use jircii.exe to do this):
-    javaw -classpath c:\path-to\jerk.jar;c:\path-to\liquidlnf.jar 
-                     rero.test.WindowTest 
-                     -lnf com.birosoft.liquid.LiquidLookAndFeel
-
-29. How do I make my statusbar transparent?
-
-    a. Go to View -> Options -> Backgrounds.
-    b. Click on the statusbar in the preview thing in the top half of the 
-       dialog.
-    c. For type of background select "Transparent"
-    d. Select the Setup tab to change the tint color of the transparency
-    e. Select the Tint tab to adjust the level of transparency
-
-30. How do I change the statusbar color?
-
-    a. Go to View -> Options -> Backgrounds.
-    b. Click on the statusbar in the preview thing in the top half of the 
-       dialog.
-    c. For type of background select "Solid Color"
-    d. Select the Setup tab to change the color of the statusbar
-    
-    Feel free to experiment with different combinations of background 
-    options.  
-  
-31. How can I set a background image in jIRCii?
-
-    a. Go to View -> Options -> Backgrounds
-    b. Click on the window in the preview thing.  The window is the inner 
-       most rectangle.  
-    c. For type of background select "Image"
-    d. Select the Setup tab to change the image used in the background.
-
-    You can also set background images for the statusbar or MDI desktop.
-    Just click on which element of the display you want to edit in the 
-    preview thing.  The label in the middle of the dialog will reflect
-    which element of the display your editing background properties for.
-
-32. Can I make jIRCii windows transparent?
-
-    You can't make jIRCii windows themselves transparent.  However you
-    can setup an effect known as pseudotransprency. 
-
-    The psuedotransparent effect is acheived by using the same image for
-    a background in jIRCii as you use on the desktop.
-
-    a. Go to View -> Options -> Backgrounds
-    b. Click on the window in the preview thing.  The window is the inner
-       most rectangle.  
-    c. For the typ of background select "Image"
-    d. Select the Setup tab to set the image used for the Window background
-    e. Choose the same image you use for your desktop wallpaper.
-    f. Select the Transform tab to set how the image should be displayed.
-    g. Check the box that says "Align image with Desktop" 
-    h. repeat steps b thru g for the statusbar and the desktop background
-
-    Selecting align image with desktop will force jIRCii to anchor the image
-    to the corner of your desktop rather than the corner of the jIRCii 
-    window.  If you use the same image transform in jIRCii as you used for
-    your desktop wallpaper then the backgrounds in jIRCii should line up
-    perfectly with your desktop wallpaper.
-   
-    You can also do some further background customization here.  For example
-    you may want to make the background image in the jIRCii windows darker
-    than your desktop wallpaper.  This can be accomplished by adjusting the
-    alpha tint under the Tint tab.
-
-    In short the jIRCii Background Images dialog is confusing at first 
-    however it is also very powerful offering a large number of possible
-    configurations for your window backgrounds.  This is the only eye candy
-    you'll get so enjoy it.
-
-33. Why don't you allow plugins written in Java, C, Python, Visual Basic etc.?
-
-    Some people have asked me why I use sleep and not some masterpeice of 
-    a language like Python.  Short answer is this:
-
-    Generally scripting languages written on top of Java take advantage of 
-    a neat Java mechanism known as reflection.  This mechanism makes 
-    potentially every function and object in Java available to the 
-    scripter exactly as it would be in Java.  The benefit of this is a lot 
-    of power.  The disadvantage is you get a scripting language that had 
-    no thought put into the design of its own interfaces with the 
-    application environment.  The end result is usally something that is 
-    not very easy for new programmers to pick up on.  If you already know
-    the Java API insid and out along with the applications internal API
-    why not just modify the source code?    
-
-    Sleep on the other hand is flexible about how it integrates into an
-    application.  Using sleep it is simple to make the language feel like
-    it fits into the application.  The interfaces with the application (in
-    this case jIRCii) are thought out.  The end result is something that
-    is better integrated and easier to use, especially for new 
-    programmers.
-
-    As for plugins and such.  Why not just modify the source code?
-
-34. Will you ever charge money for jIRCii?
-
-    No.  jIRCii is my gift to the IRC community.  Therefor I can't charge
-    money for the client.  However I may charge for shipping and handling.
-
-35. Can I get the jIRCii source code?
-
-    Yes!  jIRCii is an open source client.  jIRCii source code and 
-    binaries are released under the artistic license.  
-
-    You can download the source code at:
-    http://jircii.hick.org/
-
-    The Sleep source code is available for download as well at the 
-    Sleep Scripting Project:
-
-    http://sleep.hick.org/
-
-    Sleep is now released under the LGPL.  jIRCii uses the Sleep version
-    02.28.05.  Sleep 2.0 is in beta and not used in jIRCii yet. 
-
-    See license.txt for more information on what freedoms the artistic 
-    license grants you.  
-
-    The artistic license apparently isn't GPL compatible by default.  It 
-    is my intention that pieces of my source code can be used in any open
-    source project so long as I receive some form of credit for the code
-    I wrote.  If you modify it please note that too.
-
-36. Can I use portions of jIRCii's source code in my GPL project?
-
-    Short answer, yes.  I grant you permission to use any jIRCii code "I
-    wrote" licensed under the artistic license in your GPL project and to
-    license your modifications under the GPL.  
-
-    I personally choose not to use the GPL for jIRCii as the viral nature 
-    of the license feels like a bit of a lock-in to me.  However feel 
-    free to do what you need to do.  :)
-
-37. What do the release designations (stable, beta) mean?
-
-    No one has asked me this yet. However I'm going to answer because I'm 
-    sure someone is curious. 
-
-    In general a stable release doesn't have much new in it. I like to 
-    release betas that contain a ton of changes and new features. Betas 
-    are usually tested primarily by me before being released. A stable 
-    release usually contains one or two bug fixes and is based off of a 
-    recently released beta. As such stable releases are considered stable 
-    since they've been tested by people other than me. 
-
-38. How do I embed jIRCii into my website?
-
-    You can do this by using the jIRCii launch service.  jIRCii launch
-    service provides a way of specifying an irc server and a channel when
-    launching jIRCii via the web.  When jIRCii is launched this way it 
-    will immediately connect to a specified server and channel with 
-    0-configuration.
-
-    This feature does require that your web site users have Java 1.4.2 or
-    later installed.
-
-    More info about jIRCii launch service can be found at:
-    http://jircii.hick.org/jirc/link.prl
-
-39. What development environment do you use?
-
-    Don't laugh, I use pico as my text editor.  I should be shot.  Or
-    maybe given an award for writing over 40,000 lines of code in pico.
-
-    I don't use any kind of IDE.  My mainstay right now is the KDE 
-    Konsole.  Konsole seems to be the best tabbed terminal app I've used 
-    so far.  I have one tab setup for compiles.  Another tab setup for
-    running jIRCii from the console.  All other tabs are for individual 
-    files.
-
-    For a build tool I use Apache Ant.  Ant is awesome if your doing 
-    Java programming.  I use a couple of home brew shell scripts to 
-    package jIRCii and thats about it.
-
-    This might sound kind of crude but it has worked for me.  The only
-    place I really lose is by not having a gui environment for designing
-    dialogs.  Since all RAD tools I've tried sucked, I opted just to write
-    a framework for easily creating dialogs.  Problem solved.
-  
-    Hardware wise I have a first generation 12" Powerbook running MacOS X
-    10.3.4.  jIRCii development in the past has been done on Linux using
-    the same type of environment and on Windows using editplus.  
-
-40. Why write another Java IRC Client?
-
-    I don't own a TV or a playstation and I needed something to do.
-
-41. What clients did you rip^H^H^H receive inspiration from?
-
-    Years ago back when I was an IRC scripter.  I wrote an addon called
-    mIRCii.  mIRCii was essentially a multi-server addon for mIRC.  You
-    irc'd through one window using /window to open other windows if you so
-    desired.  jIRCii to some extent is mIRCii turned into a full blown
-    client.
-
-    I stole the shift+click color editing idea from the client OpenChat.
-    OpenChat is essentially a graphical version of ircii.  I think the 
-    goals of jIRCii and the goals of OpenChat are pretty similiar.
-
-    I was heavily inspired by the client irssi in terms of tab completion.
-    That client tab completes everything.
-   
-    The scripting language sleep was of course heavily influenced by perl.
-    Some bits of the hADES and ircii scripting interfaces made there way
-    into sleep.
-
-    I learned a lot from other clients in terms of what not to do.  Many
-    clients have gone overboard on the GUI side.  IRC is a text based 
-    protocol.  As such jIRCii was heavily inspired by text based irc 
-    clients.  You may also notice that jIRCii tries to keep graphical 
-    elements to a minimum and that most things can be disabled in the 
-    options dialog.  Although I did find that usage of jIRCii didn't start 
-    picking up until I added a graphical toolbar.   Hrmmm...
-
-    mIRC gets points for heavy influence by default.  Since mIRC is the 
-    client most people use.
-
-42. How long has jIRCii been in development?
-
-    I started writing jIRCii when I was in high school.  This was mostly
-    an effort to learn Java.  jIRC was my senior project for my high school
-    "research and development" course.  This was back in 1998-1999.
-
-    I became lazy and just used jIRC as a programming playground for the 
-    longest time.  It was a fun project to try out different ideas on.
-
-    Unfortunately a high school kid who can program is not necessarily a 
-    good software engineer.  jIRCii went through a couple of rewrites as I
-    tried out different ideas for organizing my code so it would be easier 
-    to work with.  I never succeeded at the easy to work with part.
-
-    On July 28, 2001 I released jIRCii Beta 1 to a closed group of beta 
-    testers.  This beta process went all the way up to a beta 10 with 
-    several source code only releases of a beta 11.  Beta 10 was released
-    on July 19, 2002.  So about a year long beta process.
-
-    Again I had a period of laziness.  Sometime in April of 2002 I wrote
-    the core of sleep in a weekend.  I integrated sleep into jIRCii and
-    soon realized many of the shortcomings of trying to use a programming
-    language that was written in a weekend.  I knew a rewrite of sleep
-    was necessary.  
-
-    I rewrote sleep and then found I couldn't integrate it because I 
-    changed sleep to much and the old sleep API's were to far entrenched 
-    into the jIRC codebase.  Essentially my code was so damned complicated
-    that I had to stop development because even doing something simple
-    required a lot of thought and even then I usually ended up breaking 
-    stuff.
-
-    During the summer of 2003 I started brainstorming an idea for how to
-    manage the design of jIRCii.   I decided to develop individual 
-    frameworks that were each easy to test on an individual basis.  Once
-    each of these frameworks were written I would then in theory write
-    a little bit of code to tie them all together and voila a functioning
-    peice of software.
-
-    For my last semester of college I pitched the idea of completing a 
-    large software project as an independent study.  With the motivation 
-    of a grade hanging over my head I worked my ass off and arrived at
-    jIRC beta 1 sometime in January of 2004.  Fortunately the design 
-    idea I had worked out beautifully.  jIRCii and sleep were over 40,000
-    lines of code together yet adding new features and editing existing
-    functionality was pretty trivial.  Working on this project became fun
-    again.
-
-    After graduating I did work on jIRCii here and there until I arrived 
-    at what your now using today.  This is now a pretty complete irc
-    client.
-    
-    Short answer:  I've been working on this client for a looong freaking
-    time.  
-
-43. Why don't you wait until you have more changes to do a release?
-
-    Good question.  You may notice the main package jIRCii classes are 
-    stored in is named "rero".  I named the jIRCii package this because
-    I wanted to remind myself of Eric Raymond's advice for creating a 
-    successful open source project: "release early, release often".  
-
-    As such I've been releasing jIRCii quite often.  In fact any time
-    I've either temporarily exhausted my todo list or made a mass of
-    changes I do a release.  This benefits jIRCii and its users in a 
-    big way.  The quick turn around allows me to gather near realtime
-    user feedback on choices I make with jIRCii's development.  With
-    this feedback I can identify and fix problem areas, avoid having 
-    a bad release in the wild for to long, and really develop the 
-    client I want to write and that users want to use.
-
-    In short, I feel each change I make is another step towards
-    making jIRCii into an awesome IRC client.  I feel it is worth
-    letting users keep up if they choose to do so.
-
-    If you don't like the fast turn around time of jIRCii releases
-    then I recommend downloading a released labeled stable and just
-    waiting until the next stable release ignoring betas in between.  
-
-44. I disabled my jircii menubar, how do I get it back?
-
-    Open up the options dialog using Alt+O.  From there navigate to 
-    "GUI Setup" near the bottom.  Make sure the box "Show menubar" is
-    checked.   Press OK and your menubar should be back.  
-
-    If this doesn't work it may mean jIRCii is not loading menus.irc.  
-    This could be due to a rogue script that got loaded.  The best thing 
-    to do in this case is to reset your jIRCii settings.
-
-45. How do I reset the jIRCii settings?
-
-    You should only need to do this if your jIRCii settings become really 
-    messed up.  Symptoms of messed up settings include nothing happening
-    when jIRCii starts up, a blank statusbar, menus not working or showing
-    etc.
-
-    To reset the jIRCii settings you'll need to locate and delete the .jIRC
-    folder.  The .jIRC folder is where jIRCii stores all of your settings.
-
-    MacOS X, Linux, *NIX:
-    The .jIRC folder is located in your home directory.  By default it is a
-    hidden directory.  To delete it just open a terminal and type:
-
-    rm -rf ~/.jIRC
-
-    Windows:
-    The .jIRC folder is located in something similiar to:
-    c:\documents and settings\your user name\
- 
-    Do a file search for .jIRC and delete it.   
-
-46. My jIRCii window flashes or acts crazy occasionally, what's wrong?
-
-    Java uses a lot of video card hardware tricks to enhance performance.
-    Unfortunately buggy video card drivers can cause problems with the
-    way Java apps render stuff on the screen.  One option is to update
-    your video card driver.
-
-    Another option is to disable some of the hardware acceleration with
-    Java.  You can do this by launching jIRCii with the following options:
-
-    java -Dsun.java2d.ddoffscreen=false 
-         -Dsun.java2d.pmoffscreen=false
-         -Dsun.java2d.d3d=false     
-         -Dsun.java2d.noddraw=true 
-         -jar jerk.jar
-
-    The above is actually one line of text, I've broken it up for the sake
-    of readability.
- 
+jircii faq - distributed with jircii 06.11.05:
+
+               .sS$$Ss.                           .sS$$Ss. .sS$$Ss.
+               $$$$$$$$                           $$$$$$$$ $$$$$$$$
+               $$$$$$$$                           $$$$$$$$ $$$$$$$$
+               `?$$$$P'                           `?$$$$P' `?$$$$P'
+
+         $$$Ss. $$$$$$ """""""$$$Ss. """""""$$$Ss. $$$$$$   $$$$$$
+         $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$   $$$$$$
+         $$$$$$ $$$$$$ $$$$$$ $$$$$$ $$$$$$        $$$$$$   $$$$$$
+  """""" $$$$$$ $$$$$$ $$$$$$        $$$$$$ $$$$$$ $$$$$$   $$$$$$
+  $$$$$$ $$$$$$ $$$$$$ $$$$$$ 061105 $$$$$$ $$$$$$ $$$$$$   $$$$$$
+  $$$$$$ $$$$$$ $$$$$$ $$$$$$        `?$$$$s$$$$P' $$$$$$   $$$$$$
+  `?$$$$s$$$$P'                                        
+
+
+Questions:
+
+ 1. What is jIRCii?
+ 2. Where can I get jIRCii?
+
+ 3. How do I create a shortcut for jIRCii on Windows?
+ 4. How do I get rid of the DOS Window when running jIRCii on Windows? 
+ 5. I'm having trouble opening some URL's on Windows.
+
+ 6. Why does jIRCii use Internet Explorer by default on Windows?
+ 7. Is there any way to minimize jIRCii to the system tray?
+ 8. How do I make Windows web browsers use jIRCii for irc:// links?
+
+ 9. What do the faded nicknames in the channel listbox mean?
+10. What is a jIRCii theme?
+11. How do I copy and paste in jIRCii?
+12. Where does jIRCii store its settings?
+13. How do I edit the jIRCii color scheme?
+14. How can I change ________ in the default jIRCii script?
+15. Is it possible to assign keyboard shortcuts in jIRCii?
+16. How do I get 24-hour format time stamps?
+
+17. What is the difference between a .THM and a .IRC file?
+18. How do I reload jIRCii scripts?
+
+19. What options need to be filled in to connect to an irc server?
+20. How do I connect to multiple servers?  What command do I use?
+21. How do I close the current IRC session?
+22. How do I connect to an SSL server?
+
+23. How do I create a list of channels to automatically join?
+24. How do I set jIRCii to automatically connect to a server on startup?
+25. How can I make the server tabs get my attention when something happens?
+
+26. How do I specify my own local IP address information for DCCs?
+27. What is Ident?  Do I have to use it?
+
+28. How do I use a different Java look and feel with jIRCii?
+29. How do I make my statusbar transparent?
+30. How do I change the statusbar color?
+31. How can I set a background image in jIRCii?
+32. Can I make jIRCii windows transparent?
+
+33. Why don't you allow plugins written in Java, C, Python, Visual Basic etc.?
+
+34. Will you ever charge money for jIRCii?
+35. Can I get the jIRCii source code?
+36. Can I use portions of jIRCii's source code in my GPL project?
+37. What do the release designations (stable, beta) mean?
+38. How do I embed jIRCii into my website?
+
+39. What development environment do you use?
+40. Why write another Java IRC Client?
+41. What clients did you rip^H^H^H receive inspiration from?
+42. How long has jIRCii been in development?
+43. Why don't you wait until you have more changes to do a release?
+
+44. I disabled my jircii menubar, how do I get it back?
+45. How do I reset the jIRCii settings?
+46. My jIRCii window flashes or acts crazy occasionally, what's wrong?
+
+If a question you would like answered is not here then post your question to 
+the jIRCii Message Board at http://jircii.hick.org/jirc/wwwboard.prl
+
+
+Begin jIRCii FAQ:
+
+ 1. What is jIRCii?
+   
+    jIRCii is a client for the Internet Relay Chat (IRC) protocol.  IRC is
+    a chat protocol (duh!).  
+ 
+    jIRCii is more than just a bare bones IRC Client though.  jIRCii 
+    includes most of the features of an advanced IRC script.  Features
+    such as advanced tab-key completion, over 70 common sense aliases,
+    notify list, ignore list, etc.
+   
+    jIRCii is very adaptable i.e. you can IRC through multiple windows 
+    with an interface that resembles mIRC, or you can IRC through a 
+    single window with an interface that resembles ircii.
+
+    It is also possible to customize jIRCii by writing scripts in the 
+    perl-like language sleep.  Other clients have an awkward interface for
+    interfacing scripts with their software.  Sleep is directly integrated
+    with jIRCii in a common sense manner.  It is powerful enough to keep
+    the advanced coder happy and easy enough to learn that first time 
+    scripters can customize the client to their hearts content. 
+
+    As a side note, jIRCii is written in Java, but don't let that fool 
+    you.  This client was written with speed in mind.
+ 
+    If your an old school IRC user looking for a solid modern client, 
+    that isn't lame, then jIRCii is the IRC client you have been waiting 
+    for.
+ 
+ 2. Where can I get jIRCii?
+
+    The folks over at hick.org have been cool enough to host the jIRCii
+    Resource Center.  You can download jIRCii addons, scripts, and themes
+    at: http://jircii.hick.org/
+
+    Assuming a nuclear blast hits the data center hick.org is in, or 
+    someone stops paying the bill then a more permanent archive with 
+    jIRCii is available on sourceforge.net:
+
+    http://sourceforge.net/projects/jircii/
+
+    The latest version of jIRCii is always mirrored at:
+
+    http://jircii.leenux.net/
+
+ 3. How do I create a shortcut for jIRCii on Windows?
+
+    a. Right click on the desktop, select New, then select Create Shortcut
+    b. In the location field fill in something resembling the following:
+       c:\path-to\jircii.exe
+    c. After clicking next, type whatever you want for the shortcut name.
+       jIRCii usually suffices.
+    
+ 4. How do I get rid of the DOS Window when running jIRCii on Windows? 
+
+    When running jIRCii use javaw.exe or jrew.exe instead of java.exe or 
+    jre.exe to launch jIRCii.
+  
+    Or simply launch jIRCii with jircii.exe.
+
+ 5. I'm having trouble opening some URL's on Windows.
+
+    The clickable URL's feature does work.  However URL's containing an =
+    sign will not open properly with jIRCii on Windows.  This is actually
+    due to the way internet explorer parses command line arguments.  
+
+    If you want all URL's to open properly try selecting a better browser
+    for jIRCii to open URL's with.  You can change this setting under
+    View -> Options -> Applications (at the bottom).
+
+ 6. Why does jIRCii use Internet Explorer by default on Windows?
+
+    URL's in jIRCii are opened by executing a command.  The command is 
+    dependent on what operating system your using.  If you use Windows,
+    jIRCii will assume that the command to open URL's with it explorer.exe.
+ 
+    To use a different application to open URL's and other files with go to
+    View -> Options -> Applications (at the bottom).
+
+ 7. Is there any way to minimize jIRCii to the system tray?
+
+    To add system tray support to jIRCii there isn't really a native java 
+    way to do this.  However there are several easy to use applications
+    available that will allow you to add this functionality to jIRCii:
+
+    TrayIt -- http://www.teamcti.com/trayit/trayit.htm (my favorite)
+    Trayconizer -- http://www.whitsoftdev.com/trayconizer/
+    PowerMenu -- http://www.veridicus.com/tummy/programming/powermenu/
+
+    Special thanks to [crimz] for doing the legwork on this question and 
+    providing most of the answer.
+
+ 8. How do I make Windows web browsers use jIRCii for irc:// links?
+
+    To do this create a new file called jircweb.reg and open it in 
+    notepad.  Then paste in the following:
+
+    REGEDIT4
+
+    [-HKEY_CLASSES_ROOT\irc]
+
+    [HKEY_CLASSES_ROOT\irc]
+    @="URL:IRC Protocol"
+    "URL Protocol"=""
+
+    [HKEY_CLASSES_ROOT\irc\DefaultIcon]
+    @="c:\\jircii\\jircii.exe"
+
+    [HKEY_CLASSES_ROOT\irc\shell\open\command]  
+    @="\"c:\\Program Files\\Java\\jre1.5.0\\bin\\javaw.exe\" -jar c:\\jircii\\jerk.jar %1"
+
+    The above example assumes jIRCii is installed in c:\jircii.  You
+    may have to edit it if you put jIRCii elsewhere on your system.
+
+    Once the file is edited just save it as a .reg file and double click 
+    it.  Windows will ask you if you want to import the information into 
+    the registry.  Click Yes and then you should be all set.
+
+ 9. What do the faded nicknames in the channel listbox mean?
+
+    If a nickname is faded in the channel listbox then that means the user
+    is idle.
+
+10. What is a jIRCii theme?
+
+    A jIRCii theme is simply the current colormap settings exported to a 
+    script file.  jIRCii has up to 99 preset colors for displaying things
+    like channel joins, private messages etc.  In jIRCii it is easy to 
+    edit the preset colormap by simply holding down shift and clicking on 
+    text in the display area.  
+
+    Using the import / export theme feature under View -> Options -> Theme 
+    Manager will allow you to share themes with your friends and use 
+    themes your friends made.
+  
+11. How do I copy and paste in jIRCii?
+
+    Someone did ask this, don't laugh.  Any text selected in the display 
+    area will automatically be copied to the clipboard.
+
+    Otherwise to paste text you can right click in the input box and select
+    paste.  Or you can use the cut, copy, paste keyboard shortcuts specific
+    to your operating system.
+
+12. Where does jIRCii store its settings?
+
+    jIRCii creates a folder called ".jIRC" in your home directory.  On UNIX
+    systems your home directory should be kind of obvious.  On Windows your
+    home directory will be something like:
+    c:\documents and settings\your username\
+
+    All of your settings are saved to this directory.  
+
+13. How do I edit the jIRCii color scheme?
+
+    First off you don't have to script a single line of code to do this.  
+    Most of jIRCii colors can be edited by holding down shift and clicking 
+    on text whose color you want to change.  
+
+    To edit the colors in the nicklist you may have to hold down control, 
+    shift, and middle click on the text whose color you want to change.
+
+    To edit background colors in the text display hold down control, 
+    shift, and click on the text whose background color you want to 
+    change.
+ 
+    Editing the color for the editbox text can be done under:
+    View -> Options -> Windows UI
+
+    Window background color options can be edited to your hearts content 
+    under:
+    View -> Options -> Backgrounds
+
+    You may also download a jIRCii theme file and import it using the theme 
+    manager to quickly edit the color scheme.
+
+    If you come up with a cool theme on your own it is possible to export it
+    using the theme manager so you can share your color settings with 
+    others.
+      
+14. How can I change ________ in the default jIRCii script?
+
+    jIRCii internally has two scripts loaded.  default.irc contains all of
+    the default sets and a few commands.  menus.irc contains the popup and
+    menubar menus.  
+
+    Copies of these two files are distributed with jIRCii under the 
+    extras/ directory.
+
+    Feel free to edit the copies of these files in the extras/ directory. 
+    To force jIRCii to load them simply place your edited copies in the 
+    .jIRC/ directory located in your home directory then restart jIRCii.
+
+    jIRCii always attempts to load internal resources from the .jIRC/ 
+    directory before attempting to load them from its internal 
+    distribution.
+
+    For more information on this feature see the file scriptjirc.pdf 
+    located in the docs/ directory of the jIRCii archive.
+    
+15. Is it possible to assign keyboard shortcuts in jIRCii?
+
+    It is possible to do this.  However you must use jIRCii's scripting
+    interface.  Just about any key combination can be turned into a keyboard
+    shortcut via jIRCii's scripting interface.  An example to get you
+    started:
+
+    bind Ctrl+J
+    {
+       call('/join #jIRCii');
+    }
+
+    The above is an example of a scripted keyboard shortcut.  Pressing
+    Control and J at the same time will cause jIRCii to execute the command
+    /join #jIRCii.  To use this simply create a text file and name it
+    myscript.irc.  You can then load this file using the jIRCii script
+    manager.
+
+16. How do I get 24-hour format time stamps?
+
+    To change the timestamp format you will have to do a little bit of 
+    scripting.  Open up your favorite text editor and enter in the following:
+
+    set TIMESTAMP
+    {
+       return formatDate('HH:mm');
+    }
+
+    Then save the file as something .IRC.  You can then load this file via
+    the jIRCii Script Manager (View -> Options -> Script Manager).
+
+    In the code snippet above 'HH:mm' is a format string describing what
+    the current date should look like.  HH in caps means the current hour
+    in 24 hour format.  mm of course means the minutes. 
+  
+    For more information about the time/date format of formatDate() check out
+    Appendix D of the Sleep Language Fundamentals:
+    http://jirc.hick.org/jirc/tutorial.prl?sleeplang#15
+
+17. What is the difference between a .THM and a .IRC file?
+
+    A .THM file is a jIRCii theme script.  These are created with the jIRCii
+    theme manager under View->Options->Theme Manager.  A .thm file is the 
+    format jIRCii uses to export a users color settings.  Theme files are
+    loaded with the /theme command or via the Theme Manager.
+
+    A .IRC file is a jIRCii script.  jIRCii scripts usually add new features
+    to jIRCii.  These are created by users.  A jIRCii script is loaded with
+    the /load command or via the Script Manager.
+
+18. How do I reload jIRCii scripts?
+
+    To reload a jIRCii script use the /reload command i.e.:
+    /reload myscript.irc
+
+    When reloading scripts you do not specify the full path to the script. 
+    Once a script is loaded jIRCii knows where the script is located and will
+    manage that detail for you.
+
+19. What options need to be filled in to connect to an irc server?
+
+    When you first launch jIRCii the options dialog will be open.  To 
+    connect to an IRC server you merely need to fill in the User 
+    Information stuff which includes your Real Name, Email Address, 
+    Nickname, and Alternate Nickname.
+
+    Real Name does not have to be your actual full name.  Some people put 
+    in a witty quote or something cool.  This information is displayed
+    when people /whois you.
+
+    Likewise Email Address does not have to be your actual email address.
+    Just put in something that looks like an email address and we'll be
+    square.
+
+    With this information filled in you should be ready to connect to an
+    irc server.
+ 
+20. How do I connect to multiple servers?  What command do I use?
+
+    jIRCii is a multiserver IRC client.  To create a new server connection
+    you can use the /newserver command.
+
+21. How do I close the current IRC session?
+
+    To close the current IRC session simply close the "Status" window. 
+
+22. How do I connect to an SSL server?
+
+    To connect to an SSL (Secure Socket Layer) with jIRCii simply
+    use:
+
+    /server -ssl server.hostname portnumber
+
+23. How do I create a list of channels to automatically join?
+
+    It is possible to set jIRCii to execute commands upon connecting to
+    a server using the Perform on Connect feature.  You can define
+    a list of commands to be executed for each network you connect to.
+
+    To configure the Perform on Connect feature:
+   
+    a. Click View -> Options
+    b. Select the Perform dialog in the listbox to the left
+    c. Enable "Perform these commands when connecting"
+    d. Click the "Add" button and add whatever network you want to setup 
+       commands to perform on connecting for.
+    e. Select that network in the network listbox.
+    f. Enter in commands you want to execute whenever you connect to a server 
+       on that irc network. For example:
+      
+       /join #jIRCii
+       /join #mychannel
+
+    The perform on connect feature can be used to execute any commands you
+    want when connecting to a server.
+
+24. How do I set jIRCii to automatically connect to a server on startup?
+
+    a. Go to View -> Options -> jIRCii Setup.
+    b. Select the server you want to automatically connect to on startup.
+    c. Click Edit.
+    d. Another dialog will come up.  Click Edit again.
+    e. Check the box that says "Connect to server on client startup"
+    f. Click Ok
+
+    You'll notice that the server you just edited is now colored blue in the
+    server list.  Any servers configured to be connected to on startup
+    will be blue.
+
+25. How can I make the server tabs get my attention when something happens?
+
+   The normal answer I give to a feature request like this is to script
+   it.  Fortunately it has already been scripted.  You can download 
+   flash.irc, an addon script that adds this functionality at:
+
+   http://jircii.hick.org/cgi-bin/jirc.cgi?ACTION=VIEW&PAGE=contrib    
+
+26. How do I specify my own local IP address information for DCCs?
+
+    If you would like to set a specific IP address that others use to 
+    connect to you to receive files via DCC then:
+    a. Go to View -> Options -> DCC Options
+
+    In the field that says "DCC IP Address" type in the IP address you
+    want jIRCii to use for your local information.
+
+    You can also set jIRCii to use two automatic options.  Normal method
+    obtains your IP address from your computer.
+
+    Server method uses the IP address that the IRC server your on saw you 
+    connect from.
+
+    Having your dcc ip address setup correctly is very important.  When 
+    sending a file to a user, jIRCii will send your dcc ip address to the 
+    users irc client, and their irc client will connect to you at that dcc
+    ip address to receive the file.
+
+    If you have any doubts on what to use then set jIRCii to use the
+    Server method.
+ 
+27. What is Ident?  Do I have to use it?
+
+    Ident is an outdated protocol that many IRC servers expect your computer
+    to respond to.  Essentially it is an Identification server.
+
+    When you connect to a server, the server connects to your computers
+    ident server to ask it which user on your computer is connecting to 
+    their irc server.   
+
+    This is from the old days when most people connecting to IRC used UNIX.
+    Since UNIX is a multi-user system many users from the same machine could
+    be connecting to the irc server at once.  IRC admins wanted to know 
+    which user from the UNIX machine was connecting so they knew who to 
+    complain about if a user was misbehaving.
+
+    Since Windows isn't a multi-user system or even a server system for that 
+    matter, it is very likely that your system does not have an ident server 
+    running.   In this case you will want to leave the ident server built 
+    into jIRCii running.
+
+    Many UNIX systems don't enable ident by default any more.  Mainly for a 
+    security issue.  The good news is this doesn't matter to you because if
+    you are using a UNIX system as any user other than root, the system 
+    won't let jIRCii run the ident server.  
+
+    Short answer, if your using Windows leave ident running.  It is setup
+    for you by default.
+
+    If your using MacOS X, Linux, or any other *NIX variant then you don't
+    need to enable ident.  In fact don't enable it.
+ 
+28. How do I use a different Java look and feel with jIRCii?
+
+    For those that don't know look and feels are a skinnining mechanism 
+    for Java.  An update to date selection of look and feels can be found
+    at: http://javootoo.com
+
+    To use a look in feel in jIRCii simply download the look and feel and
+    extract from the look and feel archive a .jar file.  As an example
+    we'll use the liquid look and feel, the jar is liquidlnf.jar
+
+    Next you will have to find out the class name for the look and feel.
+    In the case of liquid look and feel the class name is:
+    com.birosoft.liquid.LiquidLookAndFeel
+
+    With this information gathered you will just execute jIRCii using the
+    following command line:
+
+    MacOS X, Linux, and other UNIX OS's:
+    java -classpath /path-to/jerk.jar:/path-to/liquidlnf.jar 
+                    rero.test.WindowTest 
+                    -lnf com.birosoft.liquid.LiquidLookAndFeel
+
+    Windows (you can't use jircii.exe to do this):
+    javaw -classpath c:\path-to\jerk.jar;c:\path-to\liquidlnf.jar 
+                     rero.test.WindowTest 
+                     -lnf com.birosoft.liquid.LiquidLookAndFeel
+
+29. How do I make my statusbar transparent?
+
+    a. Go to View -> Options -> Backgrounds.
+    b. Click on the statusbar in the preview thing in the top half of the 
+       dialog.
+    c. For type of background select "Transparent"
+    d. Select the Setup tab to change the tint color of the transparency
+    e. Select the Tint tab to adjust the level of transparency
+
+30. How do I change the statusbar color?
+
+    a. Go to View -> Options -> Backgrounds.
+    b. Click on the statusbar in the preview thing in the top half of the 
+       dialog.
+    c. For type of background select "Solid Color"
+    d. Select the Setup tab to change the color of the statusbar
+    
+    Feel free to experiment with different combinations of background 
+    options.  
+  
+31. How can I set a background image in jIRCii?
+
+    a. Go to View -> Options -> Backgrounds
+    b. Click on the window in the preview thing.  The window is the inner 
+       most rectangle.  
+    c. For type of background select "Image"
+    d. Select the Setup tab to change the image used in the background.
+
+    You can also set background images for the statusbar or MDI desktop.
+    Just click on which element of the display you want to edit in the 
+    preview thing.  The label in the middle of the dialog will reflect
+    which element of the display your editing background properties for.
+
+32. Can I make jIRCii windows transparent?
+
+    You can't make jIRCii windows themselves transparent.  However you
+    can setup an effect known as pseudotransprency. 
+
+    The psuedotransparent effect is acheived by using the same image for
+    a background in jIRCii as you use on the desktop.
+
+    a. Go to View -> Options -> Backgrounds
+    b. Click on the window in the preview thing.  The window is the inner
+       most rectangle.  
+    c. For the typ of background select "Image"
+    d. Select the Setup tab to set the image used for the Window background
+    e. Choose the same image you use for your desktop wallpaper.
+    f. Select the Transform tab to set how the image should be displayed.
+    g. Check the box that says "Align image with Desktop" 
+    h. repeat steps b thru g for the statusbar and the desktop background
+
+    Selecting align image with desktop will force jIRCii to anchor the image
+    to the corner of your desktop rather than the corner of the jIRCii 
+    window.  If you use the same image transform in jIRCii as you used for
+    your desktop wallpaper then the backgrounds in jIRCii should line up
+    perfectly with your desktop wallpaper.
+   
+    You can also do some further background customization here.  For example
+    you may want to make the background image in the jIRCii windows darker
+    than your desktop wallpaper.  This can be accomplished by adjusting the
+    alpha tint under the Tint tab.
+
+    In short the jIRCii Background Images dialog is confusing at first 
+    however it is also very powerful offering a large number of possible
+    configurations for your window backgrounds.  This is the only eye candy
+    you'll get so enjoy it.
+
+33. Why don't you allow plugins written in Java, C, Python, Visual Basic etc.?
+
+    Some people have asked me why I use sleep and not some masterpeice of 
+    a language like Python.  Short answer is this:
+
+    Generally scripting languages written on top of Java take advantage of 
+    a neat Java mechanism known as reflection.  This mechanism makes 
+    potentially every function and object in Java available to the 
+    scripter exactly as it would be in Java.  The benefit of this is a lot 
+    of power.  The disadvantage is you get a scripting language that had 
+    no thought put into the design of its own interfaces with the 
+    application environment.  The end result is usally something that is 
+    not very easy for new programmers to pick up on.  If you already know
+    the Java API insid and out along with the applications internal API
+    why not just modify the source code?    
+
+    Sleep on the other hand is flexible about how it integrates into an
+    application.  Using sleep it is simple to make the language feel like
+    it fits into the application.  The interfaces with the application (in
+    this case jIRCii) are thought out.  The end result is something that
+    is better integrated and easier to use, especially for new 
+    programmers.
+
+    As for plugins and such.  Why not just modify the source code?
+
+34. Will you ever charge money for jIRCii?
+
+    No.  jIRCii is my gift to the IRC community.  Therefor I can't charge
+    money for the client.  However I may charge for shipping and handling.
+
+35. Can I get the jIRCii source code?
+
+    Yes!  jIRCii is an open source client.  jIRCii source code and 
+    binaries are released under the artistic license.  
+
+    You can download the source code at:
+    http://jircii.hick.org/
+
+    The Sleep source code is available for download as well at the 
+    Sleep Scripting Project:
+
+    http://sleep.hick.org/
+
+    Sleep is now released under the LGPL.  jIRCii uses the Sleep version
+    02.28.05.  Sleep 2.0 is in beta and not used in jIRCii yet. 
+
+    See license.txt for more information on what freedoms the artistic 
+    license grants you.  
+
+    The artistic license apparently isn't GPL compatible by default.  It 
+    is my intention that pieces of my source code can be used in any open
+    source project so long as I receive some form of credit for the code
+    I wrote.  If you modify it please note that too.
+
+36. Can I use portions of jIRCii's source code in my GPL project?
+
+    Short answer, yes.  I grant you permission to use any jIRCii code "I
+    wrote" licensed under the artistic license in your GPL project and to
+    license your modifications under the GPL.  
+
+    I personally choose not to use the GPL for jIRCii as the viral nature 
+    of the license feels like a bit of a lock-in to me.  However feel 
+    free to do what you need to do.  :)
+
+37. What do the release designations (stable, beta) mean?
+
+    No one has asked me this yet. However I'm going to answer because I'm 
+    sure someone is curious. 
+
+    In general a stable release doesn't have much new in it. I like to 
+    release betas that contain a ton of changes and new features. Betas 
+    are usually tested primarily by me before being released. A stable 
+    release usually contains one or two bug fixes and is based off of a 
+    recently released beta. As such stable releases are considered stable 
+    since they've been tested by people other than me. 
+
+38. How do I embed jIRCii into my website?
+
+    You can do this by using the jIRCii launch service.  jIRCii launch
+    service provides a way of specifying an irc server and a channel when
+    launching jIRCii via the web.  When jIRCii is launched this way it 
+    will immediately connect to a specified server and channel with 
+    0-configuration.
+
+    This feature does require that your web site users have Java 1.4.2 or
+    later installed.
+
+    More info about jIRCii launch service can be found at:
+    http://jircii.hick.org/jirc/link.prl
+
+39. What development environment do you use?
+
+    Don't laugh, I use pico as my text editor.  I should be shot.  Or
+    maybe given an award for writing over 40,000 lines of code in pico.
+
+    I don't use any kind of IDE.  My mainstay right now is the KDE 
+    Konsole.  Konsole seems to be the best tabbed terminal app I've used 
+    so far.  I have one tab setup for compiles.  Another tab setup for
+    running jIRCii from the console.  All other tabs are for individual 
+    files.
+
+    For a build tool I use Apache Ant.  Ant is awesome if your doing 
+    Java programming.  I use a couple of home brew shell scripts to 
+    package jIRCii and thats about it.
+
+    This might sound kind of crude but it has worked for me.  The only
+    place I really lose is by not having a gui environment for designing
+    dialogs.  Since all RAD tools I've tried sucked, I opted just to write
+    a framework for easily creating dialogs.  Problem solved.
+  
+    Hardware wise I have a first generation 12" Powerbook running MacOS X
+    10.3.4.  jIRCii development in the past has been done on Linux using
+    the same type of environment and on Windows using editplus.  
+
+40. Why write another Java IRC Client?
+
+    I don't own a TV or a playstation and I needed something to do.
+
+41. What clients did you rip^H^H^H receive inspiration from?
+
+    Years ago back when I was an IRC scripter.  I wrote an addon called
+    mIRCii.  mIRCii was essentially a multi-server addon for mIRC.  You
+    irc'd through one window using /window to open other windows if you so
+    desired.  jIRCii to some extent is mIRCii turned into a full blown
+    client.
+
+    I stole the shift+click color editing idea from the client OpenChat.
+    OpenChat is essentially a graphical version of ircii.  I think the 
+    goals of jIRCii and the goals of OpenChat are pretty similiar.
+
+    I was heavily inspired by the client irssi in terms of tab completion.
+    That client tab completes everything.
+   
+    The scripting language sleep was of course heavily influenced by perl.
+    Some bits of the hADES and ircii scripting interfaces made there way
+    into sleep.
+
+    I learned a lot from other clients in terms of what not to do.  Many
+    clients have gone overboard on the GUI side.  IRC is a text based 
+    protocol.  As such jIRCii was heavily inspired by text based irc 
+    clients.  You may also notice that jIRCii tries to keep graphical 
+    elements to a minimum and that most things can be disabled in the 
+    options dialog.  Although I did find that usage of jIRCii didn't start 
+    picking up until I added a graphical toolbar.   Hrmmm...
+
+    mIRC gets points for heavy influence by default.  Since mIRC is the 
+    client most people use.
+
+42. How long has jIRCii been in development?
+
+    I started writing jIRCii when I was in high school.  This was mostly
+    an effort to learn Java.  jIRC was my senior project for my high school
+    "research and development" course.  This was back in 1998-1999.
+
+    I became lazy and just used jIRC as a programming playground for the 
+    longest time.  It was a fun project to try out different ideas on.
+
+    Unfortunately a high school kid who can program is not necessarily a 
+    good software engineer.  jIRCii went through a couple of rewrites as I
+    tried out different ideas for organizing my code so it would be easier 
+    to work with.  I never succeeded at the easy to work with part.
+
+    On July 28, 2001 I released jIRCii Beta 1 to a closed group of beta 
+    testers.  This beta process went all the way up to a beta 10 with 
+    several source code only releases of a beta 11.  Beta 10 was released
+    on July 19, 2002.  So about a year long beta process.
+
+    Again I had a period of laziness.  Sometime in April of 2002 I wrote
+    the core of sleep in a weekend.  I integrated sleep into jIRCii and
+    soon realized many of the shortcomings of trying to use a programming
+    language that was written in a weekend.  I knew a rewrite of sleep
+    was necessary.  
+
+    I rewrote sleep and then found I couldn't integrate it because I 
+    changed sleep to much and the old sleep API's were to far entrenched 
+    into the jIRC codebase.  Essentially my code was so damned complicated
+    that I had to stop development because even doing something simple
+    required a lot of thought and even then I usually ended up breaking 
+    stuff.
+
+    During the summer of 2003 I started brainstorming an idea for how to
+    manage the design of jIRCii.   I decided to develop individual 
+    frameworks that were each easy to test on an individual basis.  Once
+    each of these frameworks were written I would then in theory write
+    a little bit of code to tie them all together and voila a functioning
+    peice of software.
+
+    For my last semester of college I pitched the idea of completing a 
+    large software project as an independent study.  With the motivation 
+    of a grade hanging over my head I worked my ass off and arrived at
+    jIRC beta 1 sometime in January of 2004.  Fortunately the design 
+    idea I had worked out beautifully.  jIRCii and sleep were over 40,000
+    lines of code together yet adding new features and editing existing
+    functionality was pretty trivial.  Working on this project became fun
+    again.
+
+    After graduating I did work on jIRCii here and there until I arrived 
+    at what your now using today.  This is now a pretty complete irc
+    client.
+    
+    Short answer:  I've been working on this client for a looong freaking
+    time.  
+
+43. Why don't you wait until you have more changes to do a release?
+
+    Good question.  You may notice the main package jIRCii classes are 
+    stored in is named "rero".  I named the jIRCii package this because
+    I wanted to remind myself of Eric Raymond's advice for creating a 
+    successful open source project: "release early, release often".  
+
+    As such I've been releasing jIRCii quite often.  In fact any time
+    I've either temporarily exhausted my todo list or made a mass of
+    changes I do a release.  This benefits jIRCii and its users in a 
+    big way.  The quick turn around allows me to gather near realtime
+    user feedback on choices I make with jIRCii's development.  With
+    this feedback I can identify and fix problem areas, avoid having 
+    a bad release in the wild for to long, and really develop the 
+    client I want to write and that users want to use.
+
+    In short, I feel each change I make is another step towards
+    making jIRCii into an awesome IRC client.  I feel it is worth
+    letting users keep up if they choose to do so.
+
+    If you don't like the fast turn around time of jIRCii releases
+    then I recommend downloading a released labeled stable and just
+    waiting until the next stable release ignoring betas in between.  
+
+44. I disabled my jircii menubar, how do I get it back?
+
+    Open up the options dialog using Alt+O.  From there navigate to 
+    "GUI Setup" near the bottom.  Make sure the box "Show menubar" is
+    checked.   Press OK and your menubar should be back.  
+
+    If this doesn't work it may mean jIRCii is not loading menus.irc.  
+    This could be due to a rogue script that got loaded.  The best thing 
+    to do in this case is to reset your jIRCii settings.
+
+45. How do I reset the jIRCii settings?
+
+    You should only need to do this if your jIRCii settings become really 
+    messed up.  Symptoms of messed up settings include nothing happening
+    when jIRCii starts up, a blank statusbar, menus not working or showing
+    etc.
+
+    To reset the jIRCii settings you'll need to locate and delete the .jIRC
+    folder.  The .jIRC folder is where jIRCii stores all of your settings.
+
+    MacOS X, Linux, *NIX:
+    The .jIRC folder is located in your home directory.  By default it is a
+    hidden directory.  To delete it just open a terminal and type:
+
+    rm -rf ~/.jIRC
+
+    Windows:
+    The .jIRC folder is located in something similiar to:
+    c:\documents and settings\your user name\
+ 
+    Do a file search for .jIRC and delete it.   
+
+46. My jIRCii window flashes or acts crazy occasionally, what's wrong?
+
+    Java uses a lot of video card hardware tricks to enhance performance.
+    Unfortunately buggy video card drivers can cause problems with the
+    way Java apps render stuff on the screen.  One option is to update
+    your video card driver.
+
+    Another option is to disable some of the hardware acceleration with
+    Java.  You can do this by launching jIRCii with the following options:
+
+    java -Dsun.java2d.ddoffscreen=false 
+         -Dsun.java2d.pmoffscreen=false
+         -Dsun.java2d.d3d=false     
+         -Dsun.java2d.noddraw=true 
+         -jar jerk.jar
+
+    The above is actually one line of text, I've broken it up for the sake
+    of readability.
+ 

Modified: rero/resources/toplevel/docs/scriptjirc.pdf
===================================================================
(Binary files differ)

Modified: rero/resources/toplevel/docs/sleeplang.pdf
===================================================================
(Binary files differ)

Modified: rero/resources/toplevel/readme.txt
===================================================================
--- rero/resources/toplevel/readme.txt	2005-06-11 10:12:04 UTC (rev 13)
+++ rero/resources/toplevel/readme.txt	2005-06-11 14:20:27 UTC (rev 14)
@@ -1,95 +1,95 @@
- ------- -------------------- ---------   ---------------  ------- ---------
-jIRCii - Beta (34) 05.08.05 - README
--  ------------- -------- -   ---------------- --       -    -     -     - - -
-
-The official jIRCii homepage is at: http://jircii.hick.org
-
-jIRCii is cross platform.  Any desktop platform with the Java 1.4.2+
-runtime environment should be able to run jIRCii without any problems.  
-
-For help and information about jIRCii run the application and view the 
-Help menu.  
-
-The jIRCii code and binaries are released under the artistic license.  
-
-The source code is available on my personal homepage under the projects 
-section:
-
-http://www.hick.org/~raffi/projects.html
-
-Enjoy.
-
-				-- Raffi
-
- ------- -------------------- ---------   ---------------  ------- ---------
-Running and Installation
--  ------------- -------- -   ---------------- --       -    -     -     - - -
-
-1. -   Installation      - -
-
-   Unarchive your respective jIRC archive file.   Copy the files where ever
-   you want them.
-
-2. --  Which Java to Use - -
-
-   You need to have the Java 1.4.2 (or later) runtime environment.  To 
-   obtain this just visit http://www.java.com, find the Get Java now 
-   button and download the appropriate JRE for your operating system.
- 
-   You do not need to download the software development kit, just the runtime 
-   environment.
-
-   Note: jIRCii also works with Java 1.5. 
-   
-3. - - Running jIRCii    --
-
-   Once the runtime environment is installed you just need to simply 
-   launch jIRC.
-   
-   To do this from a commandline you can type: java -jar jerk.jar
-
-   === Command Line Options ===
-
-   jIRC has a -settings command line option.  This is for specifying 
-   where your settings files are located: 
-
-   java -jar jerk.jar -settings c:\mystuff\jirc\
-
-   jIRCii also has a -lnf command line option.  This is for specifying the
-   desired Java look and feel to use with jIRCii:
-
-   java -jar jerk.jar -lnf com.sun.java.swing.plaf.motif.MotifLookAndFeel
-
-   You can also specify an irc:// URL on the jIRCii command line to specify
-   a irc server and channel you want jIRCii to join on startup:
-
-   java -jar jerk.jar irc://irc.freenode.net/jircii
-
-   === Windows ===
-
-   The Windows distribution of jIRCii comes with a jircii.exe file.  You
-   can use this to launch jIRCii and pass any of the above command line
-   arguments to jIRCii.
-
-   === Mac OS X ===
-
-   If you have the Mac OS X specific archive of jIRCii just double click 
-
-   jIRCii.app
-
-4.  -- Upgrading       --
-
-   If you are upgrading from an older version of jIRCii and you are 
-   experiencing problems you may want to delete your jIRCii settings.
-
-   Your jIRCii settings are located in your home directory under the folder 
-   ".jIRC".  
-
-   On a UNIX system your home directory is typically /home/<your-user-id>
-   On MacOS X your home directory is typically /Users/<your-user-id>
-
-   On Windows your home directory may appear in 
-   c:\documents and settings\<your-user-id>
-
-   Delete the ".jIRC" folder.  jIRCii will then recreate this folder with new
-   preferences next time you run jIRCii.
+ ------- -------------------- ---------   ---------------  ------- ---------
+jIRCii - Beta (35) 06.11.05 - README
+-  ------------- -------- -   ---------------- --       -    -     -     - - -
+
+The official jIRCii homepage is at: http://jircii.hick.org
+
+jIRCii is cross platform.  Any desktop platform with the Java 1.4.2+
+runtime environment should be able to run jIRCii without any problems.  
+
+For help and information about jIRCii run the application and view the 
+Help menu.  
+
+The jIRCii code and binaries are released under the artistic license.  
+
+The source code is available on my personal homepage under the projects 
+section:
+
+http://www.hick.org/~raffi/projects.html
+
+Enjoy.
+
+				-- Raffi
+
+ ------- -------------------- ---------   ---------------  ------- ---------
+Running and Installation
+-  ------------- -------- -   ---------------- --       -    -     -     - - -
+
+1. -   Installation      - -
+
+   Unarchive your respective jIRC archive file.   Copy the files where ever
+   you want them.
+
+2. --  Which Java to Use - -
+
+   You need to have the Java 1.4.2 (or later) runtime environment.  To 
+   obtain this just visit http://www.java.com, find the Get Java now 
+   button and download the appropriate JRE for your operating system.
+ 
+   You do not need to download the software development kit, just the runtime 
+   environment.
+
+   Note: jIRCii also works with Java 1.5. 
+   
+3. - - Running jIRCii    --
+
+   Once the runtime environment is installed you just need to simply 
+   launch jIRC.
+   
+   To do this from a commandline you can type: java -jar jerk.jar
+
+   === Command Line Options ===
+
+   jIRC has a -settings command line option.  This is for specifying 
+   where your settings files are located: 
+
+   java -jar jerk.jar -settings c:\mystuff\jirc\
+
+   jIRCii also has a -lnf command line option.  This is for specifying the
+   desired Java look and feel to use with jIRCii:
+
+   java -jar jerk.jar -lnf com.sun.java.swing.plaf.motif.MotifLookAndFeel
+
+   You can also specify an irc:// URL on the jIRCii command line to specify
+   a irc server and channel you want jIRCii to join on startup:
+
+   java -jar jerk.jar irc://irc.freenode.net/jircii
+
+   === Windows ===
+
+   The Windows distribution of jIRCii comes with a jircii.exe file.  You
+   can use this to launch jIRCii and pass any of the above command line
+   arguments to jIRCii.
+
+   === Mac OS X ===
+
+   If you have the Mac OS X specific archive of jIRCii just double click 
+
+   jIRCii.app
+
+4.  -- Upgrading       --
+
+   If you are upgrading from an older version of jIRCii and you are 
+   experiencing problems you may want to delete your jIRCii settings.
+
+   Your jIRCii settings are located in your home directory under the folder 
+   ".jIRC".  
+
+   On a UNIX system your home directory is typically /home/<your-user-id>
+   On MacOS X your home directory is typically /Users/<your-user-id>
+
+   On Windows your home directory may appear in 
+   c:\documents and settings\<your-user-id>
+
+   Delete the ".jIRC" folder.  jIRCii will then recreate this folder with new
+   preferences next time you run jIRCii.

Modified: rero/resources/toplevel/whatsnew.txt
===================================================================
--- rero/resources/toplevel/whatsnew.txt	2005-06-11 10:12:04 UTC (rev 13)
+++ rero/resources/toplevel/whatsnew.txt	2005-06-11 14:20:27 UTC (rev 14)
@@ -1,1086 +1,1105 @@
-Beta   34 Release 05.08.05
-====
-- users who are no longer visible to the irc session (i.e. quits, people 
-  not on a common channel with you) are removed from the internal data 
-  list on part and quit events.
-- added a switchbar option to always sort the switchbar buttons
-- &getWindows() now includes the %STATUS% window in the list
-- adjusted how jIRCii calculates text width/height metrics for the custom 
-  text display, should make serge happy.
-- added %GLOBAL, a hash whose contents is shared across scripts and across
-  servers.   Should make the blue-elf happy.
-- fixed extra character being appended to mode $parms string
-- added error detection for attempting to use foreach loop on a non
-  array value.
-- updated &use() to only instantiate dynamically loaded class once
-  other scripts loading this same class will share the instance
-
-** I updated beta 34 at 10am CET to adjust the height font metrics back
-   to the old method.  The new width calculations are staying in **
-
-Beta   33 Release 05.01.05
-====
-- added support for ISUPPORT numeric 005.  This information is available 
-  as a hash scalar via &getSupportHints();
-- PREFIX variable from ISUPPORT is used to map user modes on channels
-- added a hasmode predicate i.e. if ($nick hasmode $channel) { }
-- added a &getModeFor("nick", "#channel") to return the mode display 
-  character that nick has on #channel
-- fixed bug with perform on connect not firing on servers with no MOTD - Elly
-- added a $channels variable which is available inside of the QUIT event/set
-- /me now works in a DCC Chat
-- added an option to View -> Options -> IRC OPtions to disable auto 
-  update of internal address list on channel join
-- optimized the drawing of text selection a little bit.  you might not 
-  notice, but I did spend 3 hours on it.
-- updated &addTimer to interpret parameter as a sleep closure
-- added "reconnect.time" property (set to 5s by default).  this variable 
-  controls how long jIRCii sleeps between attempted reconnects.
-- personal idle timer is now reset even if the on input event is halted
-- fixed clickable URL's not working with "www.somesite.com"
-- array index operator can now be applied to HOES expressions i.e.
-  $var = ["this is a string" split: " "][1]
-
-Beta   32 Release 04.24.05
-=====
-- upgraded Sleep library to Sleep 2.0-b6, new scripting features galore.
-
-Stable 31 Release 03.20.05 (Maintenance Release)
-=====
-- fixed 100% cpu usage when moving the jIRCii window on Windows
-- functions tileWindows(), cascadeWindows(), activateSession(), 
-  setSessionColor(), and setSessionText() now take place on the UI thread.  
-  This is to prevent a deadlock situation.
-- window parameter in getWindowState() and setWindowState() is now optional to
-  allow accessing the state of the main jIRCii window
-
-Stable 30 Release 03.13.05
-======
-- added parseSet("SET_NAME", %hash), the old option of 
-  parseSet("SET_NAME", "target", "parameters") works as well.  This can be used
-  in conjunction with %localData to echo a built-in set from an event that 
-  halts client output.
-- ISON not enough parameters suppressed by broken ircds that can't handle empty
-  ISON lists (used for checking lag).
-- clickable channel names feature has been adjusted to not fire for channel
-  texts ending with a period.  I've been burned by this many times so I 
-  decided to fix it.
-- jIRCii window now updates background images after being moved.
-- added numeric 308 to jIRCii's internal list of whois numerics (not supported
-  in the default script though).
-- PART messages are only supressed if auto /window on join and part on window 
-  close are both enabled.
-
-Beta   29 Release 02.27.05
-======
-- fixed a bug with using fireEvent() from within an event.
-- server connect notices now always go to the status window
-- text no longer auto scrolls if you are scrolled up.
-- CHANNEL_NAMES set now goes to channel window
-- fixed a race condition with echoed text and listbox updating.
-
-Beta   28 Release 02.12.05
-======
-- Fixed race issues in Sleep parser
-- Fixed script stack conflicts caused by the global script cache 
-  mechanism
-- Removed timer synchronization (this is likely a good thing)
-- jIRCii now strips out the unreal mode "!" indicating someone
-  is a channel admin, assumes an @ in its place... *crosses fingers*
-- added a property "notabs.border" for determining the size of the
-  window border when server tabs are turned off... default is 1x
-  this is for scripters who really want to tweak things...
-- bound Alt+H to open the help dialog
-- hard coded the default behavior of double clicking a nickname in
-  a channel listbox, this behavior can be overriden with a script.
-- removed the garbaged collection call tied to /clear, /clearall
-- fixed /run, /exec threading, I was making a method call that
-  resulted in the /run, /exec being executed in the current thread.
-  this has been fixed.  try /run, /exec again, you'll like 'em.
-- on disconnect the first message will be echo'd to every window,
-  every disconnect from a reconnect attempt will thereafter be
-  echo'd to the status window.
-- lag checking is now tied in as part of the notify list requests
-  rather than sending a CTCP LAG to yourself every 60 seconds
-- temporarily removed IRC Tutorial from Help dialog
-- added property "ui.buffersize" which defines the max tolerance
-  of the scrollback buffer.  when this value is hit, the scroll
-  back buffer is trimmed down to half of the max buffer size.
-- added &getButtonColor("window") for retrieving the color of the
-  text on a switchbar button in aarrggbb format.
-- added &setButtonColor("window", color_in_aarrggbb_format) 
-  for setting the color of the text on a switchbar button
-- text echo'd using &echoRaw is now logged (if logging is 
-  enabled)
-- added "switchbar.hilight" option to enable/disable built-in 
-  hilighting a switchbar button on activity.
-- added on session { } event to signify the current irc session
-  becoming activated.
-- rewrote sleep predicate parser to allow for right hand side
-  expressions to evaluate correctly i.e.:
-  if ($x < (3 + 4) / 6) { }
-- jircii now handles empty /names replies better...
-- added a $mouse variable to on click/dclick/sclick events, this 
-  variable contains random info about the mouse event that you
-  are more than welcome to parse and do stuff with.
-
-Beta   27 Release 01.29.05
-======
-- fixed a NPE caused by sleep subroutines with no return value being used 
-  in an expression.
-- added $handle = &listen(port, [timeout], [$info]) function for creating 
-  a simple server socket.  
-- On MacOS X the Info.plist file now reflects the correct jIRCii version
-- Fixed long standing "ghosted" channel listbox bug.
-- Fixed bug with perform on connect / jIRCii Launch service not working 
-  on servers that have no MOTD
-- The jIRCii script loader now cache's parsed scripts 
-- Did more work trying to make jIRCii better about memory.
-- added an option to enable/disable text anti aliasing (thanks [Serge])
-  check out: View->Options->Font Options
-- bound the Home key to move the cursor to the beginning of the input box
-- bound the End key to move the cursor to the end of the input box
-- fixed timestamp getting the wrong am/pm value for noon.
-- clickable URL's are now case-insensitive
-- unbroke &mask() function, thanks to blue-elf for pointing this one out
-- URL's inside of parentheses (http://www.google.com) are now clickable
-
-Beta   26 Release 01.23.05
-======
-- Did some work making jIRCii let go of memory.  This will be an ongoing 
-  process.
-- Added another syntax for events: 
-
-  on event "*source* *target* *parms*" { }
-
-  Essentially the string parameter represents 3 wildcard tokens that 
-  describe what event you want to match.  See the jIRCii Scripting 
-  Reference for more details.  Descriptive events and normal events will
-  still continue to work the same.
-- Made the /clear, /cls, and /clearall commands call the garbage collector
-  to immediately reclaim memory.
-- clickable URL's now work for https:// url's.
-- perform on connect commands are now evaluated for $var's. i.e. you can 
-  now do like:
-  /mode $me +i
-- sleep hashtables now filter out all keys with $null values when 
-  returning a key set with keys().
-- fixed -isletter and -isnumber returning true with empty parameter strings.
-
-Stable 01.03.05
-======
-- fixed Meta+N, Meta+T opening a new irc server keyboard combinations
-- on "open" event now fires immediately after a window opens.
-- made the help window a "touch" wider...
-- updated jircii launch service url handler to allow the server port to be 
-  specified: irc://nick at irc.server.com:port/channel?key
-- fixed sleep bug with for loop initialization terms.  Simple stuff like 
-  for ($x = 0; ...) worked fine, stuff like for ($x = 1 + 2; ...) turned 
-  out to be broken.  Fixed.
-- added a "Scripting Tutorial" to the help window documentation
-
-Stable 12.18.04 - Christmas Maintenance Release :)
-======
-- unbroke &getClipboardText and &setClipboardText, for the longest time I 
-  was blaming this on Sun.  Turns out I installed my bridges wrong.  They 
-  work now :)
-- &getWindowTitle() w/ no args now returns the titlebar text of the 
-  jIRCii window
-- &setWindowTitle("text") w/ only one arg now sets the jIRCii window 
-  titlebar text
-- clicking a url/channel will now give a little visual cue of the hand 
-  cursor that the action has been processed.
-- reworked the built-in help window
-- reformatted a lot of the help window documentation
-- fixed a bug with Ctrl+K and no number chopping a character (patch from Mouton)
-- actions in private messages will now cause a /window to be made if auto
-  /window for messages is enabled.
-- fixed a bug where windows w/ spaces in the name weren't being closed by
-  their switchbar menu
-- added &getLogFile("window") function to retrieve the path to and name 
-  of the file messages for "window" are being logged to.
-- added &logMessage("window", "text") to hook into the message logging 
-  system and log a message (iff logging is enabled)
-- upgraded to Sleep 12.18.04 (fixes bugs and such)
-
-Stable 23 Release 11.25.04
-======
-- Removed the kick/ban/insult/slapz popup menus.  *sigh*
-- added a &duration(seconds) to format time time into days, hours, 
-  minutes, and seconds string.
-- fixed /clearall not reseting status window highlite color
-- fixed a bug with auto connect on startup not being able to find a server 
-  in the servers.ini list.
-- fixed a sleep bug with ||'s and &&'s that broke the <TAB> file 
-  completion for /theme, /load etc.
-- fixed <TAB> completion bug with /msg nickname<SPACE><TAB> putting in 
-  message box /msg nnickname
-- hardcoded and enhanced clickable URL handling.  Nice thing is now that 
-  it is hardcoded the event can be halted by an on click event.   Removed 
-  OPEN_URL set
-- fixed a null pointer exception with the mouse scroll wheel on a 
-  completely cleared window.
-- the string %STATUS% is now used to refer to the status window in certain 
-  window functions.  scripts that refer to the "Status" window will need 
-  to be updated.
-- fixed a bug where text from someone with a nick of Status would go to 
-  the status window.
-- fixed a null pointer exception closing the status window with server 
-  tabs turned off
-- bound Ctrl+D key to close about dialog for those unfortunate souls who 
-  have crappy window managers that don't put window controls on certain 
-  types of dialogs.
-- scripted a close window menu item to the switchbar buttons
-- added a printAll($handle, @array) function to sleep
-
-Beta 22 Release 11.20.04
-====
-- Congratulations jIRCii scripters, you are now sleep beta testers:
-  - fixed bug with return not working inside of while/for loops
-  - added 'break' command to sleep
-  - added a iff(condition, value_true, value_false) operator
-  - added checkError([$scalar]) which will return a error description 
-    string if an operation failed (i.e. openf, connect, exec)
-  - moved date/time functions &parseDate,&formatData,&ticks over to sleep 
-    library
-- updated getScriptResource("script.irc", "directory", "file") to take 
-  multiple parameters
-- /st #channel text will no longer attempt to set the channel topic...
-- clearing a window now resets its switchbar color (unhighlites it 
-  basically)
-
-Beta 21 Release 11.13.04   <Stable Release Candidate>
-====
-- fixed a perform on connect issue with "random" servers.
-- increased the dcc timeout to 2 minutes from 1 minute.
-- fixed a sleep bug not detecting a missing ; in return statements leaving 
-  a ; out of return statements would crash the sleep parser
-- jIRCii script loader now reports to user if the parser 'crashed' when 
-  attempting to load a script. 
-- fixed a null pointer exception occuring with proxy settings enabled (in 
-  some cases)
-- added an indicator to the default script statusbar of what server/ 
-  session id your in, when you have the server tabs disabled
-- fixed an issue with dcc local info getting messed up preventing users 
-  from sending files (triggered by viewing the dcc options)
-
-Beta 20 Release 11.11.04
-==== 
-- added an option to disable the server tabs
-- added an option to disable the jircii menubar
-- added Alt+O to open the options dialog, you'll want this after you 
-  disable the menubar and decide you want it back.
-- moved font options to their own dialog
-- added an option to 'disable' the warning message stating jircii needs 
-  to be restarted when a preference changes
-- added font size 9 to the font options dialog
-- if resolving hostname using server method fails jIRCii will now resort 
-  to using the "normal" method for local hostname lookup
-- made jIRCii bring up an error dialog for any JVM less than version 1.4.2
-- small bug fix with tab completion, fixes /command<SPACE><TAB> from 
-  bringing up //command
-- added function scrollWindow("window", +/-lines) positive value to scroll 
-  down, negative value to scroll up
-- bound the page up and page down keys to scroll up and down
-- added getCursorPosition("window") and setCursorPosition("window", n) 
-  functions
-- updated getFileProper("parent", "child", ...) to take any number of 
-  parameters to string all params together into a properly formatted 
-  pathname for the current OS.
-- renamed "Other Commands" in help dialog to "Keyboard Shortcuts"
-
-Beta 19 Release 11.06.04
-==== 
-- added a .exe front end for easily launching jIRCii on Windows
-- small UI tweak to the sorted list windows, 1px between headers and 
-  information
-- fixed: part command is no longer sent when closing a channel window for
-  a channel you are no longer present on.
-- irc framework is now "tolerant" of ultra lame Unreal IRCd & and ~ modes
-  for users.
-- on raw event is now haltable...  meaning you can catch anything that
-  comes through the irc socket and stop jIRCii from processing it.
-- updated &clear(@array/%hash) to work with hash scalars as well as array 
-  scalars.
-- added &hash('key=value', 'user=password', ...) to generate a %hash
-- added getScriptResource("script.irc", "resource.file") which returns a 
-  properly formatted pathname for the current OS that points to 
-  resource.file in the same directory as script.irc
-
-Stable 18 Release 10.31.04
-======
-- made jIRCii irc parser always match *!*@* as a nick!user at host pattern, 
-  no matter what the contents of nick, user, or host are.  (fixes some 
-  bugs for example an some irc network puts colors in the hostmask of 
-  ircops which freaked out jIRCii)
-- oops, somehow internal function fireEvent() was removed from being 
-  loaded into the script environment - fixed!
-- made the DCC list a synchronized data structure, hopefully preventing 
-  lockups when many scripts are trying to access dcc data.
-- may have fixed a focus problem w/ jIRCii MDI mode.  I noticed some code 
-  that needed to be fixed and fixed it.  
-- added a check to keep jIRCii windows from stealing the keyboard focus 
-  when a dialog is active.
-- added formatNumber(number, base) and parseNumber("number", base) to 
-  sleep for formatting a number to a certain base and parsing a number of 
-  a certain base value.
-- updated keybinding constant Number_. to be Period 
-- /dns nickname now works if nickname is in the Internal Data List
-- added a hook to the tab key binding, if $_IS_FILE_COMPLETE is set to 1 
-  then hitting tab will trigger filename completion over all else...
-
-Beta 17 Release 10.24.04
-=======
-- jIRCii now loads sleep scripts with no charset conversion.
-   [ Scripters - this change is a big deal for you.  You can now use 
-     upper-ASCII characters in your script and the way they render will be 
-     dependent on which font you use, not how Java chooses to mangle the 
-     character encoding of your file ]
-- selected charset option now works for text sent as well as text 
-  received.
-- Added what every irc client needs: A SOUND API!@#$$%^  
-  The Sound API can be summed up with the following code:
-
-  $sound = loadSound("filename");
-  soundPlay($sound);
-  soundLoop($sound);
-  soundStop($sound);
-
-  Sound files can be a MIDI file, a .WAV file, or a .AU.
-- Made Perform On Connect feature case insensitive when matching your
-  network preferences to the network you are currently on.
-- Fixed cosmetic blemish in the UI Options dialog causing charset options 
-  to not paint correctly.
-- added function &buildCP437String("string") to do a CP437 charset 
-  conversion.  will only work on characters that haven't been converted
-  yet (i.e. any text in a script file).  CP437 is the charset that defines
-  all those ansi characters everyone is so fond of.
-
-Beta 16 Release 10.16.04
-=======
-- fixed jIRCii launch service Guest_nn nickname not being random
-- tab character is now rendered as 3 spaces.
-- added printEOF($handle) function to signal end of file to an i/o output 
-  stream.
-- fixed bug with jIRCii Launch Service not connecting to servers that 
-  aren't specified in the servers.ini file
-- made default username information more friendly for lame servers 
-  (jIRCii Quick Launch)
-- logging mechanism now works for window names with weird characters 
-  i.e. |'s and such
-- fixed a null pointer exception with /st #channel when your not on #channel
-- added a "charset encoding" option to Options->GUI Setup, this allows 
-  you to set which charset should be used to interpret data coming from 
-  the irc and dcc chat connections.
-- Fixed key bindings on non-english locale machines, the fix was to 
-  hardcode descriptions for bindable keys in jIRCii's source code.  
-- small cosmetic change to options dialog (fix problem with DCC Options 
-  on Java 1.5.0)
-
-Beta 15 Release 10.03.04
-====
-- Updated to Sleep 09.26.04 library
-  -- adds use of tuples for assignment i.e. ($x, $y, $z) = @array;
-  -- removed whitespace requirement for the string concat operator .
-  -- added a strrep("string", "old", "new" for straight up string replacement.
-- Updated menus.irc to not use . as part of any variable names.  Sleep 
-  doesn't allow this anymore.  
-- added a check to prevent Sun's !!!!BROKEN!!!! GTK Look and Feel from 
-  being resolved as the native look and feel.
-- Added support for SOCKS v4/5 proxy servers
-- Updated to a new servers.ini from Tjerk Vonck (cLAN: mIRC)
-- jIRCii now executes key binding code in the "event" thread, hopefully 
-  this will prevent code bound to keys from causing any deadlock problems.
-- added a check to prevent "perform on connect" commands from being 
-  executed again after manually typing /motd
-- added support for command line argument in irc://server/channel?key 
-  format to cause jIRCii to connect to server and join #channel with 
-  specified key.  This is a necessary step to make it possible for web 
-  browsers to use jIRCii to handle irc:// links
-- updated alias help to include /away, /back, and /nick
-- updated /query to actually list all channels your on when typed by 
-  itself (the help docs listed this behavior for a long time, it just 
-  never had it).
-- made jIRCii better about letting go of some memory when closing a 
-  window 
-- window numbers in "Window" menu now match numbers used for switching 
-  windows with Alt+n keyboard shortcut.
-- Added SET_NOTIFY and SET_IGNORE for echoing something when the ignore 
-  or notify lists are modified via the /notify or /ignore commands...
-- text input events are now fired even if user is accidentally holding 
-  down shift/ctrl keys while pressing enter.  anything to take care of 
-  Zenon.
-- Added Ctrl+Left/Right to quickly navigate previous/next server 
-  sessions, along with Alt+Left/Right to quickly navigate previous/next 
-  channel/query/dcc windows...
-- Added function getCurrentWindow() that returns the safest window to 
-  echo text to, either the current active window or the status window.  
-- Altered getActiveWindow() to return the real current window wether its 
-  a special (i.e. dcc list, /list -gui) or not.  This fixes a bug with 
-  Ctrl+D on a special window closing the current server connection.
-- added &renameWindow("old", "new") for renaming a window, only works on 
-  query windows right now.
-- added a feature, when a user you have an open /window with changes 
-  their nick, jIRCii will rename the window for you.
-- added &echoColumns("window", "col1\tcol2\tcol3...", .9) for echoing 
-  formatted text that stays in columns similar to how the /names list is 
-  wordwrapped
-- added /creply command for sending a CTCP reply
-- added /eval <expr> command for quickly evaluating and echoing the 
-  result of a sleep expression
-
-Stable 14 Release 08.07.04
-======
-- fixed a nasty bug in the logging causing log files to be open in overwrite
-  mode rather than append.
-- logging information is now saved to a subfolder based on actual irc network
-  rather than the irc server hostname.
-- quick cosmetic change to the dcc options dialog
-- /newserver now takes the same parameters as /server
-- added an option under the windows dialog to adjust the width of the channel
-  names listbox.
-- enhanced clickable channels a little to allow clicking on @#channel 
-  +#channel etc.
-- gotta love the decisive nature of my coding... on repl_nnn events have 
-  returned but on nnn will continue to work as well.  I won't change this, 
-  promise :)
-- fixed a bug with failed nickname change (due to changing to fast) 
-  messing up jIRCii's internal data structures and throwing an exception.
-  nickname change set will not be fired in this case...
-- fixed bug in default.irc set SEND_DCC { }, off by one with the 
-  parameters
-
-Beta 13 Release 07.31.04  (Stable release candidate)
-====
-- fixed a problem with the sleep return stack...  it manifested itself in 
-  the form of a loose nickname being echo'd to the status window here and 
-  there.
-- made -lnf argument take precedence over setting to use native look and 
-  feel.
-- if a channel has no bans set /banstat will echo a message relaying that 
-  info.  Added a CHANNEL_BANLIST_END set to go with this.
-- made the directory selector widget recognize wether or not its disabled.
-- clicking on a channel name will cause jIRCii to join that channel.
-- made 'o' the default focus accelerator for the Commands menu, so it no 
-  longer conflicts with the Connection menu focus accelerator of 'C'.
-- /dcc stats dialog and channel /list -gui dialog sizes and positions are 
-  now remember seperately of other sorted windows.
-- found a problem with IRC events, apparently on repl_nnn doesn't work, 
-  however on nnn where nnn is a numeric does work.  So rather than fix the 
-  code I updated the documentation.  set repl_nnn { } is still in use 
-  though.
-- added a 4th parameter to addTimer(&func, n seconds, r repeats, paramter 
-  for &func) basically parameter for &func will get passed to &func 
-  whenever the timer is executed.  Useful for creating dynamic timers.  
-  Thanks elf.
-- fixed bug with dcc sessions dialog close dcc menu option closing the 
-  wrong session.  Thanks GulaBapa for pointing this one out.  See I do 
-  occasionally listen to my users.
-- made tab based file completion case insensitive to shut naz up.
-
-Beta 12 Release 07.25.04
-====
-- added an expr('3 + 4') function to sleep for evaluating an expression
-- added \r (return), \n (newline), and \t (tab separator) escape 
-  constants to sleep
-- added scripting function setClipboardText("text")
-- REPL_321 is no longer mistaken as a /whois reply numeric.
-- added normal array @_ to subroutines, which contains all of the 
-  arguments passed to the subroutine.
-- fixed divide by zero bug with trying to cascade or tile windows when 
-  there where no active windows
-- enabled SO_KEEPALIVE on dcc chat sockets, this way a dcc chat socket 
-  won't sit there forever if the socket actually died awhile back.
-- setup a timeout of 60 seconds for dcc send and receive sockets.
-- added /banstat [#channel] command for obtaining a list of bans, 
-  consequently I added a CHANNEL_BANLIST set to go with this...
-- added /unban nick|banmask command to unset all bans related to nick or 
-  to unset the specified banmask.
-- fixed problem with activateWindow() not working on windows opened as 
-  minimized to start with.
-- added a check to keep jIRCii from announcing it has resolved your local 
-  host info multiple times.
-- \t is now the column separator for sorted windows
-- added matched() function  to sleep, works like matches("string", 
-  'pattern') except it uses the values of the last ismatch comparison.
-- added to sleep getFileProper("/path/to", "file") which returns 
-  /path/to/file in the appropriate form for the current operating system.
-- added tab based file completion to /dcc send, /send, /load, and /theme
-- added a function fileCompleteAll("partial file") to access file 
-  completion routines. I originally scripted this but decided to make it 
-  available for anyone
-- reworked directory selection widget in the options dialog, this is to 
-  prevent drawing problems due to weird Java layout behavior.  Some 
-  functionality was lost but I don't think I really had a choice.
-
-Beta 11 Release 07.17.04
-====
-- made a for real no kidding hack to keep the timer thread from dieing. 
-  fix it? haha yeah right...
-- fixed potential divide by zero error when calculating dcc transfer 
-  rates.
-- removed a typo in the IRC_RECONNECT set (had to log some sort of 
-  change).
-- rearranged the dcc statistics a little bit and added a field for the 
-  total size of the data sent or received.
-- added a getScriptPath("filename.irc") function for obtaining where a 
-  loaded script exists.
-- added an option to fill spaces in a filename when doing a dcc send.
-- made the SEND_DCC set friendly to filenames with spaces ($1 = port, 
-  $2 = size, $3- = file)
-- unbroke sleep function &clear(@array).
-- added a &copy(@array) function to sleep which returns a copy of the 
-  given array and copies of all of its values.
-- fixed bugs with the tab completion... 
-- redefined some key bindings:
-  Ctrl+C is no longer bound by default, this is to prevent interfering 
-  with the function of copying text on Windows.
-
-  The Escape key has been bound to clear the editbox.
-- made 'server method' technique for resolving dcc local info the new 
-  default
-- Added a 'theme' manager.  An easy way to import/export colormap and 
-  background color settings for jIRCii.  Along with this comes a /theme 
-  "filename" command to load a theme.  Implementation wise it is just a 
-  jIRCii generated sleep script.  Loading a theme is basically the same as 
-  loading the script and executing it one time only.  Special thanks to 
-  Dekkard for the suggestion.
-- added a generateThemeScript("filename") function to generate a theme 
-  file from the current settings.
-- tile and cascade functions for jIRCii now unset maximized property
-- added "x" operator to sleep, which is string repetition i.e.
-  $str = "abc" x 4; # $str is now "abcabcabcabc"
-- updated some of the cosmetics of the help menu.
-- gave dcc open messages and dcc close messages their own colors, so they 
-  are no longer the same as joins and quits.  (just for you tijiez)
-- made sorted windows tie into most normal window events and window 
-  manipulation functions, I expect bugs, lets hope not though.  
-- added a -isspecial "window name" predicate for determining if a window 
-  is a special window (i.e. list dialog, dcc stats, sorted window etc) or 
-  not.
-- scripted sorted windows are no longer activated by default when opened.  
-  To activate them you must explicity call activateWindow("Window title")
-- added "on sclick" event for when a row is a double clicked in a 
-  scripted sorted window. right now $0 = row number, $1- = window name
-- fixed a bug with $window in "on close" always being set to "Status", 
-  had to do with the order of close events.
-- added a /dns <hostname> command, to go along with it I've also added a 
-  RESOLVED_HOST set
-
-Beta (10) Rerelease 07.11.04
-====
-- fixed a problem causing QUIT messages to now show up.  I don't know 
-  where this came from but it is the reason for the rerelease.
-- undid b10 change of making IRC_RECONNECT message display once.
-
-Beta (10) Release 07.10.04
-====
-- window position information is now saved when you close an internal 
-  window (used to only be saved when a window was activated... but 
-  nooooooo that wasn't good enough).
-- added a check to code to prevent /window by itself from opening a 
-  unclosable blank window.
-- made the size of default windows larger...
-- fixed join sync not showing up for channels with different case than 
-  what the user joined with.
-- fixed a divide by zero problem with getTransferRate()
-- added a check to prevent the dcc sessions window from being opened 
-  multiple times per session.
-- added some synchronization to the stop timers code...
-- getWindows() now returns windows in the order they were opened (i.e. 
-  the switchbar order) this fixes the Alt+n window ordering problem and 
-  makes the Window menu more accurate as well
-- altering the position of the listbox is now done in the swing event 
-  thread, should fix weird problems where a copy of the listbox becomes 
-  ghosted in some position
-- Courier New, size 13 is now the default font for Windows and MacOS X, 
-  all other platforms will by default use the "monospaced" font.  
-- fixed perform dialog bug, sometimes settings for a network would carry 
-  over to the "all networks" setting.
-- made the /reload filename.irc command apply to all irc sessions
-- verbose script loading now displays script loaded message before 
-  executing script (but after loading)
-- added nickCompleteAll("pnick", "#channel") that returns an array of all 
-  nicknames on #channel matching pnick.  the array is sorted from most 
-  relevant to least relevant...
-- enhanced tab nick completion to cycle through nicknames...
-- added tab completion for / commands i.e. /un<TAB> will put /unload in 
-  the editbox...  this is experimental, if you don't like it let me know 
-  and I'll take it out
-- added function getAliasList() that returns an array of all built in 
-  aliases and scripted aliases built in aliases are lowercase, and 
-  scripted aliases are uppercase.
-- attempting to reconnect to server message is now echo'd only once after 
-  disconnection this should prevent screen from flooding with attempting 
-  to reconnect messages
-
-Beta (9) Release 06.30.04
-====
-- added a quick way to edit the channel topic:
-  type: /topic and then hit <TAB>, the current topic will come up in the 
-   editbox found the idea in the irc client irssi.  way to clever.
-- "/mode #channel" will now echo the current mode for the given channel, 
-  the set CHANNEL_MODE_IS has been added as well
-- expanded /mode command a little bit, works as normal otherwise:
-  /mode - echos the mode for the active channel
-- added /sm command -> a shortcut for the /mode command
-- reply 331 (no topic set) now fires set CHANNEL_TOPIC_IS
-- added a SEND_DCC set, similiar to SEND_CTCP set
-- verbose script loading is now enabled by default
-- a error set is now fired (i.e. CHAT_CLOSED, or SEND_FAILED) if jIRCii cannot
-  bind a port to listen for the dcc request...
-- /notify nickname now adds user to notify list (jIRCii has always had
-  /notify <add|remove> <nickname>... however people assumed /notify nick to 
-  work).
-- the ident daemon now dies disables itself more gracefully when you turn it 
-  off in the options after it didn't startup in the first place (bug fix).
-- fixed a bug in internal method for resolving the weekday, sunday was comeing
-  up as an unknown day.
-- hitting enter on an empty textfield now fires an "on input" event with $1- 
-  set to ""
-- fixed a bug where input halting wasn't being reset after each firing of an 
-  input event.
-- fixed a case issue with determining wether or not a target is the active 
-  query, channels that were active were having text displayed like they were
-  inactive due to case differences.
-- fixed problem with fixed width switchbar buttons on Windows not 
-  dissappearing upon closing a window..
-- added a getTimeRemaning($dcc_conn) function for getting the estimated time 
-  left for a dcc send/receive connection...  I didn't want to script it so I 
-  assume you wouldn't want to either...
-- added a formatTime2(n) function for formatting n seconds into a hh:mm:ss form
-- added estimated time remaining to "/dcc stats" information
-- added "version.addons" internal property, if this property has a value it 
-  will be used when jIRCii reports its version information instead of a 
-  tagline... a convienent way for scripts to announce that they are loaded
-- tweaked the look of the /dcc send "dialog"
-- added a check to prevent jIRCii from resuming a file that is already 
-  completely downloaded.
-- fixed a data structure bug, when a user parted a channel the channel wasn't
-  removed from the user's internal list of current channels...  naughty naughty.
-- /dcc send dialog and scripted file dialogs now remember the last directory 
-  to be worked on.
-- added a check to dcc receive, full file paths are now stripped off of 
-  incoming dcc requests
-- sorted list window's now have properly sized switchbar buttons under the 
-  fixed-width setting
-- added scripting interface for creating a sorted window and refreshing the 
-  data in a sorted window.  See scriptjirc.pdf under the Dialog functions.
-
-Beta (8) Release 06.24.04
-====
-- fixed a bug with time+date stamp code miscalculating the current weekday
-- added a logging feature, now you can log everything... great for turning in
-  your friends who brag about the latest DoS attack or creating the latest
-  virii.
-- worked around a painting problem with the UI Options dialog under OS X
-- refactored the /list -gui code so I now have a more generalized window that
-  can display data in the same way, made some small cosmetic fixes as well
-- DCC_REQUEST set is now actually being utilized.  It was there just not being
-  used for some reason.
-- added a /dcc stats, it is the same as typing /dcc by itself except it comes
-  up in its own window and is updated automatically...
-
-  To go with this I added several sets for customizing this dialogs output
-  DCC_LIST_TYPE, DCC_LIST_NICK, and DCC_LIST_INFORMATION, I've also added
-  a "dcc" popup menu hook which has a local variable $this for referencing
-  the dcc connection.  See the updated scripting docs for more info..
-- popup menus will now invoke /list -gui for channel listings.
-- switched default font to Java's "Monospaced" which is available on 
-  every java platform.
-- added a "fixed width buttons" option for the switchbar, under 
-  Options->Switchbar the hack to make the fixed width buttons shrink when 
-  the switchbar is filled is beyond ugly.
-- adjusted the default size of the options window so it will layout 
-  properly on other platforms *cough*linux*cough*
-- Miscellaneous UI tweaks: font selector, miscellaneous options, script 
-  manager, input field (opaqueness)
-- Reorganized the Options->Interface Options dialogs.
-- text layout tweaks: main display, statusbar, and input field all line 
-  up with eachother when drawing text...  there is a 2px buffer between 
-  the edge of each component and the first character.
-- fixed a bug with editbox font not updating immediately when the font 
-  preference is changed
-- keys bound with the "bind" keyword are no longer processed by java 
-  itself.  once your script gets ahold of the key then thats it.  
-  consequently this fixes a bug with my Alt+n and Ctrl+n shortcuts putting 
-  numbers in the editboxes when they where being used.
-- internal help filenames no longer have spaces in them, fixing a problem 
-  with jIRCii's help on Java 1.5 under Linux
-- made some changes to the way font metrics are calculated for laying out
-  text.  most fonts will now look more centered on the statusbar.
-- fixed a null pointer exception when auto joining auto /window'd
-  channels...
-- expanded irc parser host pattern to accept the = sign
-
-Beta (7) Release 06.11.04
-====
-- added a kickass little toolbar, there is also an option to disable it 
-  under Options->UI Options at first I didn't like it but now its kind of 
-  grown on me.
-- bug fix: multiple lines of text, when pasted will all be sent to the 
-  server...
-- added a /list -gui option which pops up a channel /list dialog with 
-  sorting and searching abilities
-- added a new popup menu hook "list" for the channel /list window. $0 = 
-  channel $1 = users $2- = topic
-- added a new popup menu hook "switchbar" for the jIRCii window 
-  switchbar, $0 = the window name
-- fixed a bug with 'on input' event and halt.  once halt got used with an 
-  on input event jIRCii would not process any more input (the halt got 
-  stuck)... this one pissed me off when I was trying to write an xdcc script.
-- clicking edit in the server editor will now select and scroll to the 
-  same server in the server editor dialog.
-- removed the scriptjirc and sleeplang html files from the jIRCii 
-  distribution, I like the pdf better.  The html versions of these files 
-  will continue to be available on the jIRCii website.
-- fixed a null pointer exception when auto connecting and auto joining 
-  channels resulted in stuff happening before all the datastructures were 
-  propagated...
-- made regular expressions for nickname parsing more liberal, so jIRCii 
-  shouldn't have problems parsing nicknames on servers using different 
-  charsets (i.e. Korean nicknames)
-- added an error message for attempting to reload a script that isn't 
-  currently loaded
-- fixed scripting documentation, I documented the wrong parameters for 
-  sendReply() and sendRequest(); they both require three parameters... not 
-  two.
-- made multiserver session information querying commands take an index as 
-  a parameter, so you can query information about other sessions from a 
-  script in one multiserver session.. this affects getSessionColor()
-  and getSessionText()
-- added a %localData hash variable to help out scripters.  Local 
-  variables are basically function parameters, stuff made local with the 
-  local() function, event variables etc.  %localData is a read-only 
-  hashmap with all of the keys and values for all of the local data
-
-  To see all of the variables passed during a ctcp request event:
-
-  on request
-  {
-    foreach $var (keys(%localData))
-    {
-       echo("$var = " . %localData[$var]);
-    }
-  }
-
-- After having my arm twisted, I've added an on exit event.
-- if a variable is empty in the config file (not just non-existent) 
-  jIRCii will now use the default value, this should allow anyone to 
-  connect even people who fail to set a nickname, realname, email etc...
-- rearranged some of the ui options in the interface section of jIRCii's
-  options.
-- unbroke font previewing under Mac OS X.
-
-Beta (6) Release 06.03.04
-====
-- added an IRC_ATTEMPT_CONNECT set to go with a message that is displayed 
-  when jIRCii tries to connect to a server...
-- altered the cosmetics for default.irc's FORMATTED_NAMES to allow for a 
-  nick of up to 12 chars in length, anything longer is cut off... this is 
-  only in default.irc - your script can do what it wants.
-- fixed up default.irc's tab nick completion to not insert a space after 
-  the nickname you just nick completed, and to not insert a space if the 
-  nickname is the only word in the editbox...
-- added keyboard shortcuts Alt+1.. Alt+9 for switching windows using the 
-  keyboard...
-- added keyboard shortcuts Ctrl+1.. Ctrl+9 for switching server contexts 
-  using the keyboard...
-- altered the socket timeout stuff to time the irc connection socket out 
-  in 5 minutes rather than 30.  If the irc server or client are not 
-  responding to eachother (at least for the lag stuff) in 5 minutes then 
-  there is definetly a problem.
-- fixed a bug where you couldn't type to a dcc chat while not connected 
-  to an irc server... thanks elf.
-- added a Ctrl+W keyboard shortcut to create a window for the active 
-  query...
-- added keyboard shortcut Ctrl+D to close the active window
-- $me now returns "<Unknown>" when not connected to a server, rather than 
-  "" 
-- added the ability to auto connect to certain servers on client startup, 
-  use the server editor to flag this option.
-- added a &serverInfoCommand($server) function for returning the /server 
-  command for the given server with all the flags for the user options for 
-  that server.
-- hopefully fixed bug with autoperform on connect feature misidentifying 
-  some servers and joining the wrong stuff for the wrong network.
-- added an option for verbose script loading and unloading mainly to 
-  shutup blue-elf 
-- updated to a new servers.ini released by Tjerk Vonck on 16 Apr 04
-- small cosmetic changes to the help menu
-- added &callInSession(<session index>, "/command") to execute a 
-  command in another session...
-
-Beta (5) Release 03.13.04 
-====
-- altered some of the cosmetics of the help menu
-- decided to make auto /window enabled by default.  this goes against my 
-  idea of what the client is all about but it probably should be done. 
-- as a corollary to the auto /window enabled by default, all of the echo 
-  to active irc options have been enabled by default as well.
-- added $window variable to SBAR_LEFT and SBAR_RIGHT sets.
-- updated the servers.ini file to the one released by Tjerk Vonck on 25 Feb 04
-- removed most of the outdated classes in the test package (unnecessary)
-- double clicking a server in the server list now causes jIRCii to connect to
-  that server.  thanks eric for complaining about that one.
-- added several functions for querying information about the current server
-  connection: getServerHost(), getServerPort(), getServerPassword(), 
-  isServerConnected(), isServerSecure(), and getServerNetwork()
-- removed built in variables $myserverport and $myserver (redundant now)
-- updated the Connection -> Connect menu to store all information about a 
-  server connection including port, password, and ssl secure or not.  This 
-  information is used when reconnecting to the server. 
-- made the regular expression for detecting nick!user at host patterns a 
-  little more liberal, mainly expanded the user part of the pattern.  This 
-  should fix a bug where nicknames don't show up at all i.e. "<> hello!" 
-  instead of "<nick> hello!"
-- color codes and such are now stripped out of topic when it is put in window
-  titlebar.
-- added a tooltip to the DCC Dialog's local info option that mentions an IP 
-  address can be manually typed in.
-- added a perform on connect feature, any commands punched into the perform on
-  connect dialog for a specific network will be executed when connecting to that
-  network.  useful.  
-- added functions for accessing the data contained in the servers.ini file.
-- added an option to enable/disable the channel listbox or position it on 
-  the left or right of a channel window.  I think hyst asked for this.
-- the titlebar of channel windows now shows the channel limit if the 
-  channel has one set.
-- fixed a problem with word clicking stuff...  kind of miniscule but I'd 
-  get the occasional exception because of it.
-- added an on unload event...  now scripts can clean themselves up after 
-  being unloaded
-- when someone says your nickname in a channel there nick will be 
-  emphasized a little bit.  (small change in the default script)
-
-Stable (1) Release 02.25.04 
-====
-- fixed problem with subroutines being called in a file other than the one they   
-  were declared in.  this was created by my bugfix for runtime warnings not  
-  properly reflecting the file of the executing code.
-- altered the way dcc ctcps are echo'd, they now just go to the active window or 
-  to the status window pretty much.  (same as normal ctcp's)
-
-Beta (4) Release 02.18.04
-====
-- fixed small mismatch in default color.map and auto generated color.map
-- fixed a race condition in channel user structures against the listbox 
-  painting versus irc events...  never really reared its head until I 
-  joined a channel with over 1000 people in it.  fixed.
-- fixed a problem in -ischannel with empty input ""...  
-- altered the way built in 
-- altered <tab> binding a little, tab will either popup /msg <last nick 
-  to msg you> if the editbox is empty or complete the current word to a 
-  nickname.
-- altered statusbar format to say jIRCii, how could I miss that :)
-- Fixed the way the statusbar is refreshed when a property change occurs.  
-  When the font is changed or the statusbar background properties are 
-  changed everything should be on cue now.
-- altered on input event to use tokenized parameters for passing data.
-- added versionString() function to return the version string (basically 
-  a date stamp of when the client version was released).
-- finally altered and updated /sv and the ctcp VERSION reply.
-- fixed interesting bug involving the use of the return statement with 
-  foreach loops.  Thanks to era for helping me track this one down at 5am.  
-- altered arguments in subroutines.  Arguments passed in subroutines now 
-  begin with $1 instead of $0.  The $0 thing was creating way to much 
-  confusion so I'm curbing it this way.
-- altered sleeputils API to make string scalars check for null 
-  initialization values.  An attempt to pass a null value will result in 
-  the null scalar being returned.  This fixes some problems in the way 
-  jIRC uses sleep as my tokenizer will return null values.
-- stripped out most of the built in debug echoes...
-- added a check to the script loader for user attempts to load an already 
-  loaded script file twice.  this will prevent bad things from happening.
-- fixed bug where a runtime warning in a subroutine from another loaded 
-  script would not properly reflect which script the error occured in.  
-  thanks era for helping me catch this one.  It was actually amazingly 
-  easy to fix.  Yay for good design :)
-- a statusbar refresh is now forced when a nickname change event occurs.
-
-Beta (3) Release 02.13.04
-====
-- removed some debugging stuff that would have made it impossible to bind 
-  the tab key in scripts.
-- renamed getBaseDirectory() to baseDirectory()
-- /load will now complain if it can't find a script file you're attempting 
-  to load.
-- gave custom colors to the opening url message and to ident request 
-  messages in default.irc
-- fixed bug with user devoicing multiple times just toggling +v/-v.  
-  Thanks naz.
-- fixed a bug where refreshMenubar() wouldn't work (like anyone noticed)
-- showOptionDialog("dialog name") now works properly showing the specified 
-  dialog.
-- added $null built in scalar to sleep has the numerical value 0 and the  
-  string value "" ALWAYS!
-- attempting to access an array or hash in sleep as a normal scalar will 
-  result in an automatic conversion of the hash or array into a string 
-  scalar.
-- cleaned up AST tree generated by tree command in sleep console.
-- fixed bug with using a localvariable as the temp variable for foreach 
-  loops.  
-- implemented a parser fix for the $+ operator.  strings like "$+ blah" 
-  will no longer crash the parser...  thanks naz for finding this nasty 
-  bug.   the parser just reports a syntax error.
-- fixed a bug with $+; "\\ $+ $var" was not evaluating $var, now it does.  
-- fixed a bug with events; event listeners from unloaded scripts didn't 
-  expire even  when the script was reloaded.   Definetly a good one to have 
-  fixed.
-- added a little bit of parameter checking to some of the string 
-  predicates.  I should do this for other stuff but to lazy.  :)
-- fixed getNormal(), getOps(), getHalfOps, etc.. to return actual 
-  nicknames and nothing else... thanks mexis
-- fixed searchAddressList() - it was totally broken...
-- stabilized data being brought into sleep a little bit...  looks to see 
-  if data is null, if it is assigns it the actual null scalar rather than 
-  a real null (which results in bad things)
-- added more font size options to the font dialog, 13, 16, 18, and 19.  
-- relocated the code for the file system bridge into the sleep code.
-- send ctcp message is now echo'd to active if user requests ctcp replies
-  in active as well.
-- altered locations dcc echos are sent to - in general
-- Auto /Window leave channel when closing windows now implies the channel 
-  window should be closed on part.  Now Jono should be happy!
-- bind predicate now fires a script warning if scripter tries to bind to a 
-  non existent predicate environment
-- added IDENT_REQUEST set to go with ident event...  altered default.irc 
-  to use the set as well.
-- fixed broken ident daemon...  hopefully
-- enabled the SO_KEEPALIVE option for dcc sockets.  This way they'll die 
-  if they are disconnected but didn't disconnect for some reason.  
-  Otherwise they'll stay connected and idle for a long time :)
-- altered the way notice echoes are handled, by default a notice always 
-  goes to the status window on top of other relevant windows.  Now if a 
-  notice goes to the active window it won't go to the status window unless 
-  its supposed to.  (I know my notice echo stuff is confusing).
-- spruced up /dcc output a little bit
-- addItem("title", "command") can now take commands that begin with / or 
-  not... doesn't matter/ser
-- if a background type is selected to image but the image doesn't exist 
-  then jIRC will just draw a solid colored background.
-- added an INVITE set, also modified event processor to automatically fire 
-  a set for an unknown event based on the event name.  So say an irc DEATH 
-  event was added.  jIRC will parse this and automatically fire it as a set 
-  named "DEATH" to the status window
-- added built in command /clearall for Tijiez
-- scripted tab nick completion - its in default.irc... 
-- added -ischannel predicate to determine if the passed string is a 
-  *channel*.  this does not  say is it a channel that your on or not.  It 
-  just asks does the string begin with # or &. If you want to check if your 
-  on a channel use if ($me ison "#whatever") { }
-- added a groupNicks(@array, [n]) function that takes an array of users 
-  and groups them into comma seperated groups of size n, default is 4..  
-  these groups are returned as an @array
-- bridged my tokenizer class (from jIRC) to sleep...  documented in the 
-  jIRC scripting docs
-- added getDCCAddress($dcc_conn) function for getting the address of a 
-  dcc..  thanks naz for pointing this one out
-- added getCurrentDirectory() to file system bridge
-- renamed the client to jIRCii
-- added a parseSet("SET_NAME", "target", "parms") function for firing 
-  custom sets.
-- added fireEvent("irc data string) and fireEvent("event", %data) for 
-  firing custom events.
-- made /ver and /ping into nick completing commands.
-- added the ability for use of hyperlinks to outside sites inside of jIRC 
-  help files...
-- fixed a sleep parser bug where expressions/scalars where not being 
-  allowed within "$[align]varname"
-- added shift(@array) and removeAt(@array, index) to sleep...
-- scripted dynamic popup that remembers the last 5 servers in the 
-  Connection menu item for Tijiez
-
-
-Beta (2) Release 02.07.04
-====
-- fixed some problems with "on event" binding
-- fixed problem with isin predicate in sleep
-- made client friendlier to text entered accidentally when not connected
-- made socket classes a little bit more resistant to errors that bubble up 
-  but in actuality have little to do with the socket itself.
-- fixed bug with connect button in option window disabling keyboard shortcuts
-- scripted a server_error set.
-- fixed notice sets making them less ghetto.
-- fixed double click event firing even when no text was double clicked on
-- fixed w2k specific problem where like you couldn't select multiple
-  nicknames in the listbox.  Write once, debug every where.
-- tweaked icon dimensions a little bit so now the mdi window icons 
-  are positioned better in Windows, they look fine in the java 
-  metal look and feel, and they are somewhat better in OS X.  Its
-  one big compromise as far as I'm concerned.  I'm not 100% happy with the 
-  result but it will do.
-- /clear|/cls by itself now clears the active window
-- fixed stats bar disappearing after viewing background options
-- fixed bug where dcc send start message appears twice.  
-- spruced up server outputs a little adding a little color.  There are
-  now 3 colors for outputs, the channel/host color, nick/address color,
-  and the neutral color.  Spruced up many numeric replies including /whois.
-- fixed reply 301... it will now always show up when you whois yourself
-  or whois someone else.  Otherwise it will be stifled.  All of this and
-  no effect on the event itself.
-- numeric reply 401 is now echo'd to active window if show whois in 
-  active is turned on... (401 = no such nick/channel) thanks Tijiez.
-- fixed server disconnect message when /server'ing to another server.
-  disconnect message now reflects the server you disconnected from.
-- went to great pains to make the background images dialog a little easier 
-  to use.  If an option doesn't apply to your current settings it is 
-  disabled.  
-- added a /ww command
-- added a /help command (launches help dialog)
-- implemented /run and /exec finally
-- third parameter is now optional in the substr() command.
-- added an option to enable/disable the statusbar in the UI Options dialog.
-- added a check to jIRC for Java 1.4 or greater, if the user is not using 
-  a modern vm then jIRC will exit.
-- added a strip() function to strip control codes out of the parameter text.
-- added a second parameter to openWindow() to make it open non-channel windows
-  inactive.
-- added a (%) systemProperties() function for obtaining information about the
-  system...
-- added an array() function for quickly initializing an array.
-- removed .bmp from acceptable image type filter.  Apparently java likes 
-  to freeze when loading bitmaps.  
-- reworked the script loading stuff in a big way.  Most of the work 
-  consisted of centralizing the script loading in the sleep API's.  I also 
-  made loading a little smarter which will help just a *touch* with script 
-  loading.  This was mostly for the benefit of making sleep easier to use 
-  for other app developers.  I tested it but report any bugs to me please 
-- fixed a bug that was really messing up the irc data structures.  The 
-  mode parser did not expect -k to have a parameter associated with it.  
-  As such the targets got messed up for subsequent modes in the same mode 
-  string.  This could really desynch the client.  Should be okay now.  
-- Changed configuration defaults... jIRC will now use a single document 
-  interface by default on every platform except Windows (were it defaults 
-  to MDI).  You can switch between SDI and MDI in the Options -> UI 
-  Options dialog.
-- Adjusted some of the blank space in the dialogs.  Dropped forced white 
-  space from 10 pixels to 5 pixels.  To help accomodate for look and feels 
-  that love to suck up screen space.  Writing good looking dialogs for a 
-  'skinnable' app is a pain in the ass... trust me.
-- fixed a bug with the colormap (it only allowed colors 0-98), try ^k99 
-  in the old beta... it will completely jack the display..
-- reset the colormap...  all slots have an entry and 1-16 are properly 
-  coordinated with the defacto mIRC standard.
-- added a baseDirectory() function which returns the directory where the 
-  jirc files are located at.
-- added an interpretation for Undernet reply 330 (User is logged in as)
-- added a key binding to the menus.irc: Escape - minimizes active window
-- /dcc accept now takes another optional parameter allowing you to 
-  specify a new location for the file to be dumped to... if your 
-  accepting a receive.
-- added closeDCC($dcc_conn) method to close an active dcc... since my 
-  /dcc close is kind of inadequate... :)
-- expanded /dcc close a little to take: /dcc close [send|chat|receive] <nick>
-- redid the dcc error messages a little so they keep the exception type 
-  out of it.
-- readded the /wall and /wallex commands, along with sets SEND_WALL and 
-  SEND_WALLEX
-- added a bunch of functions for manipulating the multiserver aspect of 
-  the client... kinda kewl..  now you can code scripts to make the tabs 
-  flash and stuph.
-
-Initial Beta (1) 01.31.04
-=====
-This thing has been in development since 99, I've had other strains of
-betas going up to beta 12.  So don't think this is anything new...
+Beta   35 Release 06.11.05
+====
+- upgraded scripting library to Sleep 2.0-release candidate bringing 
+  several bug fixes and a few new features
+- fixed Window menubar menu showing the Status window twice.
+- fixed bug with empty ison replies echo'ing to the status window (I think)
+- removed synchronization from the channel users data structure.  the 
+  hope is to prevent a deadlock situation in the future.
+- setup all timer execution to happen in the swing event thread.  this 
+  has its pros and its cons.  main pro is it will mean a much more stable 
+  jIRCii (in theory) cons, heavy timer activity could cause jIRCii to take 
+  a performance hit.
+- fixed a bug with topic/mode changes by ChanServ not showing any nick as 
+  having changed the topic/mode.
+- made text selection y pt->line number translation more accurate
+- fixed bug where antialias hint was not being used to calculate font width 
+- hacked in a find dialog for searching jIRCii windows, use Ctrl+F, 
+  Alt+F, Meta+F to invoke it.
+
+Beta   34 Release 05.08.05
+====
+- users who are no longer visible to the irc session (i.e. quits, people 
+  not on a common channel with you) are removed from the internal data 
+  list on part and quit events.
+- added a switchbar option to always sort the switchbar buttons
+- &getWindows() now includes the %STATUS% window in the list
+- adjusted how jIRCii calculates text width/height metrics for the custom 
+  text display, should make serge happy.
+- added %GLOBAL, a hash whose contents is shared across scripts and across
+  servers.   Should make the blue-elf happy.
+- fixed extra character being appended to mode $parms string
+- added error detection for attempting to use foreach loop on a non
+  array value.
+- updated &use() to only instantiate dynamically loaded class once
+  other scripts loading this same class will share the instance
+
+** I updated beta 34 at 10am CET to adjust the height font metrics back
+   to the old method.  The new width calculations are staying in **
+
+Beta   33 Release 05.01.05
+====
+- added support for ISUPPORT numeric 005.  This information is available 
+  as a hash scalar via &getSupportHints();
+- PREFIX variable from ISUPPORT is used to map user modes on channels
+- added a hasmode predicate i.e. if ($nick hasmode $channel) { }
+- added a &getModeFor("nick", "#channel") to return the mode display 
+  character that nick has on #channel
+- fixed bug with perform on connect not firing on servers with no MOTD - Elly
+- added a $channels variable which is available inside of the QUIT event/set
+- /me now works in a DCC Chat
+- added an option to View -> Options -> IRC OPtions to disable auto 
+  update of internal address list on channel join
+- optimized the drawing of text selection a little bit.  you might not 
+  notice, but I did spend 3 hours on it.
+- updated &addTimer to interpret parameter as a sleep closure
+- added "reconnect.time" property (set to 5s by default).  this variable 
+  controls how long jIRCii sleeps between attempted reconnects.
+- personal idle timer is now reset even if the on input event is halted
+- fixed clickable URL's not working with "www.somesite.com"
+- array index operator can now be applied to HOES expressions i.e.
+  $var = ["this is a string" split: " "][1]
+
+Beta   32 Release 04.24.05
+=====
+- upgraded Sleep library to Sleep 2.0-b6, new scripting features galore.
+
+Stable 31 Release 03.20.05 (Maintenance Release)
+=====
+- fixed 100% cpu usage when moving the jIRCii window on Windows
+- functions tileWindows(), cascadeWindows(), activateSession(), 
+  setSessionColor(), and setSessionText() now take place on the UI thread.  
+  This is to prevent a deadlock situation.
+- window parameter in getWindowState() and setWindowState() is now optional to
+  allow accessing the state of the main jIRCii window
+
+Stable 30 Release 03.13.05
+======
+- added parseSet("SET_NAME", %hash), the old option of 
+  parseSet("SET_NAME", "target", "parameters") works as well.  This can be used
+  in conjunction with %localData to echo a built-in set from an event that 
+  halts client output.
+- ISON not enough parameters suppressed by broken ircds that can't handle empty
+  ISON lists (used for checking lag).
+- clickable channel names feature has been adjusted to not fire for channel
+  texts ending with a period.  I've been burned by this many times so I 
+  decided to fix it.
+- jIRCii window now updates background images after being moved.
+- added numeric 308 to jIRCii's internal list of whois numerics (not supported
+  in the default script though).
+- PART messages are only supressed if auto /window on join and part on window 
+  close are both enabled.
+
+Beta   29 Release 02.27.05
+======
+- fixed a bug with using fireEvent() from within an event.
+- server connect notices now always go to the status window
+- text no longer auto scrolls if you are scrolled up.
+- CHANNEL_NAMES set now goes to channel window
+- fixed a race condition with echoed text and listbox updating.
+
+Beta   28 Release 02.12.05
+======
+- Fixed race issues in Sleep parser
+- Fixed script stack conflicts caused by the global script cache 
+  mechanism
+- Removed timer synchronization (this is likely a good thing)
+- jIRCii now strips out the unreal mode "!" indicating someone
+  is a channel admin, assumes an @ in its place... *crosses fingers*
+- added a property "notabs.border" for determining the size of the
+  window border when server tabs are turned off... default is 1x
+  this is for scripters who really want to tweak things...
+- bound Alt+H to open the help dialog
+- hard coded the default behavior of double clicking a nickname in
+  a channel listbox, this behavior can be overriden with a script.
+- removed the garbaged collection call tied to /clear, /clearall
+- fixed /run, /exec threading, I was making a method call that
+  resulted in the /run, /exec being executed in the current thread.
+  this has been fixed.  try /run, /exec again, you'll like 'em.
+- on disconnect the first message will be echo'd to every window,
+  every disconnect from a reconnect attempt will thereafter be
+  echo'd to the status window.
+- lag checking is now tied in as part of the notify list requests
+  rather than sending a CTCP LAG to yourself every 60 seconds
+- temporarily removed IRC Tutorial from Help dialog
+- added property "ui.buffersize" which defines the max tolerance
+  of the scrollback buffer.  when this value is hit, the scroll
+  back buffer is trimmed down to half of the max buffer size.
+- added &getButtonColor("window") for retrieving the color of the
+  text on a switchbar button in aarrggbb format.
+- added &setButtonColor("window", color_in_aarrggbb_format) 
+  for setting the color of the text on a switchbar button
+- text echo'd using &echoRaw is now logged (if logging is 
+  enabled)
+- added "switchbar.hilight" option to enable/disable built-in 
+  hilighting a switchbar button on activity.
+- added on session { } event to signify the current irc session
+  becoming activated.
+- rewrote sleep predicate parser to allow for right hand side
+  expressions to evaluate correctly i.e.:
+  if ($x < (3 + 4) / 6) { }
+- jircii now handles empty /names replies better...
+- added a $mouse variable to on click/dclick/sclick events, this 
+  variable contains random info about the mouse event that you
+  are more than welcome to parse and do stuff with.
+
+Beta   27 Release 01.29.05
+======
+- fixed a NPE caused by sleep subroutines with no return value being used 
+  in an expression.
+- added $handle = &listen(port, [timeout], [$info]) function for creating 
+  a simple server socket.  
+- On MacOS X the Info.plist file now reflects the correct jIRCii version
+- Fixed long standing "ghosted" channel listbox bug.
+- Fixed bug with perform on connect / jIRCii Launch service not working 
+  on servers that have no MOTD
+- The jIRCii script loader now cache's parsed scripts 
+- Did more work trying to make jIRCii better about memory.
+- added an option to enable/disable text anti aliasing (thanks [Serge])
+  check out: View->Options->Font Options
+- bound the Home key to move the cursor to the beginning of the input box
+- bound the End key to move the cursor to the end of the input box
+- fixed timestamp getting the wrong am/pm value for noon.
+- clickable URL's are now case-insensitive
+- unbroke &mask() function, thanks to blue-elf for pointing this one out
+- URL's inside of parentheses (http://www.google.com) are now clickable
+
+Beta   26 Release 01.23.05
+======
+- Did some work making jIRCii let go of memory.  This will be an ongoing 
+  process.
+- Added another syntax for events: 
+
+  on event "*source* *target* *parms*" { }
+
+  Essentially the string parameter represents 3 wildcard tokens that 
+  describe what event you want to match.  See the jIRCii Scripting 
+  Reference for more details.  Descriptive events and normal events will
+  still continue to work the same.
+- Made the /clear, /cls, and /clearall commands call the garbage collector
+  to immediately reclaim memory.
+- clickable URL's now work for https:// url's.
+- perform on connect commands are now evaluated for $var's. i.e. you can 
+  now do like:
+  /mode $me +i
+- sleep hashtables now filter out all keys with $null values when 
+  returning a key set with keys().
+- fixed -isletter and -isnumber returning true with empty parameter strings.
+
+Stable 01.03.05
+======
+- fixed Meta+N, Meta+T opening a new irc server keyboard combinations
+- on "open" event now fires immediately after a window opens.
+- made the help window a "touch" wider...
+- updated jircii launch service url handler to allow the server port to be 
+  specified: irc://nick at irc.server.com:port/channel?key
+- fixed sleep bug with for loop initialization terms.  Simple stuff like 
+  for ($x = 0; ...) worked fine, stuff like for ($x = 1 + 2; ...) turned 
+  out to be broken.  Fixed.
+- added a "Scripting Tutorial" to the help window documentation
+
+Stable 12.18.04 - Christmas Maintenance Release :)
+======
+- unbroke &getClipboardText and &setClipboardText, for the longest time I 
+  was blaming this on Sun.  Turns out I installed my bridges wrong.  They 
+  work now :)
+- &getWindowTitle() w/ no args now returns the titlebar text of the 
+  jIRCii window
+- &setWindowTitle("text") w/ only one arg now sets the jIRCii window 
+  titlebar text
+- clicking a url/channel will now give a little visual cue of the hand 
+  cursor that the action has been processed.
+- reworked the built-in help window
+- reformatted a lot of the help window documentation
+- fixed a bug with Ctrl+K and no number chopping a character (patch from Mouton)
+- actions in private messages will now cause a /window to be made if auto
+  /window for messages is enabled.
+- fixed a bug where windows w/ spaces in the name weren't being closed by
+  their switchbar menu
+- added &getLogFile("window") function to retrieve the path to and name 
+  of the file messages for "window" are being logged to.
+- added &logMessage("window", "text") to hook into the message logging 
+  system and log a message (iff logging is enabled)
+- upgraded to Sleep 12.18.04 (fixes bugs and such)
+
+Stable 23 Release 11.25.04
+======
+- Removed the kick/ban/insult/slapz popup menus.  *sigh*
+- added a &duration(seconds) to format time time into days, hours, 
+  minutes, and seconds string.
+- fixed /clearall not reseting status window highlite color
+- fixed a bug with auto connect on startup not being able to find a server 
+  in the servers.ini list.
+- fixed a sleep bug with ||'s and &&'s that broke the <TAB> file 
+  completion for /theme, /load etc.
+- fixed <TAB> completion bug with /msg nickname<SPACE><TAB> putting in 
+  message box /msg nnickname
+- hardcoded and enhanced clickable URL handling.  Nice thing is now that 
+  it is hardcoded the event can be halted by an on click event.   Removed 
+  OPEN_URL set
+- fixed a null pointer exception with the mouse scroll wheel on a 
+  completely cleared window.
+- the string %STATUS% is now used to refer to the status window in certain 
+  window functions.  scripts that refer to the "Status" window will need 
+  to be updated.
+- fixed a bug where text from someone with a nick of Status would go to 
+  the status window.
+- fixed a null pointer exception closing the status window with server 
+  tabs turned off
+- bound Ctrl+D key to close about dialog for those unfortunate souls who 
+  have crappy window managers that don't put window controls on certain 
+  types of dialogs.
+- scripted a close window menu item to the switchbar buttons
+- added a printAll($handle, @array) function to sleep
+
+Beta 22 Release 11.20.04
+====
+- Congratulations jIRCii scripters, you are now sleep beta testers:
+  - fixed bug with return not working inside of while/for loops
+  - added 'break' command to sleep
+  - added a iff(condition, value_true, value_false) operator
+  - added checkError([$scalar]) which will return a error description 
+    string if an operation failed (i.e. openf, connect, exec)
+  - moved date/time functions &parseDate,&formatData,&ticks over to sleep 
+    library
+- updated getScriptResource("script.irc", "directory", "file") to take 
+  multiple parameters
+- /st #channel text will no longer attempt to set the channel topic...
+- clearing a window now resets its switchbar color (unhighlites it 
+  basically)
+
+Beta 21 Release 11.13.04   <Stable Release Candidate>
+====
+- fixed a perform on connect issue with "random" servers.
+- increased the dcc timeout to 2 minutes from 1 minute.
+- fixed a sleep bug not detecting a missing ; in return statements leaving 
+  a ; out of return statements would crash the sleep parser
+- jIRCii script loader now reports to user if the parser 'crashed' when 
+  attempting to load a script. 
+- fixed a null pointer exception occuring with proxy settings enabled (in 
+  some cases)
+- added an indicator to the default script statusbar of what server/ 
+  session id your in, when you have the server tabs disabled
+- fixed an issue with dcc local info getting messed up preventing users 
+  from sending files (triggered by viewing the dcc options)
+
+Beta 20 Release 11.11.04
+==== 
+- added an option to disable the server tabs
+- added an option to disable the jircii menubar
+- added Alt+O to open the options dialog, you'll want this after you 
+  disable the menubar and decide you want it back.
+- moved font options to their own dialog
+- added an option to 'disable' the warning message stating jircii needs 
+  to be restarted when a preference changes
+- added font size 9 to the font options dialog
+- if resolving hostname using server method fails jIRCii will now resort 
+  to using the "normal" method for local hostname lookup
+- made jIRCii bring up an error dialog for any JVM less than version 1.4.2
+- small bug fix with tab completion, fixes /command<SPACE><TAB> from 
+  bringing up //command
+- added function scrollWindow("window", +/-lines) positive value to scroll 
+  down, negative value to scroll up
+- bound the page up and page down keys to scroll up and down
+- added getCursorPosition("window") and setCursorPosition("window", n) 
+  functions
+- updated getFileProper("parent", "child", ...) to take any number of 
+  parameters to string all params together into a properly formatted 
+  pathname for the current OS.
+- renamed "Other Commands" in help dialog to "Keyboard Shortcuts"
+
+Beta 19 Release 11.06.04
+==== 
+- added a .exe front end for easily launching jIRCii on Windows
+- small UI tweak to the sorted list windows, 1px between headers and 
+  information
+- fixed: part command is no longer sent when closing a channel window for
+  a channel you are no longer present on.
+- irc framework is now "tolerant" of ultra lame Unreal IRCd & and ~ modes
+  for users.
+- on raw event is now haltable...  meaning you can catch anything that
+  comes through the irc socket and stop jIRCii from processing it.
+- updated &clear(@array/%hash) to work with hash scalars as well as array 
+  scalars.
+- added &hash('key=value', 'user=password', ...) to generate a %hash
+- added getScriptResource("script.irc", "resource.file") which returns a 
+  properly formatted pathname for the current OS that points to 
+  resource.file in the same directory as script.irc
+
+Stable 18 Release 10.31.04
+======
+- made jIRCii irc parser always match *!*@* as a nick!user at host pattern, 
+  no matter what the contents of nick, user, or host are.  (fixes some 
+  bugs for example an some irc network puts colors in the hostmask of 
+  ircops which freaked out jIRCii)
+- oops, somehow internal function fireEvent() was removed from being 
+  loaded into the script environment - fixed!
+- made the DCC list a synchronized data structure, hopefully preventing 
+  lockups when many scripts are trying to access dcc data.
+- may have fixed a focus problem w/ jIRCii MDI mode.  I noticed some code 
+  that needed to be fixed and fixed it.  
+- added a check to keep jIRCii windows from stealing the keyboard focus 
+  when a dialog is active.
+- added formatNumber(number, base) and parseNumber("number", base) to 
+  sleep for formatting a number to a certain base and parsing a number of 
+  a certain base value.
+- updated keybinding constant Number_. to be Period 
+- /dns nickname now works if nickname is in the Internal Data List
+- added a hook to the tab key binding, if $_IS_FILE_COMPLETE is set to 1 
+  then hitting tab will trigger filename completion over all else...
+
+Beta 17 Release 10.24.04
+=======
+- jIRCii now loads sleep scripts with no charset conversion.
+   [ Scripters - this change is a big deal for you.  You can now use 
+     upper-ASCII characters in your script and the way they render will be 
+     dependent on which font you use, not how Java chooses to mangle the 
+     character encoding of your file ]
+- selected charset option now works for text sent as well as text 
+  received.
+- Added what every irc client needs: A SOUND API!@#$$%^  
+  The Sound API can be summed up with the following code:
+
+  $sound = loadSound("filename");
+  soundPlay($sound);
+  soundLoop($sound);
+  soundStop($sound);
+
+  Sound files can be a MIDI file, a .WAV file, or a .AU.
+- Made Perform On Connect feature case insensitive when matching your
+  network preferences to the network you are currently on.
+- Fixed cosmetic blemish in the UI Options dialog causing charset options 
+  to not paint correctly.
+- added function &buildCP437String("string") to do a CP437 charset 
+  conversion.  will only work on characters that haven't been converted
+  yet (i.e. any text in a script file).  CP437 is the charset that defines
+  all those ansi characters everyone is so fond of.
+
+Beta 16 Release 10.16.04
+=======
+- fixed jIRCii launch service Guest_nn nickname not being random
+- tab character is now rendered as 3 spaces.
+- added printEOF($handle) function to signal end of file to an i/o output 
+  stream.
+- fixed bug with jIRCii Launch Service not connecting to servers that 
+  aren't specified in the servers.ini file
+- made default username information more friendly for lame servers 
+  (jIRCii Quick Launch)
+- logging mechanism now works for window names with weird characters 
+  i.e. |'s and such
+- fixed a null pointer exception with /st #channel when your not on #channel
+- added a "charset encoding" option to Options->GUI Setup, this allows 
+  you to set which charset should be used to interpret data coming from 
+  the irc and dcc chat connections.
+- Fixed key bindings on non-english locale machines, the fix was to 
+  hardcode descriptions for bindable keys in jIRCii's source code.  
+- small cosmetic change to options dialog (fix problem with DCC Options 
+  on Java 1.5.0)
+
+Beta 15 Release 10.03.04
+====
+- Updated to Sleep 09.26.04 library
+  -- adds use of tuples for assignment i.e. ($x, $y, $z) = @array;
+  -- removed whitespace requirement for the string concat operator .
+  -- added a strrep("string", "old", "new" for straight up string replacement.
+- Updated menus.irc to not use . as part of any variable names.  Sleep 
+  doesn't allow this anymore.  
+- added a check to prevent Sun's !!!!BROKEN!!!! GTK Look and Feel from 
+  being resolved as the native look and feel.
+- Added support for SOCKS v4/5 proxy servers
+- Updated to a new servers.ini from Tjerk Vonck (cLAN: mIRC)
+- jIRCii now executes key binding code in the "event" thread, hopefully 
+  this will prevent code bound to keys from causing any deadlock problems.
+- added a check to prevent "perform on connect" commands from being 
+  executed again after manually typing /motd
+- added support for command line argument in irc://server/channel?key 
+  format to cause jIRCii to connect to server and join #channel with 
+  specified key.  This is a necessary step to make it possible for web 
+  browsers to use jIRCii to handle irc:// links
+- updated alias help to include /away, /back, and /nick
+- updated /query to actually list all channels your on when typed by 
+  itself (the help docs listed this behavior for a long time, it just 
+  never had it).
+- made jIRCii better about letting go of some memory when closing a 
+  window 
+- window numbers in "Window" menu now match numbers used for switching 
+  windows with Alt+n keyboard shortcut.
+- Added SET_NOTIFY and SET_IGNORE for echoing something when the ignore 
+  or notify lists are modified via the /notify or /ignore commands...
+- text input events are now fired even if user is accidentally holding 
+  down shift/ctrl keys while pressing enter.  anything to take care of 
+  Zenon.
+- Added Ctrl+Left/Right to quickly navigate previous/next server 
+  sessions, along with Alt+Left/Right to quickly navigate previous/next 
+  channel/query/dcc windows...
+- Added function getCurrentWindow() that returns the safest window to 
+  echo text to, either the current active window or the status window.  
+- Altered getActiveWindow() to return the real current window wether its 
+  a special (i.e. dcc list, /list -gui) or not.  This fixes a bug with 
+  Ctrl+D on a special window closing the current server connection.
+- added &renameWindow("old", "new") for renaming a window, only works on 
+  query windows right now.
+- added a feature, when a user you have an open /window with changes 
+  their nick, jIRCii will rename the window for you.
+- added &echoColumns("window", "col1\tcol2\tcol3...", .9) for echoing 
+  formatted text that stays in columns similar to how the /names list is 
+  wordwrapped
+- added /creply command for sending a CTCP reply
+- added /eval <expr> command for quickly evaluating and echoing the 
+  result of a sleep expression
+
+Stable 14 Release 08.07.04
+======
+- fixed a nasty bug in the logging causing log files to be open in overwrite
+  mode rather than append.
+- logging information is now saved to a subfolder based on actual irc network
+  rather than the irc server hostname.
+- quick cosmetic change to the dcc options dialog
+- /newserver now takes the same parameters as /server
+- added an option under the windows dialog to adjust the width of the channel
+  names listbox.
+- enhanced clickable channels a little to allow clicking on @#channel 
+  +#channel etc.
+- gotta love the decisive nature of my coding... on repl_nnn events have 
+  returned but on nnn will continue to work as well.  I won't change this, 
+  promise :)
+- fixed a bug with failed nickname change (due to changing to fast) 
+  messing up jIRCii's internal data structures and throwing an exception.
+  nickname change set will not be fired in this case...
+- fixed bug in default.irc set SEND_DCC { }, off by one with the 
+  parameters
+
+Beta 13 Release 07.31.04  (Stable release candidate)
+====
+- fixed a problem with the sleep return stack...  it manifested itself in 
+  the form of a loose nickname being echo'd to the status window here and 
+  there.
+- made -lnf argument take precedence over setting to use native look and 
+  feel.
+- if a channel has no bans set /banstat will echo a message relaying that 
+  info.  Added a CHANNEL_BANLIST_END set to go with this.
+- made the directory selector widget recognize wether or not its disabled.
+- clicking on a channel name will cause jIRCii to join that channel.
+- made 'o' the default focus accelerator for the Commands menu, so it no 
+  longer conflicts with the Connection menu focus accelerator of 'C'.
+- /dcc stats dialog and channel /list -gui dialog sizes and positions are 
+  now remember seperately of other sorted windows.
+- found a problem with IRC events, apparently on repl_nnn doesn't work, 
+  however on nnn where nnn is a numeric does work.  So rather than fix the 
+  code I updated the documentation.  set repl_nnn { } is still in use 
+  though.
+- added a 4th parameter to addTimer(&func, n seconds, r repeats, paramter 
+  for &func) basically parameter for &func will get passed to &func 
+  whenever the timer is executed.  Useful for creating dynamic timers.  
+  Thanks elf.
+- fixed bug with dcc sessions dialog close dcc menu option closing the 
+  wrong session.  Thanks GulaBapa for pointing this one out.  See I do 
+  occasionally listen to my users.
+- made tab based file completion case insensitive to shut naz up.
+
+Beta 12 Release 07.25.04
+====
+- added an expr('3 + 4') function to sleep for evaluating an expression
+- added \r (return), \n (newline), and \t (tab separator) escape 
+  constants to sleep
+- added scripting function setClipboardText("text")
+- REPL_321 is no longer mistaken as a /whois reply numeric.
+- added normal array @_ to subroutines, which contains all of the 
+  arguments passed to the subroutine.
+- fixed divide by zero bug with trying to cascade or tile windows when 
+  there where no active windows
+- enabled SO_KEEPALIVE on dcc chat sockets, this way a dcc chat socket 
+  won't sit there forever if the socket actually died awhile back.
+- setup a timeout of 60 seconds for dcc send and receive sockets.
+- added /banstat [#channel] command for obtaining a list of bans, 
+  consequently I added a CHANNEL_BANLIST set to go with this...
+- added /unban nick|banmask command to unset all bans related to nick or 
+  to unset the specified banmask.
+- fixed problem with activateWindow() not working on windows opened as 
+  minimized to start with.
+- added a check to keep jIRCii from announcing it has resolved your local 
+  host info multiple times.
+- \t is now the column separator for sorted windows
+- added matched() function  to sleep, works like matches("string", 
+  'pattern') except it uses the values of the last ismatch comparison.
+- added to sleep getFileProper("/path/to", "file") which returns 
+  /path/to/file in the appropriate form for the current operating system.
+- added tab based file completion to /dcc send, /send, /load, and /theme
+- added a function fileCompleteAll("partial file") to access file 
+  completion routines. I originally scripted this but decided to make it 
+  available for anyone
+- reworked directory selection widget in the options dialog, this is to 
+  prevent drawing problems due to weird Java layout behavior.  Some 
+  functionality was lost but I don't think I really had a choice.
+
+Beta 11 Release 07.17.04
+====
+- made a for real no kidding hack to keep the timer thread from dieing. 
+  fix it? haha yeah right...
+- fixed potential divide by zero error when calculating dcc transfer 
+  rates.
+- removed a typo in the IRC_RECONNECT set (had to log some sort of 
+  change).
+- rearranged the dcc statistics a little bit and added a field for the 
+  total size of the data sent or received.
+- added a getScriptPath("filename.irc") function for obtaining where a 
+  loaded script exists.
+- added an option to fill spaces in a filename when doing a dcc send.
+- made the SEND_DCC set friendly to filenames with spaces ($1 = port, 
+  $2 = size, $3- = file)
+- unbroke sleep function &clear(@array).
+- added a &copy(@array) function to sleep which returns a copy of the 
+  given array and copies of all of its values.
+- fixed bugs with the tab completion... 
+- redefined some key bindings:
+  Ctrl+C is no longer bound by default, this is to prevent interfering 
+  with the function of copying text on Windows.
+
+  The Escape key has been bound to clear the editbox.
+- made 'server method' technique for resolving dcc local info the new 
+  default
+- Added a 'theme' manager.  An easy way to import/export colormap and 
+  background color settings for jIRCii.  Along with this comes a /theme 
+  "filename" command to load a theme.  Implementation wise it is just a 
+  jIRCii generated sleep script.  Loading a theme is basically the same as 
+  loading the script and executing it one time only.  Special thanks to 
+  Dekkard for the suggestion.
+- added a generateThemeScript("filename") function to generate a theme 
+  file from the current settings.
+- tile and cascade functions for jIRCii now unset maximized property
+- added "x" operator to sleep, which is string repetition i.e.
+  $str = "abc" x 4; # $str is now "abcabcabcabc"
+- updated some of the cosmetics of the help menu.
+- gave dcc open messages and dcc close messages their own colors, so they 
+  are no longer the same as joins and quits.  (just for you tijiez)
+- made sorted windows tie into most normal window events and window 
+  manipulation functions, I expect bugs, lets hope not though.  
+- added a -isspecial "window name" predicate for determining if a window 
+  is a special window (i.e. list dialog, dcc stats, sorted window etc) or 
+  not.
+- scripted sorted windows are no longer activated by default when opened.  
+  To activate them you must explicity call activateWindow("Window title")
+- added "on sclick" event for when a row is a double clicked in a 
+  scripted sorted window. right now $0 = row number, $1- = window name
+- fixed a bug with $window in "on close" always being set to "Status", 
+  had to do with the order of close events.
+- added a /dns <hostname> command, to go along with it I've also added a 
+  RESOLVED_HOST set
+
+Beta (10) Rerelease 07.11.04
+====
+- fixed a problem causing QUIT messages to now show up.  I don't know 
+  where this came from but it is the reason for the rerelease.
+- undid b10 change of making IRC_RECONNECT message display once.
+
+Beta (10) Release 07.10.04
+====
+- window position information is now saved when you close an internal 
+  window (used to only be saved when a window was activated... but 
+  nooooooo that wasn't good enough).
+- added a check to code to prevent /window by itself from opening a 
+  unclosable blank window.
+- made the size of default windows larger...
+- fixed join sync not showing up for channels with different case than 
+  what the user joined with.
+- fixed a divide by zero problem with getTransferRate()
+- added a check to prevent the dcc sessions window from being opened 
+  multiple times per session.
+- added some synchronization to the stop timers code...
+- getWindows() now returns windows in the order they were opened (i.e. 
+  the switchbar order) this fixes the Alt+n window ordering problem and 
+  makes the Window menu more accurate as well
+- altering the position of the listbox is now done in the swing event 
+  thread, should fix weird problems where a copy of the listbox becomes 
+  ghosted in some position
+- Courier New, size 13 is now the default font for Windows and MacOS X, 
+  all other platforms will by default use the "monospaced" font.  
+- fixed perform dialog bug, sometimes settings for a network would carry 
+  over to the "all networks" setting.
+- made the /reload filename.irc command apply to all irc sessions
+- verbose script loading now displays script loaded message before 
+  executing script (but after loading)
+- added nickCompleteAll("pnick", "#channel") that returns an array of all 
+  nicknames on #channel matching pnick.  the array is sorted from most 
+  relevant to least relevant...
+- enhanced tab nick completion to cycle through nicknames...
+- added tab completion for / commands i.e. /un<TAB> will put /unload in 
+  the editbox...  this is experimental, if you don't like it let me know 
+  and I'll take it out
+- added function getAliasList() that returns an array of all built in 
+  aliases and scripted aliases built in aliases are lowercase, and 
+  scripted aliases are uppercase.
+- attempting to reconnect to server message is now echo'd only once after 
+  disconnection this should prevent screen from flooding with attempting 
+  to reconnect messages
+
+Beta (9) Release 06.30.04
+====
+- added a quick way to edit the channel topic:
+  type: /topic and then hit <TAB>, the current topic will come up in the 
+   editbox found the idea in the irc client irssi.  way to clever.
+- "/mode #channel" will now echo the current mode for the given channel, 
+  the set CHANNEL_MODE_IS has been added as well
+- expanded /mode command a little bit, works as normal otherwise:
+  /mode - echos the mode for the active channel
+- added /sm command -> a shortcut for the /mode command
+- reply 331 (no topic set) now fires set CHANNEL_TOPIC_IS
+- added a SEND_DCC set, similiar to SEND_CTCP set
+- verbose script loading is now enabled by default
+- a error set is now fired (i.e. CHAT_CLOSED, or SEND_FAILED) if jIRCii cannot
+  bind a port to listen for the dcc request...
+- /notify nickname now adds user to notify list (jIRCii has always had
+  /notify <add|remove> <nickname>... however people assumed /notify nick to 
+  work).
+- the ident daemon now dies disables itself more gracefully when you turn it 
+  off in the options after it didn't startup in the first place (bug fix).
+- fixed a bug in internal method for resolving the weekday, sunday was comeing
+  up as an unknown day.
+- hitting enter on an empty textfield now fires an "on input" event with $1- 
+  set to ""
+- fixed a bug where input halting wasn't being reset after each firing of an 
+  input event.
+- fixed a case issue with determining wether or not a target is the active 
+  query, channels that were active were having text displayed like they were
+  inactive due to case differences.
+- fixed problem with fixed width switchbar buttons on Windows not 
+  dissappearing upon closing a window..
+- added a getTimeRemaning($dcc_conn) function for getting the estimated time 
+  left for a dcc send/receive connection...  I didn't want to script it so I 
+  assume you wouldn't want to either...
+- added a formatTime2(n) function for formatting n seconds into a hh:mm:ss form
+- added estimated time remaining to "/dcc stats" information
+- added "version.addons" internal property, if this property has a value it 
+  will be used when jIRCii reports its version information instead of a 
+  tagline... a convienent way for scripts to announce that they are loaded
+- tweaked the look of the /dcc send "dialog"
+- added a check to prevent jIRCii from resuming a file that is already 
+  completely downloaded.
+- fixed a data structure bug, when a user parted a channel the channel wasn't
+  removed from the user's internal list of current channels...  naughty naughty.
+- /dcc send dialog and scripted file dialogs now remember the last directory 
+  to be worked on.
+- added a check to dcc receive, full file paths are now stripped off of 
+  incoming dcc requests
+- sorted list window's now have properly sized switchbar buttons under the 
+  fixed-width setting
+- added scripting interface for creating a sorted window and refreshing the 
+  data in a sorted window.  See scriptjirc.pdf under the Dialog functions.
+
+Beta (8) Release 06.24.04
+====
+- fixed a bug with time+date stamp code miscalculating the current weekday
+- added a logging feature, now you can log everything... great for turning in
+  your friends who brag about the latest DoS attack or creating the latest
+  virii.
+- worked around a painting problem with the UI Options dialog under OS X
+- refactored the /list -gui code so I now have a more generalized window that
+  can display data in the same way, made some small cosmetic fixes as well
+- DCC_REQUEST set is now actually being utilized.  It was there just not being
+  used for some reason.
+- added a /dcc stats, it is the same as typing /dcc by itself except it comes
+  up in its own window and is updated automatically...
+
+  To go with this I added several sets for customizing this dialogs output
+  DCC_LIST_TYPE, DCC_LIST_NICK, and DCC_LIST_INFORMATION, I've also added
+  a "dcc" popup menu hook which has a local variable $this for referencing
+  the dcc connection.  See the updated scripting docs for more info..
+- popup menus will now invoke /list -gui for channel listings.
+- switched default font to Java's "Monospaced" which is available on 
+  every java platform.
+- added a "fixed width buttons" option for the switchbar, under 
+  Options->Switchbar the hack to make the fixed width buttons shrink when 
+  the switchbar is filled is beyond ugly.
+- adjusted the default size of the options window so it will layout 
+  properly on other platforms *cough*linux*cough*
+- Miscellaneous UI tweaks: font selector, miscellaneous options, script 
+  manager, input field (opaqueness)
+- Reorganized the Options->Interface Options dialogs.
+- text layout tweaks: main display, statusbar, and input field all line 
+  up with eachother when drawing text...  there is a 2px buffer between 
+  the edge of each component and the first character.
+- fixed a bug with editbox font not updating immediately when the font 
+  preference is changed
+- keys bound with the "bind" keyword are no longer processed by java 
+  itself.  once your script gets ahold of the key then thats it.  
+  consequently this fixes a bug with my Alt+n and Ctrl+n shortcuts putting 
+  numbers in the editboxes when they where being used.
+- internal help filenames no longer have spaces in them, fixing a problem 
+  with jIRCii's help on Java 1.5 under Linux
+- made some changes to the way font metrics are calculated for laying out
+  text.  most fonts will now look more centered on the statusbar.
+- fixed a null pointer exception when auto joining auto /window'd
+  channels...
+- expanded irc parser host pattern to accept the = sign
+
+Beta (7) Release 06.11.04
+====
+- added a kickass little toolbar, there is also an option to disable it 
+  under Options->UI Options at first I didn't like it but now its kind of 
+  grown on me.
+- bug fix: multiple lines of text, when pasted will all be sent to the 
+  server...
+- added a /list -gui option which pops up a channel /list dialog with 
+  sorting and searching abilities
+- added a new popup menu hook "list" for the channel /list window. $0 = 
+  channel $1 = users $2- = topic
+- added a new popup menu hook "switchbar" for the jIRCii window 
+  switchbar, $0 = the window name
+- fixed a bug with 'on input' event and halt.  once halt got used with an 
+  on input event jIRCii would not process any more input (the halt got 
+  stuck)... this one pissed me off when I was trying to write an xdcc script.
+- clicking edit in the server editor will now select and scroll to the 
+  same server in the server editor dialog.
+- removed the scriptjirc and sleeplang html files from the jIRCii 
+  distribution, I like the pdf better.  The html versions of these files 
+  will continue to be available on the jIRCii website.
+- fixed a null pointer exception when auto connecting and auto joining 
+  channels resulted in stuff happening before all the datastructures were 
+  propagated...
+- made regular expressions for nickname parsing more liberal, so jIRCii 
+  shouldn't have problems parsing nicknames on servers using different 
+  charsets (i.e. Korean nicknames)
+- added an error message for attempting to reload a script that isn't 
+  currently loaded
+- fixed scripting documentation, I documented the wrong parameters for 
+  sendReply() and sendRequest(); they both require three parameters... not 
+  two.
+- made multiserver session information querying commands take an index as 
+  a parameter, so you can query information about other sessions from a 
+  script in one multiserver session.. this affects getSessionColor()
+  and getSessionText()
+- added a %localData hash variable to help out scripters.  Local 
+  variables are basically function parameters, stuff made local with the 
+  local() function, event variables etc.  %localData is a read-only 
+  hashmap with all of the keys and values for all of the local data
+
+  To see all of the variables passed during a ctcp request event:
+
+  on request
+  {
+    foreach $var (keys(%localData))
+    {
+       echo("$var = " . %localData[$var]);
+    }
+  }
+
+- After having my arm twisted, I've added an on exit event.
+- if a variable is empty in the config file (not just non-existent) 
+  jIRCii will now use the default value, this should allow anyone to 
+  connect even people who fail to set a nickname, realname, email etc...
+- rearranged some of the ui options in the interface section of jIRCii's
+  options.
+- unbroke font previewing under Mac OS X.
+
+Beta (6) Release 06.03.04
+====
+- added an IRC_ATTEMPT_CONNECT set to go with a message that is displayed 
+  when jIRCii tries to connect to a server...
+- altered the cosmetics for default.irc's FORMATTED_NAMES to allow for a 
+  nick of up to 12 chars in length, anything longer is cut off... this is 
+  only in default.irc - your script can do what it wants.
+- fixed up default.irc's tab nick completion to not insert a space after 
+  the nickname you just nick completed, and to not insert a space if the 
+  nickname is the only word in the editbox...
+- added keyboard shortcuts Alt+1.. Alt+9 for switching windows using the 
+  keyboard...
+- added keyboard shortcuts Ctrl+1.. Ctrl+9 for switching server contexts 
+  using the keyboard...
+- altered the socket timeout stuff to time the irc connection socket out 
+  in 5 minutes rather than 30.  If the irc server or client are not 
+  responding to eachother (at least for the lag stuff) in 5 minutes then 
+  there is definetly a problem.
+- fixed a bug where you couldn't type to a dcc chat while not connected 
+  to an irc server... thanks elf.
+- added a Ctrl+W keyboard shortcut to create a window for the active 
+  query...
+- added keyboard shortcut Ctrl+D to close the active window
+- $me now returns "<Unknown>" when not connected to a server, rather than 
+  "" 
+- added the ability to auto connect to certain servers on client startup, 
+  use the server editor to flag this option.
+- added a &serverInfoCommand($server) function for returning the /server 
+  command for the given server with all the flags for the user options for 
+  that server.
+- hopefully fixed bug with autoperform on connect feature misidentifying 
+  some servers and joining the wrong stuff for the wrong network.
+- added an option for verbose script loading and unloading mainly to 
+  shutup blue-elf 
+- updated to a new servers.ini released by Tjerk Vonck on 16 Apr 04
+- small cosmetic changes to the help menu
+- added &callInSession(<session index>, "/command") to execute a 
+  command in another session...
+
+Beta (5) Release 03.13.04 
+====
+- altered some of the cosmetics of the help menu
+- decided to make auto /window enabled by default.  this goes against my 
+  idea of what the client is all about but it probably should be done. 
+- as a corollary to the auto /window enabled by default, all of the echo 
+  to active irc options have been enabled by default as well.
+- added $window variable to SBAR_LEFT and SBAR_RIGHT sets.
+- updated the servers.ini file to the one released by Tjerk Vonck on 25 Feb 04
+- removed most of the outdated classes in the test package (unnecessary)
+- double clicking a server in the server list now causes jIRCii to connect to
+  that server.  thanks eric for complaining about that one.
+- added several functions for querying information about the current server
+  connection: getServerHost(), getServerPort(), getServerPassword(), 
+  isServerConnected(), isServerSecure(), and getServerNetwork()
+- removed built in variables $myserverport and $myserver (redundant now)
+- updated the Connection -> Connect menu to store all information about a 
+  server connection including port, password, and ssl secure or not.  This 
+  information is used when reconnecting to the server. 
+- made the regular expression for detecting nick!user at host patterns a 
+  little more liberal, mainly expanded the user part of the pattern.  This 
+  should fix a bug where nicknames don't show up at all i.e. "<> hello!" 
+  instead of "<nick> hello!"
+- color codes and such are now stripped out of topic when it is put in window
+  titlebar.
+- added a tooltip to the DCC Dialog's local info option that mentions an IP 
+  address can be manually typed in.
+- added a perform on connect feature, any commands punched into the perform on
+  connect dialog for a specific network will be executed when connecting to that
+  network.  useful.  
+- added functions for accessing the data contained in the servers.ini file.
+- added an option to enable/disable the channel listbox or position it on 
+  the left or right of a channel window.  I think hyst asked for this.
+- the titlebar of channel windows now shows the channel limit if the 
+  channel has one set.
+- fixed a problem with word clicking stuff...  kind of miniscule but I'd 
+  get the occasional exception because of it.
+- added an on unload event...  now scripts can clean themselves up after 
+  being unloaded
+- when someone says your nickname in a channel there nick will be 
+  emphasized a little bit.  (small change in the default script)
+
+Stable (1) Release 02.25.04 
+====
+- fixed problem with subroutines being called in a file other than the one they   
+  were declared in.  this was created by my bugfix for runtime warnings not  
+  properly reflecting the file of the executing code.
+- altered the way dcc ctcps are echo'd, they now just go to the active window or 
+  to the status window pretty much.  (same as normal ctcp's)
+
+Beta (4) Release 02.18.04
+====
+- fixed small mismatch in default color.map and auto generated color.map
+- fixed a race condition in channel user structures against the listbox 
+  painting versus irc events...  never really reared its head until I 
+  joined a channel with over 1000 people in it.  fixed.
+- fixed a problem in -ischannel with empty input ""...  
+- altered the way built in 
+- altered <tab> binding a little, tab will either popup /msg <last nick 
+  to msg you> if the editbox is empty or complete the current word to a 
+  nickname.
+- altered statusbar format to say jIRCii, how could I miss that :)
+- Fixed the way the statusbar is refreshed when a property change occurs.  
+  When the font is changed or the statusbar background properties are 
+  changed everything should be on cue now.
+- altered on input event to use tokenized parameters for passing data.
+- added versionString() function to return the version string (basically 
+  a date stamp of when the client version was released).
+- finally altered and updated /sv and the ctcp VERSION reply.
+- fixed interesting bug involving the use of the return statement with 
+  foreach loops.  Thanks to era for helping me track this one down at 5am.  
+- altered arguments in subroutines.  Arguments passed in subroutines now 
+  begin with $1 instead of $0.  The $0 thing was creating way to much 
+  confusion so I'm curbing it this way.
+- altered sleeputils API to make string scalars check for null 
+  initialization values.  An attempt to pass a null value will result in 
+  the null scalar being returned.  This fixes some problems in the way 
+  jIRC uses sleep as my tokenizer will return null values.
+- stripped out most of the built in debug echoes...
+- added a check to the script loader for user attempts to load an already 
+  loaded script file twice.  this will prevent bad things from happening.
+- fixed bug where a runtime warning in a subroutine from another loaded 
+  script would not properly reflect which script the error occured in.  
+  thanks era for helping me catch this one.  It was actually amazingly 
+  easy to fix.  Yay for good design :)
+- a statusbar refresh is now forced when a nickname change event occurs.
+
+Beta (3) Release 02.13.04
+====
+- removed some debugging stuff that would have made it impossible to bind 
+  the tab key in scripts.
+- renamed getBaseDirectory() to baseDirectory()
+- /load will now complain if it can't find a script file you're attempting 
+  to load.
+- gave custom colors to the opening url message and to ident request 
+  messages in default.irc
+- fixed bug with user devoicing multiple times just toggling +v/-v.  
+  Thanks naz.
+- fixed a bug where refreshMenubar() wouldn't work (like anyone noticed)
+- showOptionDialog("dialog name") now works properly showing the specified 
+  dialog.
+- added $null built in scalar to sleep has the numerical value 0 and the  
+  string value "" ALWAYS!
+- attempting to access an array or hash in sleep as a normal scalar will 
+  result in an automatic conversion of the hash or array into a string 
+  scalar.
+- cleaned up AST tree generated by tree command in sleep console.
+- fixed bug with using a localvariable as the temp variable for foreach 
+  loops.  
+- implemented a parser fix for the $+ operator.  strings like "$+ blah" 
+  will no longer crash the parser...  thanks naz for finding this nasty 
+  bug.   the parser just reports a syntax error.
+- fixed a bug with $+; "\\ $+ $var" was not evaluating $var, now it does.  
+- fixed a bug with events; event listeners from unloaded scripts didn't 
+  expire even  when the script was reloaded.   Definetly a good one to have 
+  fixed.
+- added a little bit of parameter checking to some of the string 
+  predicates.  I should do this for other stuff but to lazy.  :)
+- fixed getNormal(), getOps(), getHalfOps, etc.. to return actual 
+  nicknames and nothing else... thanks mexis
+- fixed searchAddressList() - it was totally broken...
+- stabilized data being brought into sleep a little bit...  looks to see 
+  if data is null, if it is assigns it the actual null scalar rather than 
+  a real null (which results in bad things)
+- added more font size options to the font dialog, 13, 16, 18, and 19.  
+- relocated the code for the file system bridge into the sleep code.
+- send ctcp message is now echo'd to active if user requests ctcp replies
+  in active as well.
+- altered locations dcc echos are sent to - in general
+- Auto /Window leave channel when closing windows now implies the channel 
+  window should be closed on part.  Now Jono should be happy!
+- bind predicate now fires a script warning if scripter tries to bind to a 
+  non existent predicate environment
+- added IDENT_REQUEST set to go with ident event...  altered default.irc 
+  to use the set as well.
+- fixed broken ident daemon...  hopefully
+- enabled the SO_KEEPALIVE option for dcc sockets.  This way they'll die 
+  if they are disconnected but didn't disconnect for some reason.  
+  Otherwise they'll stay connected and idle for a long time :)
+- altered the way notice echoes are handled, by default a notice always 
+  goes to the status window on top of other relevant windows.  Now if a 
+  notice goes to the active window it won't go to the status window unless 
+  its supposed to.  (I know my notice echo stuff is confusing).
+- spruced up /dcc output a little bit
+- addItem("title", "command") can now take commands that begin with / or 
+  not... doesn't matter/ser
+- if a background type is selected to image but the image doesn't exist 
+  then jIRC will just draw a solid colored background.
+- added an INVITE set, also modified event processor to automatically fire 
+  a set for an unknown event based on the event name.  So say an irc DEATH 
+  event was added.  jIRC will parse this and automatically fire it as a set 
+  named "DEATH" to the status window
+- added built in command /clearall for Tijiez
+- scripted tab nick completion - its in default.irc... 
+- added -ischannel predicate to determine if the passed string is a 
+  *channel*.  this does not  say is it a channel that your on or not.  It 
+  just asks does the string begin with # or &. If you want to check if your 
+  on a channel use if ($me ison "#whatever") { }
+- added a groupNicks(@array, [n]) function that takes an array of users 
+  and groups them into comma seperated groups of size n, default is 4..  
+  these groups are returned as an @array
+- bridged my tokenizer class (from jIRC) to sleep...  documented in the 
+  jIRC scripting docs
+- added getDCCAddress($dcc_conn) function for getting the address of a 
+  dcc..  thanks naz for pointing this one out
+- added getCurrentDirectory() to file system bridge
+- renamed the client to jIRCii
+- added a parseSet("SET_NAME", "target", "parms") function for firing 
+  custom sets.
+- added fireEvent("irc data string) and fireEvent("event", %data) for 
+  firing custom events.
+- made /ver and /ping into nick completing commands.
+- added the ability for use of hyperlinks to outside sites inside of jIRC 
+  help files...
+- fixed a sleep parser bug where expressions/scalars where not being 
+  allowed within "$[align]varname"
+- added shift(@array) and removeAt(@array, index) to sleep...
+- scripted dynamic popup that remembers the last 5 servers in the 
+  Connection menu item for Tijiez
+
+
+Beta (2) Release 02.07.04
+====
+- fixed some problems with "on event" binding
+- fixed problem with isin predicate in sleep
+- made client friendlier to text entered accidentally when not connected
+- made socket classes a little bit more resistant to errors that bubble up 
+  but in actuality have little to do with the socket itself.
+- fixed bug with connect button in option window disabling keyboard shortcuts
+- scripted a server_error set.
+- fixed notice sets making them less ghetto.
+- fixed double click event firing even when no text was double clicked on
+- fixed w2k specific problem where like you couldn't select multiple
+  nicknames in the listbox.  Write once, debug every where.
+- tweaked icon dimensions a little bit so now the mdi window icons 
+  are positioned better in Windows, they look fine in the java 
+  metal look and feel, and they are somewhat better in OS X.  Its
+  one big compromise as far as I'm concerned.  I'm not 100% happy with the 
+  result but it will do.
+- /clear|/cls by itself now clears the active window
+- fixed stats bar disappearing after viewing background options
+- fixed bug where dcc send start message appears twice.  
+- spruced up server outputs a little adding a little color.  There are
+  now 3 colors for outputs, the channel/host color, nick/address color,
+  and the neutral color.  Spruced up many numeric replies including /whois.
+- fixed reply 301... it will now always show up when you whois yourself
+  or whois someone else.  Otherwise it will be stifled.  All of this and
+  no effect on the event itself.
+- numeric reply 401 is now echo'd to active window if show whois in 
+  active is turned on... (401 = no such nick/channel) thanks Tijiez.
+- fixed server disconnect message when /server'ing to another server.
+  disconnect message now reflects the server you disconnected from.
+- went to great pains to make the background images dialog a little easier 
+  to use.  If an option doesn't apply to your current settings it is 
+  disabled.  
+- added a /ww command
+- added a /help command (launches help dialog)
+- implemented /run and /exec finally
+- third parameter is now optional in the substr() command.
+- added an option to enable/disable the statusbar in the UI Options dialog.
+- added a check to jIRC for Java 1.4 or greater, if the user is not using 
+  a modern vm then jIRC will exit.
+- added a strip() function to strip control codes out of the parameter text.
+- added a second parameter to openWindow() to make it open non-channel windows
+  inactive.
+- added a (%) systemProperties() function for obtaining information about the
+  system...
+- added an array() function for quickly initializing an array.
+- removed .bmp from acceptable image type filter.  Apparently java likes 
+  to freeze when loading bitmaps.  
+- reworked the script loading stuff in a big way.  Most of the work 
+  consisted of centralizing the script loading in the sleep API's.  I also 
+  made loading a little smarter which will help just a *touch* with script 
+  loading.  This was mostly for the benefit of making sleep easier to use 
+  for other app developers.  I tested it but report any bugs to me please 
+- fixed a bug that was really messing up the irc data structures.  The 
+  mode parser did not expect -k to have a parameter associated with it.  
+  As such the targets got messed up for subsequent modes in the same mode 
+  string.  This could really desynch the client.  Should be okay now.  
+- Changed configuration defaults... jIRC will now use a single document 
+  interface by default on every platform except Windows (were it defaults 
+  to MDI).  You can switch between SDI and MDI in the Options -> UI 
+  Options dialog.
+- Adjusted some of the blank space in the dialogs.  Dropped forced white 
+  space from 10 pixels to 5 pixels.  To help accomodate for look and feels 
+  that love to suck up screen space.  Writing good looking dialogs for a 
+  'skinnable' app is a pain in the ass... trust me.
+- fixed a bug with the colormap (it only allowed colors 0-98), try ^k99 
+  in the old beta... it will completely jack the display..
+- reset the colormap...  all slots have an entry and 1-16 are properly 
+  coordinated with the defacto mIRC standard.
+- added a baseDirectory() function which returns the directory where the 
+  jirc files are located at.
+- added an interpretation for Undernet reply 330 (User is logged in as)
+- added a key binding to the menus.irc: Escape - minimizes active window
+- /dcc accept now takes another optional parameter allowing you to 
+  specify a new location for the file to be dumped to... if your 
+  accepting a receive.
+- added closeDCC($dcc_conn) method to close an active dcc... since my 
+  /dcc close is kind of inadequate... :)
+- expanded /dcc close a little to take: /dcc close [send|chat|receive] <nick>
+- redid the dcc error messages a little so they keep the exception type 
+  out of it.
+- readded the /wall and /wallex commands, along with sets SEND_WALL and 
+  SEND_WALLEX
+- added a bunch of functions for manipulating the multiserver aspect of 
+  the client... kinda kewl..  now you can code scripts to make the tabs 
+  flash and stuph.
+
+Initial Beta (1) 01.31.04
+=====
+This thing has been in development since 99, I've had other strains of
+betas going up to beta 12.  So don't think this is anything new...

Modified: rero/src/rero/config/ClientDefaults.java
===================================================================
--- rero/src/rero/config/ClientDefaults.java	2005-06-11 10:12:04 UTC (rev 13)
+++ rero/src/rero/config/ClientDefaults.java	2005-06-11 14:20:27 UTC (rev 14)
@@ -74,7 +74,7 @@
 
    public static final boolean update_ial     = true;
 
-   public static final String  version_string = "05.08.05";
+   public static final String  version_string = "06.11.05";
 
    static
    {



From rsmudge at sheep.berlios.de  Mon Jun 13 11:36:46 2005
From: rsmudge at sheep.berlios.de (Raphael Mudge at BerliOS)
Date: Mon, 13 Jun 2005 11:36:46 +0200
Subject: [Jircii-svn] r21 - rero/resources/resource
Message-ID: <200506130936.j5D9akTE026587@sheep.berlios.de>

Author: rsmudge
Date: 2005-06-13 11:36:45 +0200 (Mon, 13 Jun 2005)
New Revision: 21

Modified:
   rero/resources/resource/default.irc
Log:
made sure sending/receiving messages use $parms in the default script to preserve initial whitespace in the message


Modified: rero/resources/resource/default.irc
===================================================================
--- rero/resources/resource/default.irc	2005-06-11 19:07:04 UTC (rev 20)
+++ rero/resources/resource/default.irc	2005-06-13 09:36:45 UTC (rev 21)
@@ -1,1012 +1,1012 @@
-#
-# default.irc
-# ----
-# a basic jirc script, does some simple stuff.
-# realizing my *dream* of ircii colored in with a crayon.
-#
-# The theme is simple on purpose, and the colors are campy
-# on purpose.  
-#
-#
-
-$DEBUG = 0; # set to 1 if you want to see numerics in the default
-            # numerci echo.
-
-#
-# These are some color constants I put together, so I could quickly
-# change them, the shift+click stuff in jIRC is dependent on a color
-# being a custom color so right here all the custom colors I want to
-# use are binded to a scalar
-#
-
-# color scheme
-#
-# \c17 -> Light Gray     -> general text and such
-# \c18 -> Blue           -> Quit, Part, Kick, Notify Signoff
-# \c19 -> Green          -> channel joins, notify Sign on, Nick change
-# \c20 -> Orange         -> CTCP requests / notices 
-# \c21 -> Teal           -> User text
-# \c22 -> Violet         -> My text, Action text
-# \c22 -> Purple         -> messages
-# \c23 -> Yellow         -> mode changes, topic changes
-# \c24 -> Brown          -> notices
-# \c25 -> odd tan color  -> timestamps
-# \c26 -> op color       
-# \c27 -> voice color    
-# \c28 -> halfop color
-# \c29 -> user color
-# \c30 -> red            -> ctcp color
-# \c31 -> green          -> dcc chat color
-# \c32 -> black          -> statusbar color
-# \c33 -> grey           -> server reply neutral color
-# \c34 -> purple         -> send/receive messages
-# \c35 -> light red      -> server reply nick/user at host stuff
-# \c36 -> orange         -> server reply channels/hosts
-# \c37 -> red            -> error replies like server error
-# \c39 ->                -> ident request
-# \c40 ->                -> misc colors (url opening and such)
-# \c41 ->                -> dcc closed/done messages
-# \c42 ->                -> dcc open/status messages
-
-$nnn = "*\B*\B*"; # the bullet used in all of our echo's
-
-sub rehashWindow
-{
-   if (-iswindow $1)
-   {
-      local('$mmode');
-
-      if ("l" ismode $1)
-      {
-         $mmode = getMode($1) . " " . getLimit($1);
-      }
-      else
-      {
-         $mmode = getMode($1);
-      }
-
-      &setWindowTitle($1, "$1 [ $+ $mmode $+ ] " . strip(getTopic($1)));
-   }
-}
-
-set CHANNEL_MODE_IS!
-{
-   return "\C17*\B*\B* Mode for\B $0 $+ \B\R:\R $parms"; 
-}
-
-set CHANNEL_TOPIC_IS!
-{ 
-   return "\C17*\B*\B* Topic for\B $0 $+ \B\R:\R $parms"; 
-}
-set CHANNEL_TOPIC_SETBY!
-{ 
-   return "\C17 $+ *\B*\B* Topic for $1 set by $nick on $seton"; 
-}
-
-set NICKLIST_FORMAT
-{
-   return formatNick($nick, $channel, $nick);
-}
-
-sub formatNick
-{
-   if ($1 isop $2) 
-   {
-      return "\C26@\C29 $+ $3";
-   }
-   else if ($1 isvoice $2) 
-   {
-      return "\C27+\C29 $+ $3";
-   }
-   else if ($1 ishalfop $2)
-   {
-      return "\C28%\C29 $+ $3";
-   }
-   else if ($1 hasmode $2)
-   {
-      return "\C26\B" . getModeFor($1, $2) . "\B\C29 $+ $3";
-   }
-   return "\C29 $+ $3";
-}
-
-set CHANNEL_CREATED!
-{ 
-   return "\C17*\B*\B* Channel $1 was created on $created";
-}
-
-on topic
-{
-   rehashWindow($1);
-}
-
-on mode
-{
-   if ($me ison $target)
-   {
-      refreshWindow($target);
-   } 
-}
-
-on open
-{
-   if ($me ison $window)
-   {
-      rehashWindow($window);
-   }
-}
-
-on repl_324
-{
-   rehashWindow($1);
-}
-
-set JOIN_SYNC!
-{
-   return "\C17*\B*\B* Join to\B $1 \Bwas synched in\B $sync \Bsecs."; 
-}
-
-set CHANNEL_MODE 
-{ 
-   rehashWindow($target);
-   return "\C23*\B*\B*\B $source \Bhas set mode\B $target $+ \B: $parms"; 
-}
-
-set USER_MODE 
-{ 
-   return "\C23*\B*\B*\B $source \Bhas set mode\B $target $+ \B: $parms"; 
-}
-
-set CHANNEL_JOIN 
-{ 
-   return "\C19*\B*\B*\B $nick \Bhas joined:\B $target"; 
-}
-
-set CHANNEL_KICK 
-{ 
-   return "\C18*\B*\B*\B $1 \Bhas been kicked by $nick $+ :\B $2-"; 
-}
-
-set USER_QUIT 
-{ 
-   return "\C18*\B*\B* Signoff:\B $nick \B(\B $+ $parms $+ \B)"; 
-}
-
-set CHANNEL_PART 
-{ 
-   return "\C18*\B*\B* $nick has left: $target"; 
-}
-
-set CHANNEL_TEXT 
-{ 
-   if ($me isin $parms) 
-   {
-      return "\C21<\B\U $+ $nick $+ \U\B>\C17 $parms";
-   }
-   return "\C21<\B $+ $nick $+ \B>\C17 $parms";
-}
-
-set CHANNEL_TEXT_INACTIVE 
-{ 
-   return "\C21<\b $+ $nick $+ \b\R:\R $+ $target $+ >\C17 $parms"; 
-}
-
-set SEND_TEXT 
-{ 
-   return "\C22<\B $+ $me $+ \B>\C17 $parms"; 
-}
-
-
-set SEND_TEXT_INACTIVE 
-{ 
-   return "\C22<\B $+ $me $+ \B\R:\R $+ $target $+ >\C17 $parms"; 
-}
-
-set USER_NICK 
-{
-   return "\C19*\B*\B* $nick is now known as:\B $1";
-}
-
-set CHANNEL_TOPIC_CHANGED 
-{ 
-   rehashWindow($0);
-   return "\C23*** $nick has changed the topic to:\B $parms"; 
-}
-
-set ACTION 
-{ 
-   return "\C22\B*\B $nick $1-"; 
-}
-
-set PRIVACTION 
-{ 
-   return "\C22\B*\B> $nick $1-"; 
-}
-
-
-set ACTION_INACTIVE 
-{
-   return "\C22* $nick $+ \R:\R $+ $0 $1-";
-}
-
-set SEND_ACTION 
-{ 
-   return "\C22*\B $me \B $+ $parms";
-}
-
-set SEND_ACTION_INACTIVE 
-{ 
-   return "\C22*\B $me $+ \B: $+ $0 $parms"; 
-}
-
-set SEND_ACTION_PRIV 
-{
-   return "\C22*\B $me \B: $+ $0 $parms"; 
-}
-
-set REPL_324!
-{
-   return;
-}
-
-set REPL_372! 
-{ 
-   return "\C17 $+ $parms";
-}
-
-set FORMATTED_NAMES_HEADER!
-{
-   return "\C17*\B*\B* Users on\R:\R\B $2";
-}
-
-set FORMATTED_NAMES
-{
-   if ($nick isnormal $2)
-   {
-      return " " . formatNick($nick, $2, left("$[12]nick", 12));
-   }
-   return formatNick($nick, $2, left("$[12]nick", 12));
-}
-
-set TIMESTAMP 
-{ 
-   return "\C25[\B $+ $time $+ \B] "; 
-}
-
-set CTCP_REPLY 
-{ 
-   $stuff = $2-;
-
-   if ($pt ne "")
-   {
-     $stuff = $pt;
-   }
-
-   return "\C30[ $+ $nick \B $+ $1 $+ \B reply]\R:\R $stuff";
-}
-
-set SEND_DCC
-{
-   if ($1 eq "SEND")
-   {
-      return "\c42$nnn DCC SEND to $0 $+ \r:\r " . getFileName($4-) . " (" . formatBytes($3) . ")";
-   }
-
-   return "\c42$nnn DCC " . uc($1) .  " to $0";
-}
-
-
-set SEND_CTCP 
-{
-   if ($1 eq "PING")
-   {
-      return "\C30\r->\r [ $+ $0 \BPING\B]";
-   }
-   else if ($2- eq "")
-   {
-      return "\C30\r->\r [ $+ $0 \B $+ $1 $+ \B]";
-   } 
-   else
-   {
-      return "\C30\r->\r [ $+ $0 \B $+ $1 $+ \B]\R:\R $2-";
-   }
-}
-
-set SEND_NOTICE 
-{
-   return "\c24 $+ -> -\b $+ $0 $+ \b- $+ \c17 $parms";
-}
-
-set SEND_WALL
-{
-   return "\c24\r[\rwall\r/\r\b $+ $0 $+ \b\r]:\r\c17 $1-";
-}
-
-set SEND_WALLEX
-{
-   return "\c24\r[\rwall-x\r/\r\b $+ $0 $+ \b\r]:\r\c17 $1-";
-}
-
-set NOTICE 
-{
-   if ($nick eq "")
-   {
-      return "\c24 $+ $parms";
-   }
-
-   return "\c24 $+ -\b $+ $nick $+ \b-\c17 $parms";
-}
-
-set PRIVMSG 
-{
-   return "\C34 $+ *\B $+ $nick $+ \B*\C17 $parms";
-}
-set SEND_MSG 
-{
-   if (-iswindow $target)
-   {
-       return "\C34*\B $+ $me $+ \B*\C17 $parms";
-   }
-   else
-   {
-       return "\C34 $+ \R->\R *\B $+ $target $+ \B*\C17 $parms";
-   }
-}
-set NOTIFY_SIGNON
-{
-   return "\C19 $+ $nnn Signon:\B $nick \B( $+ $address $+ )";
-}
-set NOTIFY_SIGNOFF 
-{
-   return "\C18 $+ $nnn Signoff:\B $nick \B( $+ $address $+ )";
-}
-
-set REPL_366 { return; } # hide REPL_END_OF_NAMES
-
-#
-# Whois Reply
-#
-set REPL_401 { return "\c33$nnn \c35\b $+ $1 $+ \b\c33 $2-"; } # no such nick/channel
-set REPL_406 { return "\c33$nnn \c35\b $+ $1 $+ \b\c33 $2-"; } # was no such nick/channel
-set REPL_301! { return formatWhois("Away", "$2-"); }
-set REPL_307! { return formatWhois("Register", "\c35\b $+ $1 $+ \b\c33 $2-"); }
-set REPL_311! { return formatWhois("Whois", "\c35\b $+ $1 \b\r[\r $+ $2 $+ \r@\r $+ $3 $+ \r]\c33:\r $5-"); }
-set REPL_312! { return formatWhois("Server", "\c36 $+ $2 \c33\r(\r $+ $3- $+ \r)\r"); }
-set REPL_313! { return formatWhois("Ircop", "\c35\b $+ $1 \b\c33 $+ $2-"); }
-set REPL_314! { return formatWhois("Who Was", "\c35\b $+ $1 \b\r[\r $+ $2 $+ \r@\r $+ $3 $+ \r]\c33:\r $5-"); }
-set REPL_317! { return formatWhois("Idle", formatTime($2)); }
-set REPL_330! { return formatWhois("Register", "\c33 $+ $1 $3- \c35\b $+ $2"); }
-set REPL_318  { return ""; } # hide END of /WHOIS 
-set REPL_369  { return ""; } # hide END of /WHOWAS 
-set REPL_319! 
-{ 
-   local('$chtemp');
-   foreach $var (split(" ", $2-))
-   {
-      if (strlen($var) > 0 && charAt($var, 0) ne "#" && charAt($var, 0) ne "&") 
-      {
-         $var = "\r" . charAt($var, 0) . "\r" . substr($var, 1, strlen($var));
-      }
-      $chtemp = "$chtemp $+ $var ";
-   }
-
-   return formatWhois("Channels", "\c36 $+ $chtemp"); 
-}
-set REPL_320! { return formatWhois("Secure", "\c35\b $+ $1 $+ \b\c33 $2-"); }
-set REPL_338! { return formatWhois("Host", "$2"); }
-
-sub formatWhois
-{
-   local('$temp');
-   $temp = "\b" . charAt("$[8]1", 0) . "\b" . substr("$[8]1", 1, strlen("$[8]1"));
-   return "\c33 $+ $temp $+ \r:\r $2";
-}
-
-#
-# formatted numerics
-#
-set REPL_403 { return formatNumeric($1, $2-); } # no such channel
-set REPL_442 { return formatNumeric($1, $2-); } # you're not on that channel
-set REPL_473 { return formatNumeric($1, $2-); } # banned
-set REPL_474 { return formatNumeric($1, $2-); } # invite
-set REPL_475 { return formatNumeric($1, $2-); } # key
-set REPL_433 { return formatNumeric($1, $2-); } # nick in use
-
-sub formatNumeric
-{
-   if (charAt($1, 0) eq "#")
-   {
-      return "\c33$nnn \c36\b $+ $1 $+ \b\c33 $2"; 
-   }
-   return "\c33$nnn \c35\b $+ $1 $+ \b\c33 $2";
-}
-
-#
-# Formatted Server Output Type Stuff
-#
-
-# /who reply
-set REPL_352! 
-{
-   return "\c36 $+ $1 \c35\b $+ $5 \b\r[\r $+ $2 $+ \r@\r $+ $3 $+ \r]\r\c33 on\c36 $4 $+ \c33\r:\r $8-";
-}
-
-set REPL_315 { return; }
-
-# /mode #channel +b reply
-$_bancount = 0;
-
-set CHANNEL_BANLIST
-{
-   local('@info');
-   @info = split('!', $3);
-
-   $_bancount++;
-
-   return "\c36 $+ $1 \c35\b $+ $2 \b\c33set by\r:\r\c35 " . @info[0];
-}
-
-set CHANNEL_BANLIST_END
-{ 
-   if ($_bancount == 0)
-   {
-      return "\c36 $+ $1 \c35\bno\b bans set";
-   }
-
-   $_bancount = 0;
-   return; 
-}  # hide end of banlist reply...
-
-# /links reply
-set REPL_364! 
-{
-   return "\C36 $+ $[20]1 \c33-\b>\b\c36 $[20]2 \c33\r(\r\b $+ $3 \bhops\r):\r $4-";
-}
-
-set REPL_365 { return; }
-
-# /list reply
-set REPL_321! 
-{
-   return "\c33\bC\bhannel              \bU\bsers   \bT\bopic";
-}
-
-set REPL_322! 
-{
-   return "\c35\b $+ $[20]1 $+ \b\c33 $[-5]2   $3-";
-}
-
-set REPL_323 { return; }
-
-set NUMERIC! 
-{ 
-#   return "\C17$nnn \r(\r\b $+ $numeric $+ \b\r)\r $parms"; 
-   return "\C17$nnn $parms"; 
-}
-
-set CTCP_REQUEST 
-{
-   if ($2- eq ""  || ($1 eq "PING" && -isnumber $2) )
-   {
-      return "\C30[ $+ $nick \B $+ $1 $+ \B]";
-   }
-   else
-   {
-      return "\C30[ $+ $nick \B $+ $1 $+ \B]\R:\R $2-";
-   }
-}
-
-set SBAR_LEFT 
-{
-  if ($me isop $query) 
-  {
-     $ime = "\B@\B $+ $me";
-  }
-  else if ($me ishalfop $query) 
-  {
-     $ime = "\B%\B $+ $me";
-  }
-  else if ($me isvoice $query) 
-  {
-     $ime = "\B+\B $+ $me";
-  }
-  else
-  {
-     $ime = "$me";
-  }
-
-  if ($me ison $query)
-  {
-     $ichan = "on $query";
-  }
-  else
-  {
-     $ichan = "Query\R:\R $query";
-  }
-
-  return "\c32 $+ [Lag:\B $lag $+ \B] $time $ime $ichan";
-}
-
-sub getDCCPercentage
-{
-  if (getConnectionType($1) eq "RECEIVE")
-  {
-     return int((double(getBytesReceived($1)) / double(getExpectedSize($1))) * 100);
-  }
-
-  if (getConnectionType($1) eq "SEND")
-  {
-     return int((double(getBytesSent($1)) / double(lof(getDCCFilePath($1)))) * 100);
-  }
-}
-
-sub getDCCSizeSoFar
-{
-  if (getConnectionType($1) eq "RECEIVE")
-  {
-     return getBytesReceived($1);
-  }
-
-  if (getConnectionType($1) eq "SEND")
-  {
-     return getBytesSent($1);
-  }
-}
-
-set SBAR_RIGHT
-{
-  if (size(getActiveConnections()) > 0)
-  {
-     foreach $var (getActiveConnections())
-     {
-        if (getConnectionType($var) eq "RECEIVE")
-        {
-           $pc = getDCCPercentage($var);
-
-           if ($DCC_WATCH_TIMER eq "")
-           {
-              sub timertemp
-              {
-                 refreshWindow(getActiveWindow());
-              }
-              $DCC_WATCH_TIMER = addTimer(&timertemp, 2000);
-           }
-
-           return "\c32\r[\r" . left(getDCCFileName($var), 25) . "\r:\r $+ $pc $+ %\r]\r";
-        } 
-     }
-  }  
-
-  if ($DCC_WATCH_TIMER ne "")
-  {
-     stopTimer($DCC_WATCH_TIMER);
-     $DCC_WATCH_TIMER = "";
-  }
-
-  if (!-isSetT "ui.showtabs" && isServerConnected())
-  {
-     return "\c32\r[\r".getServerHost()."\r:\r".(getSessionId() + 1)."\r]";
-  }
-
-  return "\c32\Rj\RIRC\Bii\B";
-}
-
-set ON_CHANNELS 
-{
-  return "$nnn Channels: $parms";
-}
-
-set SET_IGNORE
-{
-   if ($0 eq "add") { return "\c40 $+ $nnn Added\b $parms \bto ignore list"; }
-   if ($0 eq "remove") { return "\c40 $+ $nnn Removed\b $parms \bfrom ignore list"; }
-}
-
-set SET_NOTIFY
-{
-   if ($0 eq "add") { return "\c40 $+ $nnn Added\b $parms \bto notify list"; }
-   if ($0 eq "remove") { return "\c40 $+ $nnn Removed\b $parms \bfrom notify list"; }
-}
-
-set PROCESS_DATA! 
-{
-  return "[0] $parms";
-}
-
-
-#
-# DCC Chat Related
-#
-
-set DCC_REQUEST 
-{
-   if ($2 eq "SEND")
-   {
-      return "\c42$nnn DCC SEND request from $nick $+ \r:\r $3 (" . formatBytes($6) . ")";
-   }
-
-   return "\c42$nnn DCC $2 request from $nick";
-}
-
-set CHATMSG
-{
-   return "\c31=\b $+ $0 $+ \b=\c17 $1-";
-}
-
-set SEND_CHAT_ERROR
-{
-   return "\c41$nnn there is no open chat with $0";
-}
-
-set SEND_CHAT
-{
-   if (-iswindow ("=" . $0))
-   {
-      return "\c31=\b $+ $me $+ \b=\c17 $1-";
-   }
-   else
-   {
-      return "\c31-> =\b $+ $0 $+ \b=\c17 $1-";
-   }
-}
-
-set CHAT_OPEN
-{
-   return "\c42$nnn Chat with\b $nick \bopened.";
-}
-
-set CHAT_CLOSE
-{
-   
-   return "\c41$nnn Chat with\b $nick \blost\b\r:\r $1-";
-}
-
-#
-# /dcc command...  don't want anyone feeling to left out :)
-#
-
-alias dcc
-{
-   if ($1 ne "")
-   {
-      call("/ $+ $0-", "use-built-in-command-only");
-      return;
-   }
-
-   echo("\c17\bT\bype     \bN\bick        \bI\bnformation");
-
-   foreach $conn (getActiveConnections())
-   {
-      $type = getConnectionType($conn);
-      $nick = getDCCNickname($conn);
-
-      $info = DCCInformation($conn);
-
-      echo("\c36$[7]type  \c35$[10]nick  $info");
-   }
-}
-
-set DCC_LIST_TYPE
-{
-   $conn = getDCCConnection($this);
-   return "\c36" . getConnectionType($conn);
-}
-
-set DCC_LIST_NICK
-{
-   $conn = getDCCConnection($this);
-   return "\c35" . getDCCNickname($conn);
-}
-
-sub DCCInformation
-{
-   local('$info $conn');
-
-   $conn = $1;
-   $type = getConnectionType($conn);
-
-   if (!-isdccopen $conn)
-   {
-     return "Waiting...";
-   }
-
-   if ($type eq "CHAT")
-   {
-     $info = "\c33\bI\bdle\r:\r " . formatTime(getDCCIdleTime($conn) / 1000);
-   }
-   else
-   {
-     $info = "\r(\r\bE\bst\r:\r " . formatTime2(getTimeRemaining($conn)) . "\r)\r";
-          
-     local('$a $b $c $d');
-     $a = getDCCPercentage($conn);
-     $b = getDCCFileName($conn);
-     $c = formatBytes(getTransferRate($conn)) . "/s";
-     $d = "\r(\r\bS\bize\r:\r " . formatBytes(getDCCSizeSoFar($conn)) . "\r)\r";
-
-     $info = "\c33 $+ $[21]info $+ $[-2]a $+ \r%\r $[7]c $+ $[22]d $+ $b"
-   }
-
-   return $info;
-}
-
-set DCC_LIST_INFORMATION
-{
-   return DCCInformation(getDCCConnection($this));
-}
-
-#
-# 
-#
-set RECEIVE_COMPLETE
-{
-   $dcc  = getDCCConnection($this);
-   $file = getDCCFileName($dcc);
-   $rate = formatBytes(getTransferRate($dcc)) . "/s";
-   return "\c41$nnn Receive of $file from $nick complete at $rate";
-}
-
-set SEND_COMPLETE
-{
-   return "\c41$nnn Send to $nick complete";
-}
-
-set RECEIVE_START
-{
-   $dcc  = getDCCConnection($this);
-   $file = getDCCFileName($dcc);
-   return "\c42$nnn Receive of $file from $nick has started";
-}
-
-set SEND_START
-{
-   printf("Start of send to $nick");
-   return "\c42$nnn Send to $nick has started";
-}
-
-set RECEIVE_FAILED
-{
-   return "\c41$nnn Receive from $nick has failed: $1-";
-}
-
-set SEND_FAILED
-{
-   return "\c41$nnn Send to $nick has failed: $1-";
-}
-
-#
-# Normal DCC Messages..  always fun
-#
-set RESUME_SUCCEEDED
-{
-   return "\c42$nnn Resume request to $nick successful";
-}
-
-set RESUME_FAILED
-{
-   return "\c41$nnn Resume request to $nick \bfailed\b";
-}
-
-set RESUME_REQUEST_ERROR
-{
-   return "\c41$nnn $nick has made a jacked up resume request";
-}
-
-set RESUME_REQUEST
-{
-   return "\c42$nnn $nick has requested to resume the dcc transfer";
-}
-
-set RESOLVED_LOCALINFO
-{
-    return "\C42*\B*\B* Resolved local host to\B $0";
-}
-
-# /dns reply
-set RESOLVED_HOST
-{
-    if ($2- ne "")
-    {
-       return "\C42*\B*\B* Resolved\b $0 \bto $2 $+ \r[\r $+ $1 $+ \r]\r";
-    }
-    else
-    {
-       return "\C42*\B*\B* Unable to resolve $0 $+ \r:\r host not found";
-    }
-}
-
-#
-# aliases
-#
-alias notify
-{
-   if ($1 ne "")
-   {
-      call("/ $+ $0-", "use-built-in-command-only");
-      return;
-   }
-
-   echo("\c17$nnn Signed on\r:");
-   
-   $output = "";
-
-   foreach $var (getSignedOnUsers())
-   {
-      $otime   = onlineFor($var);
-
-      if ($otime < 300)                # users signed on within the past 5 minutes
-      {
-         $output = "$output \b $+ $var $+ \b";
-      }
-      else if ($otime < (60 * 60))     # users signed on for up to an hour
-      {
-         $output = "$output $var";
-      }
-      else                             # anything over an hour
-      {
-         $output = "$output \r $+ $var $+ \r";
-      }
-   }
- 
-   echo("\c17  $output");
-
-   echo("\c17$nnn Signed off\r:");
-   
-   $output = "";
-
-   foreach $var (getSignedOffUsers())
-   {
-      $output = "$output $var";
-   }
-  
-   echo("\c17  $output");
-}
-
-set IDENT_REQUEST
-{
-   return "\c39$nnn Ident request from $0";
-}
-
-set SERVER_ERROR
-{
-   return "\c37$nnn Server error: $parms";
-}
-
-set IRC_ATTEMPT_CONNECT
-{
-   return "\c19$nnn Attempting to connect to " . $0;
-}
-
-set IRC_DISCONNECT
-{
-   return "\c18$nnn Disconnected from\b " . getServerHost() . "\b\r:\r $parms";
-}
-
-set IRC_CONNECT
-{
-   return "\c19\r$nnn Connected to\r\b " . getServerHost() . "\b";
-}
-
-set IRC_RECONNECT
-{
-   return "\c19\r$nnn Attempting to reconnect to\r\b " . getServerHost() . "\b";
-}
-
-set INVITE
-{
-   return "\c24$nnn \b $+ $nick $+ \b invites you to join\r:\r $1";
-}
-
-set REPL_341
-{
-   return "\c33$nnn $1 has been invited to\r:\r\c36 $2";
-}
-
-#
-# Completes the current nickname in the editbox..
-#
-$_TAB_TEXT    = "";
- at _TAB_NICKS   = array();
-$_TAB_LAST    = "";
-
-sub setTabInput
-{
-   $_TAB_TEXT = "$1 $+ $2";
-   $_TAB_LAST = $2;
-   setInputText(getActiveWindow(), $_TAB_TEXT);
-}
-
-bind tab
-{
-   local('$text @data $pnick');
-
-   $text  = getInputText(getActiveWindow());
-   
-   if (-ischannel $active && $text eq "/topic")
-   {
-      setTabInput("/topic $active " . getTopic($active));
-   }
-   else if ($_TAB_TEXT eq $text && size(@_TAB_NICKS) > 0)
-   {
-      if (left($text, 1) eq "/" && indexOf($text, " ") == -1)
-      {
-         setTabInput("/", shift(@_TAB_NICKS));
-      }
-      else 
-      {
-         $text  = substr($text, 0, strlen($text) - strlen($_TAB_LAST));
-         setTabInput("$text", shift(@_TAB_NICKS));
-      }
-   }
-   else if (left($text, 1) eq "/" && indexOf($text, " ") == -1)
-   {
-      $text       = substr($text, 1);
-      @_TAB_NICKS = array();
-     
-      foreach $var (getAliasList())
-      {
-         $var = lc($var);
-
-         if (left($var, strlen($text)) eq $text)
-         {
-            add(@_TAB_NICKS, $var, 0);
-         }
-         else if ($text isin $var)
-         {
-            push(@_TAB_NICKS, $var);
-         }
-      }
-
-      push(@_TAB_NICKS, $text);
-      setTabInput("/", shift(@_TAB_NICKS));
-   }
-   else if ($text ismatch '/dcc send \S+ (.+)' || 
-            $text ismatch '/send \S+ (.+)' || 
-            $text ismatch '/load (.+)' || 
-            $text ismatch '/theme (.+)' || 
-            $text ismatch '/xdcc offer (.+)' || 
-            $_IS_FILE_COMPLETE == 1)
-   {
-      @data  = matched();
-      $pnick = pop(@data);
-      $text  = substr($text, 0, strlen($text) - strlen($pnick));
-
-      @_TAB_NICKS = fileCompleteAll($pnick);
-
-      setTabInput("$text", shift(@_TAB_NICKS));
-   }
-   else if (-ischannel $active && strlen($text) > 0 && right($text, 1) ne " ")
-   {
-      @data  = split(' ', $text);
-      $pnick = pop(@data);
-      $text  = substr($text, 0, strlen($text) - strlen($pnick));
-
-      if ($pnick eq "#")
-      {
-         @_TAB_NICKS = array();
-         setTabInput("$text $+ $active", "");
-      }
-      else if (left($pnick, 1) eq "/")
-      {
-         # do nothing...  we don't want to nick complete a "command"
-      }
-      else
-      {
-         @_TAB_NICKS = nickCompleteAll($pnick, $active);
-         setTabInput("$text", shift(@_TAB_NICKS));
-      }
-   }
-   else if ($_LAST_MESSAGE)
-   {
-      @_TAB_NICKS = array();
-      setInputText(getActiveWindow(), "/msg $_LAST_MESSAGE ");
-   }
-}
-
-on msg
-{
-   $_LAST_MESSAGE = $nick;
-}
-
-
-
-
+#
+# default.irc
+# ----
+# a basic jirc script, does some simple stuff.
+# realizing my *dream* of ircii colored in with a crayon.
+#
+# The theme is simple on purpose, and the colors are campy
+# on purpose.  
+#
+#
+
+$DEBUG = 0; # set to 1 if you want to see numerics in the default
+            # numerci echo.
+
+#
+# These are some color constants I put together, so I could quickly
+# change them, the shift+click stuff in jIRC is dependent on a color
+# being a custom color so right here all the custom colors I want to
+# use are binded to a scalar
+#
+
+# color scheme
+#
+# \c17 -> Light Gray     -> general text and such
+# \c18 -> Blue           -> Quit, Part, Kick, Notify Signoff
+# \c19 -> Green          -> channel joins, notify Sign on, Nick change
+# \c20 -> Orange         -> CTCP requests / notices 
+# \c21 -> Teal           -> User text
+# \c22 -> Violet         -> My text, Action text
+# \c22 -> Purple         -> messages
+# \c23 -> Yellow         -> mode changes, topic changes
+# \c24 -> Brown          -> notices
+# \c25 -> odd tan color  -> timestamps
+# \c26 -> op color       
+# \c27 -> voice color    
+# \c28 -> halfop color
+# \c29 -> user color
+# \c30 -> red            -> ctcp color
+# \c31 -> green          -> dcc chat color
+# \c32 -> black          -> statusbar color
+# \c33 -> grey           -> server reply neutral color
+# \c34 -> purple         -> send/receive messages
+# \c35 -> light red      -> server reply nick/user at host stuff
+# \c36 -> orange         -> server reply channels/hosts
+# \c37 -> red            -> error replies like server error
+# \c39 ->                -> ident request
+# \c40 ->                -> misc colors (url opening and such)
+# \c41 ->                -> dcc closed/done messages
+# \c42 ->                -> dcc open/status messages
+
+$nnn = "*\B*\B*"; # the bullet used in all of our echo's
+
+sub rehashWindow
+{
+   if (-iswindow $1)
+   {
+      local('$mmode');
+
+      if ("l" ismode $1)
+      {
+         $mmode = getMode($1) . " " . getLimit($1);
+      }
+      else
+      {
+         $mmode = getMode($1);
+      }
+
+      &setWindowTitle($1, "$1 [ $+ $mmode $+ ] " . strip(getTopic($1)));
+   }
+}
+
+set CHANNEL_MODE_IS!
+{
+   return "\C17*\B*\B* Mode for\B $0 $+ \B\R:\R $parms"; 
+}
+
+set CHANNEL_TOPIC_IS!
+{ 
+   return "\C17*\B*\B* Topic for\B $0 $+ \B\R:\R $parms"; 
+}
+set CHANNEL_TOPIC_SETBY!
+{ 
+   return "\C17 $+ *\B*\B* Topic for $1 set by $nick on $seton"; 
+}
+
+set NICKLIST_FORMAT
+{
+   return formatNick($nick, $channel, $nick);
+}
+
+sub formatNick
+{
+   if ($1 isop $2) 
+   {
+      return "\C26@\C29 $+ $3";
+   }
+   else if ($1 isvoice $2) 
+   {
+      return "\C27+\C29 $+ $3";
+   }
+   else if ($1 ishalfop $2)
+   {
+      return "\C28%\C29 $+ $3";
+   }
+   else if ($1 hasmode $2)
+   {
+      return "\C26\B" . getModeFor($1, $2) . "\B\C29 $+ $3";
+   }
+   return "\C29 $+ $3";
+}
+
+set CHANNEL_CREATED!
+{ 
+   return "\C17*\B*\B* Channel $1 was created on $created";
+}
+
+on topic
+{
+   rehashWindow($1);
+}
+
+on mode
+{
+   if ($me ison $target)
+   {
+      refreshWindow($target);
+   } 
+}
+
+on open
+{
+   if ($me ison $window)
+   {
+      rehashWindow($window);
+   }
+}
+
+on repl_324
+{
+   rehashWindow($1);
+}
+
+set JOIN_SYNC!
+{
+   return "\C17*\B*\B* Join to\B $1 \Bwas synched in\B $sync \Bsecs."; 
+}
+
+set CHANNEL_MODE 
+{ 
+   rehashWindow($target);
+   return "\C23*\B*\B*\B $source \Bhas set mode\B $target $+ \B: $parms"; 
+}
+
+set USER_MODE 
+{ 
+   return "\C23*\B*\B*\B $source \Bhas set mode\B $target $+ \B: $parms"; 
+}
+
+set CHANNEL_JOIN 
+{ 
+   return "\C19*\B*\B*\B $nick \Bhas joined:\B $target"; 
+}
+
+set CHANNEL_KICK 
+{ 
+   return "\C18*\B*\B*\B $1 \Bhas been kicked by $nick $+ :\B $2-"; 
+}
+
+set USER_QUIT 
+{ 
+   return "\C18*\B*\B* Signoff:\B $nick \B(\B $+ $parms $+ \B)"; 
+}
+
+set CHANNEL_PART 
+{ 
+   return "\C18*\B*\B* $nick has left: $target"; 
+}
+
+set CHANNEL_TEXT 
+{ 
+   if ($me isin $parms) 
+   {
+      return "\C21<\B\U $+ $nick $+ \U\B>\C17 $parms";
+   }
+   return "\C21<\B $+ $nick $+ \B>\C17 $parms";
+}
+
+set CHANNEL_TEXT_INACTIVE 
+{ 
+   return "\C21<\b $+ $nick $+ \b\R:\R $+ $target $+ >\C17 $parms"; 
+}
+
+set SEND_TEXT 
+{ 
+   return "\C22<\B $+ $me $+ \B>\C17 $parms"; 
+}
+
+
+set SEND_TEXT_INACTIVE 
+{ 
+   return "\C22<\B $+ $me $+ \B\R:\R $+ $target $+ >\C17 $parms"; 
+}
+
+set USER_NICK 
+{
+   return "\C19*\B*\B* $nick is now known as:\B $1";
+}
+
+set CHANNEL_TOPIC_CHANGED 
+{ 
+   rehashWindow($0);
+   return "\C23*** $nick has changed the topic to:\B $parms"; 
+}
+
+set ACTION 
+{ 
+   return "\C22\B*\B $nick $parms"; 
+}
+
+set PRIVACTION 
+{ 
+   return "\C22\B*\B> $nick $parms"; 
+}
+
+
+set ACTION_INACTIVE 
+{
+   return "\C22* $nick $+ \R:\R $+ $0 $parms";
+}
+
+set SEND_ACTION 
+{ 
+   return "\C22*\B $me \B $+ $parms";
+}
+
+set SEND_ACTION_INACTIVE 
+{ 
+   return "\C22*\B $me $+ \B: $+ $0 $parms"; 
+}
+
+set SEND_ACTION_PRIV 
+{
+   return "\C22*\B $me \B: $+ $0 $parms"; 
+}
+
+set REPL_324!
+{
+   return;
+}
+
+set REPL_372! 
+{ 
+   return "\C17 $+ $parms";
+}
+
+set FORMATTED_NAMES_HEADER!
+{
+   return "\C17*\B*\B* Users on\R:\R\B $2";
+}
+
+set FORMATTED_NAMES
+{
+   if ($nick isnormal $2)
+   {
+      return " " . formatNick($nick, $2, left("$[12]nick", 12));
+   }
+   return formatNick($nick, $2, left("$[12]nick", 12));
+}
+
+set TIMESTAMP 
+{ 
+   return "\C25[\B $+ $time $+ \B] "; 
+}
+
+set CTCP_REPLY 
+{ 
+   $stuff = $2-;
+
+   if ($pt ne "")
+   {
+     $stuff = $pt;
+   }
+
+   return "\C30[ $+ $nick \B $+ $1 $+ \B reply]\R:\R $stuff";
+}
+
+set SEND_DCC
+{
+   if ($1 eq "SEND")
+   {
+      return "\c42$nnn DCC SEND to $0 $+ \r:\r " . getFileName($4-) . " (" . formatBytes($3) . ")";
+   }
+
+   return "\c42$nnn DCC " . uc($1) .  " to $0";
+}
+
+
+set SEND_CTCP 
+{
+   if ($1 eq "PING")
+   {
+      return "\C30\r->\r [ $+ $0 \BPING\B]";
+   }
+   else if ($2- eq "")
+   {
+      return "\C30\r->\r [ $+ $0 \B $+ $1 $+ \B]";
+   } 
+   else
+   {
+      return "\C30\r->\r [ $+ $0 \B $+ $1 $+ \B]\R:\R $2-";
+   }
+}
+
+set SEND_NOTICE 
+{
+   return "\c24 $+ -> -\b $+ $0 $+ \b- $+ \c17 $parms";
+}
+
+set SEND_WALL
+{
+   return "\c24\r[\rwall\r/\r\b $+ $0 $+ \b\r]:\r\c17 $parms";
+}
+
+set SEND_WALLEX
+{
+   return "\c24\r[\rwall-x\r/\r\b $+ $0 $+ \b\r]:\r\c17 $parms";
+}
+
+set NOTICE 
+{
+   if ($nick eq "")
+   {
+      return "\c24 $+ $parms";
+   }
+
+   return "\c24 $+ -\b $+ $nick $+ \b-\c17 $parms";
+}
+
+set PRIVMSG 
+{
+   return "\C34 $+ *\B $+ $nick $+ \B*\C17 $parms";
+}
+set SEND_MSG 
+{
+   if (-iswindow $target)
+   {
+       return "\C34*\B $+ $me $+ \B*\C17 $parms";
+   }
+   else
+   {
+       return "\C34 $+ \R->\R *\B $+ $target $+ \B*\C17 $parms";
+   }
+}
+set NOTIFY_SIGNON
+{
+   return "\C19 $+ $nnn Signon:\B $nick \B( $+ $address $+ )";
+}
+set NOTIFY_SIGNOFF 
+{
+   return "\C18 $+ $nnn Signoff:\B $nick \B( $+ $address $+ )";
+}
+
+set REPL_366 { return; } # hide REPL_END_OF_NAMES
+
+#
+# Whois Reply
+#
+set REPL_401 { return "\c33$nnn \c35\b $+ $1 $+ \b\c33 $2-"; } # no such nick/channel
+set REPL_406 { return "\c33$nnn \c35\b $+ $1 $+ \b\c33 $2-"; } # was no such nick/channel
+set REPL_301! { return formatWhois("Away", "$2-"); }
+set REPL_307! { return formatWhois("Register", "\c35\b $+ $1 $+ \b\c33 $2-"); }
+set REPL_311! { return formatWhois("Whois", "\c35\b $+ $1 \b\r[\r $+ $2 $+ \r@\r $+ $3 $+ \r]\c33:\r $5-"); }
+set REPL_312! { return formatWhois("Server", "\c36 $+ $2 \c33\r(\r $+ $3- $+ \r)\r"); }
+set REPL_313! { return formatWhois("Ircop", "\c35\b $+ $1 \b\c33 $+ $2-"); }
+set REPL_314! { return formatWhois("Who Was", "\c35\b $+ $1 \b\r[\r $+ $2 $+ \r@\r $+ $3 $+ \r]\c33:\r $5-"); }
+set REPL_317! { return formatWhois("Idle", formatTime($2)); }
+set REPL_330! { return formatWhois("Register", "\c33 $+ $1 $3- \c35\b $+ $2"); }
+set REPL_318  { return ""; } # hide END of /WHOIS 
+set REPL_369  { return ""; } # hide END of /WHOWAS 
+set REPL_319! 
+{ 
+   local('$chtemp');
+   foreach $var (split(" ", $2-))
+   {
+      if (strlen($var) > 0 && charAt($var, 0) ne "#" && charAt($var, 0) ne "&") 
+      {
+         $var = "\r" . charAt($var, 0) . "\r" . substr($var, 1, strlen($var));
+      }
+      $chtemp = "$chtemp $+ $var ";
+   }
+
+   return formatWhois("Channels", "\c36 $+ $chtemp"); 
+}
+set REPL_320! { return formatWhois("Secure", "\c35\b $+ $1 $+ \b\c33 $2-"); }
+set REPL_338! { return formatWhois("Host", "$2"); }
+
+sub formatWhois
+{
+   local('$temp');
+   $temp = "\b" . charAt("$[8]1", 0) . "\b" . substr("$[8]1", 1, strlen("$[8]1"));
+   return "\c33 $+ $temp $+ \r:\r $2";
+}
+
+#
+# formatted numerics
+#
+set REPL_403 { return formatNumeric($1, $2-); } # no such channel
+set REPL_442 { return formatNumeric($1, $2-); } # you're not on that channel
+set REPL_473 { return formatNumeric($1, $2-); } # banned
+set REPL_474 { return formatNumeric($1, $2-); } # invite
+set REPL_475 { return formatNumeric($1, $2-); } # key
+set REPL_433 { return formatNumeric($1, $2-); } # nick in use
+
+sub formatNumeric
+{
+   if (charAt($1, 0) eq "#")
+   {
+      return "\c33$nnn \c36\b $+ $1 $+ \b\c33 $2"; 
+   }
+   return "\c33$nnn \c35\b $+ $1 $+ \b\c33 $2";
+}
+
+#
+# Formatted Server Output Type Stuff
+#
+
+# /who reply
+set REPL_352! 
+{
+   return "\c36 $+ $1 \c35\b $+ $5 \b\r[\r $+ $2 $+ \r@\r $+ $3 $+ \r]\r\c33 on\c36 $4 $+ \c33\r:\r $8-";
+}
+
+set REPL_315 { return; }
+
+# /mode #channel +b reply
+$_bancount = 0;
+
+set CHANNEL_BANLIST
+{
+   local('@info');
+   @info = split('!', $3);
+
+   $_bancount++;
+
+   return "\c36 $+ $1 \c35\b $+ $2 \b\c33set by\r:\r\c35 " . @info[0];
+}
+
+set CHANNEL_BANLIST_END
+{ 
+   if ($_bancount == 0)
+   {
+      return "\c36 $+ $1 \c35\bno\b bans set";
+   }
+
+   $_bancount = 0;
+   return; 
+}  # hide end of banlist reply...
+
+# /links reply
+set REPL_364! 
+{
+   return "\C36 $+ $[20]1 \c33-\b>\b\c36 $[20]2 \c33\r(\r\b $+ $3 \bhops\r):\r $4-";
+}
+
+set REPL_365 { return; }
+
+# /list reply
+set REPL_321! 
+{
+   return "\c33\bC\bhannel              \bU\bsers   \bT\bopic";
+}
+
+set REPL_322! 
+{
+   return "\c35\b $+ $[20]1 $+ \b\c33 $[-5]2   $3-";
+}
+
+set REPL_323 { return; }
+
+set NUMERIC! 
+{ 
+#   return "\C17$nnn \r(\r\b $+ $numeric $+ \b\r)\r $parms"; 
+   return "\C17$nnn $parms"; 
+}
+
+set CTCP_REQUEST 
+{
+   if ($2- eq ""  || ($1 eq "PING" && -isnumber $2) )
+   {
+      return "\C30[ $+ $nick \B $+ $1 $+ \B]";
+   }
+   else
+   {
+      return "\C30[ $+ $nick \B $+ $1 $+ \B]\R:\R $2-";
+   }
+}
+
+set SBAR_LEFT 
+{
+  if ($me isop $query) 
+  {
+     $ime = "\B@\B $+ $me";
+  }
+  else if ($me ishalfop $query) 
+  {
+     $ime = "\B%\B $+ $me";
+  }
+  else if ($me isvoice $query) 
+  {
+     $ime = "\B+\B $+ $me";
+  }
+  else
+  {
+     $ime = "$me";
+  }
+
+  if ($me ison $query)
+  {
+     $ichan = "on $query";
+  }
+  else
+  {
+     $ichan = "Query\R:\R $query";
+  }
+
+  return "\c32 $+ [Lag:\B $lag $+ \B] $time $ime $ichan";
+}
+
+sub getDCCPercentage
+{
+  if (getConnectionType($1) eq "RECEIVE")
+  {
+     return int((double(getBytesReceived($1)) / double(getExpectedSize($1))) * 100);
+  }
+
+  if (getConnectionType($1) eq "SEND")
+  {
+     return int((double(getBytesSent($1)) / double(lof(getDCCFilePath($1)))) * 100);
+  }
+}
+
+sub getDCCSizeSoFar
+{
+  if (getConnectionType($1) eq "RECEIVE")
+  {
+     return getBytesReceived($1);
+  }
+
+  if (getConnectionType($1) eq "SEND")
+  {
+     return getBytesSent($1);
+  }
+}
+
+set SBAR_RIGHT
+{
+  if (size(getActiveConnections()) > 0)
+  {
+     foreach $var (getActiveConnections())
+     {
+        if (getConnectionType($var) eq "RECEIVE")
+        {
+           $pc = getDCCPercentage($var);
+
+           if ($DCC_WATCH_TIMER eq "")
+           {
+              sub timertemp
+              {
+                 refreshWindow(getActiveWindow());
+              }
+              $DCC_WATCH_TIMER = addTimer(&timertemp, 2000);
+           }
+
+           return "\c32\r[\r" . left(getDCCFileName($var), 25) . "\r:\r $+ $pc $+ %\r]\r";
+        } 
+     }
+  }  
+
+  if ($DCC_WATCH_TIMER ne "")
+  {
+     stopTimer($DCC_WATCH_TIMER);
+     $DCC_WATCH_TIMER = "";
+  }
+
+  if (!-isSetT "ui.showtabs" && isServerConnected())
+  {
+     return "\c32\r[\r".getServerHost()."\r:\r".(getSessionId() + 1)."\r]";
+  }
+
+  return "\c32\Rj\RIRC\Bii\B";
+}
+
+set ON_CHANNELS 
+{
+  return "$nnn Channels: $parms";
+}
+
+set SET_IGNORE
+{
+   if ($0 eq "add") { return "\c40 $+ $nnn Added\b $parms \bto ignore list"; }
+   if ($0 eq "remove") { return "\c40 $+ $nnn Removed\b $parms \bfrom ignore list"; }
+}
+
+set SET_NOTIFY
+{
+   if ($0 eq "add") { return "\c40 $+ $nnn Added\b $parms \bto notify list"; }
+   if ($0 eq "remove") { return "\c40 $+ $nnn Removed\b $parms \bfrom notify list"; }
+}
+
+set PROCESS_DATA! 
+{
+  return "[0] $parms";
+}
+
+
+#
+# DCC Chat Related
+#
+
+set DCC_REQUEST 
+{
+   if ($2 eq "SEND")
+   {
+      return "\c42$nnn DCC SEND request from $nick $+ \r:\r $3 (" . formatBytes($6) . ")";
+   }
+
+   return "\c42$nnn DCC $2 request from $nick";
+}
+
+set CHATMSG
+{
+   return "\c31=\b $+ $0 $+ \b=\c17 $parms";
+}
+
+set SEND_CHAT_ERROR
+{
+   return "\c41$nnn there is no open chat with $0";
+}
+
+set SEND_CHAT
+{
+   if (-iswindow ("=" . $0))
+   {
+      return "\c31=\b $+ $me $+ \b=\c17 $parms";
+   }
+   else
+   {
+      return "\c31-> =\b $+ $0 $+ \b=\c17 $parms";
+   }
+}
+
+set CHAT_OPEN
+{
+   return "\c42$nnn Chat with\b $nick \bopened.";
+}
+
+set CHAT_CLOSE
+{
+   
+   return "\c41$nnn Chat with\b $nick \blost\b\r:\r $1-";
+}
+
+#
+# /dcc command...  don't want anyone feeling to left out :)
+#
+
+alias dcc
+{
+   if ($1 ne "")
+   {
+      call("/ $+ $0-", "use-built-in-command-only");
+      return;
+   }
+
+   echo("\c17\bT\bype     \bN\bick        \bI\bnformation");
+
+   foreach $conn (getActiveConnections())
+   {
+      $type = getConnectionType($conn);
+      $nick = getDCCNickname($conn);
+
+      $info = DCCInformation($conn);
+
+      echo("\c36$[7]type  \c35$[10]nick  $info");
+   }
+}
+
+set DCC_LIST_TYPE
+{
+   $conn = getDCCConnection($this);
+   return "\c36" . getConnectionType($conn);
+}
+
+set DCC_LIST_NICK
+{
+   $conn = getDCCConnection($this);
+   return "\c35" . getDCCNickname($conn);
+}
+
+sub DCCInformation
+{
+   local('$info $conn');
+
+   $conn = $1;
+   $type = getConnectionType($conn);
+
+   if (!-isdccopen $conn)
+   {
+     return "Waiting...";
+   }
+
+   if ($type eq "CHAT")
+   {
+     $info = "\c33\bI\bdle\r:\r " . formatTime(getDCCIdleTime($conn) / 1000);
+   }
+   else
+   {
+     $info = "\r(\r\bE\bst\r:\r " . formatTime2(getTimeRemaining($conn)) . "\r)\r";
+          
+     local('$a $b $c $d');
+     $a = getDCCPercentage($conn);
+     $b = getDCCFileName($conn);
+     $c = formatBytes(getTransferRate($conn)) . "/s";
+     $d = "\r(\r\bS\bize\r:\r " . formatBytes(getDCCSizeSoFar($conn)) . "\r)\r";
+
+     $info = "\c33 $+ $[21]info $+ $[-2]a $+ \r%\r $[7]c $+ $[22]d $+ $b"
+   }
+
+   return $info;
+}
+
+set DCC_LIST_INFORMATION
+{
+   return DCCInformation(getDCCConnection($this));
+}
+
+#
+# 
+#
+set RECEIVE_COMPLETE
+{
+   $dcc  = getDCCConnection($this);
+   $file = getDCCFileName($dcc);
+   $rate = formatBytes(getTransferRate($dcc)) . "/s";
+   return "\c41$nnn Receive of $file from $nick complete at $rate";
+}
+
+set SEND_COMPLETE
+{
+   return "\c41$nnn Send to $nick complete";
+}
+
+set RECEIVE_START
+{
+   $dcc  = getDCCConnection($this);
+   $file = getDCCFileName($dcc);
+   return "\c42$nnn Receive of $file from $nick has started";
+}
+
+set SEND_START
+{
+   printf("Start of send to $nick");
+   return "\c42$nnn Send to $nick has started";
+}
+
+set RECEIVE_FAILED
+{
+   return "\c41$nnn Receive from $nick has failed: $1-";
+}
+
+set SEND_FAILED
+{
+   return "\c41$nnn Send to $nick has failed: $1-";
+}
+
+#
+# Normal DCC Messages..  always fun
+#
+set RESUME_SUCCEEDED
+{
+   return "\c42$nnn Resume request to $nick successful";
+}
+
+set RESUME_FAILED
+{
+   return "\c41$nnn Resume request to $nick \bfailed\b";
+}
+
+set RESUME_REQUEST_ERROR
+{
+   return "\c41$nnn $nick has made a jacked up resume request";
+}
+
+set RESUME_REQUEST
+{
+   return "\c42$nnn $nick has requested to resume the dcc transfer";
+}
+
+set RESOLVED_LOCALINFO
+{
+    return "\C42*\B*\B* Resolved local host to\B $0";
+}
+
+# /dns reply
+set RESOLVED_HOST
+{
+    if ($2- ne "")
+    {
+       return "\C42*\B*\B* Resolved\b $0 \bto $2 $+ \r[\r $+ $1 $+ \r]\r";
+    }
+    else
+    {
+       return "\C42*\B*\B* Unable to resolve $0 $+ \r:\r host not found";
+    }
+}
+
+#
+# aliases
+#
+alias notify
+{
+   if ($1 ne "")
+   {
+      call("/ $+ $0-", "use-built-in-command-only");
+      return;
+   }
+
+   echo("\c17$nnn Signed on\r:");
+   
+   $output = "";
+
+   foreach $var (getSignedOnUsers())
+   {
+      $otime   = onlineFor($var);
+
+      if ($otime < 300)                # users signed on within the past 5 minutes
+      {
+         $output = "$output \b $+ $var $+ \b";
+      }
+      else if ($otime < (60 * 60))     # users signed on for up to an hour
+      {
+         $output = "$output $var";
+      }
+      else                             # anything over an hour
+      {
+         $output = "$output \r $+ $var $+ \r";
+      }
+   }
+ 
+   echo("\c17  $output");
+
+   echo("\c17$nnn Signed off\r:");
+   
+   $output = "";
+
+   foreach $var (getSignedOffUsers())
+   {
+      $output = "$output $var";
+   }
+  
+   echo("\c17  $output");
+}
+
+set IDENT_REQUEST
+{
+   return "\c39$nnn Ident request from $0";
+}
+
+set SERVER_ERROR
+{
+   return "\c37$nnn Server error: $parms";
+}
+
+set IRC_ATTEMPT_CONNECT
+{
+   return "\c19$nnn Attempting to connect to " . $0;
+}
+
+set IRC_DISCONNECT
+{
+   return "\c18$nnn Disconnected from\b " . getServerHost() . "\b\r:\r $parms";
+}
+
+set IRC_CONNECT
+{
+   return "\c19\r$nnn Connected to\r\b " . getServerHost() . "\b";
+}
+
+set IRC_RECONNECT
+{
+   return "\c19\r$nnn Attempting to reconnect to\r\b " . getServerHost() . "\b";
+}
+
+set INVITE
+{
+   return "\c24$nnn \b $+ $nick $+ \b invites you to join\r:\r $1";
+}
+
+set REPL_341
+{
+   return "\c33$nnn $1 has been invited to\r:\r\c36 $2";
+}
+
+#
+# Completes the current nickname in the editbox..
+#
+$_TAB_TEXT    = "";
+ at _TAB_NICKS   = array();
+$_TAB_LAST    = "";
+
+sub setTabInput
+{
+   $_TAB_TEXT = "$1 $+ $2";
+   $_TAB_LAST = $2;
+   setInputText(getActiveWindow(), $_TAB_TEXT);
+}
+
+bind tab
+{
+   local('$text @data $pnick');
+
+   $text  = getInputText(getActiveWindow());
+   
+   if (-ischannel $active && $text eq "/topic")
+   {
+      setTabInput("/topic $active " . getTopic($active));
+   }
+   else if ($_TAB_TEXT eq $text && size(@_TAB_NICKS) > 0)
+   {
+      if (left($text, 1) eq "/" && indexOf($text, " ") == -1)
+      {
+         setTabInput("/", shift(@_TAB_NICKS));
+      }
+      else 
+      {
+         $text  = substr($text, 0, strlen($text) - strlen($_TAB_LAST));
+         setTabInput("$text", shift(@_TAB_NICKS));
+      }
+   }
+   else if (left($text, 1) eq "/" && indexOf($text, " ") == -1)
+   {
+      $text       = substr($text, 1);
+      @_TAB_NICKS = array();
+     
+      foreach $var (getAliasList())
+      {
+         $var = lc($var);
+
+         if (left($var, strlen($text)) eq $text)
+         {
+            add(@_TAB_NICKS, $var, 0);
+         }
+         else if ($text isin $var)
+         {
+            push(@_TAB_NICKS, $var);
+         }
+      }
+
+      push(@_TAB_NICKS, $text);
+      setTabInput("/", shift(@_TAB_NICKS));
+   }
+   else if ($text ismatch '/dcc send \S+ (.+)' || 
+            $text ismatch '/send \S+ (.+)' || 
+            $text ismatch '/load (.+)' || 
+            $text ismatch '/theme (.+)' || 
+            $text ismatch '/xdcc offer (.+)' || 
+            $_IS_FILE_COMPLETE == 1)
+   {
+      @data  = matched();
+      $pnick = pop(@data);
+      $text  = substr($text, 0, strlen($text) - strlen($pnick));
+
+      @_TAB_NICKS = fileCompleteAll($pnick);
+
+      setTabInput("$text", shift(@_TAB_NICKS));
+   }
+   else if (-ischannel $active && strlen($text) > 0 && right($text, 1) ne " ")
+   {
+      @data  = split(' ', $text);
+      $pnick = pop(@data);
+      $text  = substr($text, 0, strlen($text) - strlen($pnick));
+
+      if ($pnick eq "#")
+      {
+         @_TAB_NICKS = array();
+         setTabInput("$text $+ $active", "");
+      }
+      else if (left($pnick, 1) eq "/")
+      {
+         # do nothing...  we don't want to nick complete a "command"
+      }
+      else
+      {
+         @_TAB_NICKS = nickCompleteAll($pnick, $active);
+         setTabInput("$text", shift(@_TAB_NICKS));
+      }
+   }
+   else if ($_LAST_MESSAGE)
+   {
+      @_TAB_NICKS = array();
+      setInputText(getActiveWindow(), "/msg $_LAST_MESSAGE ");
+   }
+}
+
+on msg
+{
+   $_LAST_MESSAGE = $nick;
+}
+
+
+
+



